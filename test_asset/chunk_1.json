{"tx_path":"kuMLOSJKG7O4NmSBY9KZ2PjU-5O4UBNFl_-kF9FnW7wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkkEg","packing":"unpacked","data_path":"B5cI4zB942Iup1a1_UyJhKyvqU-OGaw13sFN4TgKu4lyCNP6VKDh_Bt-1ZV1ysvzyNThZVgTro7sR7rjV2z3WQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAcu6tu-_VnDBnSlHMG_juPe2ePGl6FLt61I_LmO6W6-H5-qna36LNpooV1wsmpPCT222u24AFXo3xDosndNg9tgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAh3J2SLTxwfuNpJVy8rHrdnqCIGYv32c37EWCCjUeiK4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAA","chunk":"

﻿<table width="45%" border ="0">
<tr>
<td bgcolor="#FFE4E1"><font color="#800000" size="5"><p style="text-align:center"><b><a href="http://gutenberg.net.au" target="_blank">Project
Gutenberg Australia</a><br>
</b></font><font color="#800000" size="4"><i>a treasure-trove of literature</i><br>
</font>treasure found hidden with no evidence of ownership</p></td>
</tr>
</table>
<!-- ad goes here -->
<pre>



Title: Nineteen eighty-four
Author: George Orwell (pseudonym of Eric Blair) (1903-1950)
* A Project Gutenberg of Australia eBook *
eBook No.:  0100021.txt
Language:   English
Date first posted: August 2001
Date most recently updated: November 2008

Project Gutenberg of Australia eBooks are created from printed editions
which are in the public domain in Australia, unless a copyright notice
is included. We do NOT keep any eBooks in compliance with a particular
paper edition.

Copyright laws are changing all over the world. Be sure to check the
copyright laws for your country before downloading or redistributing this
file.

This eBook is made available at no cost and with almost no restrictions
whatsoever. You may copy it, give it away or re-use it under the terms
of the Project Gutenberg of Australia License which may be viewed online at
http://gutenberg.net.au/licence.html

To contact Project Gutenberg of Australia go to http://gutenberg.net.au


Title:      Nineteen eighty-four
Author:     George Orwell (pseudonym of Eric Blair) (1903-1950)




PART ONE



Chapter 1



It was a bright cold day in April, and the clocks were striking thirteen.
Winston Smith, his chin nuzzled into his breast in an effort to escape the
vile wind, slipped quickly through the glass doors of Victory Mansions,
though not quickly enough to prevent a swirl of gritty dust from entering
along with him.

The hallway smelt of boiled cabbage and old rag mats. At one end of it a
coloured poster, too large for indoor display, had been tacked to the wall.
It depicted simply an enormous face, more than a metre wide: the face of a
man of about forty-five, with a heavy black moustache and ruggedly handsome
features. Winston made for the stairs. It was no use trying the lift. Even
at the best of times it was seldom working, and at present the electric
current was cut off during daylight hours. It was part of the economy drive
in preparation for Hate Week. The flat was seven flights up, and Winston,
who was thirty-nine and had a varicose ulcer above his right ankle, went
slowly, resting several times on the way. On each landing, opposite the
lift-shaft, the poster with the enormous face gazed from the wall. It was
one of those pictures which are so contrived that the eyes follow you about
when you move. BIG BROTHER IS WATCHING YOU, the caption beneath it ran.

Inside the flat a fruity voice was reading out a list of figures which had
something to do with the production of pig-iron. The voice came from an
oblong metal plaque like a dulled mirror which formed part of the surface
of the right-hand wall. Winston turned a switch and the voice sank
somewhat, though the words were still distinguishable. The instrument
(the telescreen, it was called) could be dimmed, but there was no way of
shutting it off completely. He moved over to the window: a smallish, frail
figure, the meagreness of his body merely emphasized by the blue overalls
which were the uniform of the party. His hair was very fair, his face
naturally sanguine, his skin roughened by coarse soap and blunt razor
blades and the cold of the winter that had just ended.

Outside, even through the shut window-pane, the world looked cold. Down in
the street little eddies of wind were whirling dust and torn paper into
spirals, and though the sun was shining and the sky a harsh blue, there
seemed to be no colour in anything, except the posters that were plastered
everywhere. The black-moustachio'd face gazed down from every commanding
corner. There was one on the house-front immediately opposite. BIG BROTHER
IS WATCHING YOU, the caption said, while the dark eyes looked deep into
Winston's own. Down at street level another poster, torn at one corner,
flapped fitfully in the wind, alternately covering and uncovering the
single word INGSOC. In the far distance a helicopter skimmed down between
the roofs, hovered for an instant like a bluebottle, and darted away again
with a curving flight. It was the police patrol, snooping into people's
windows. The patrols did not matter, however. Only the Thought Police
mattered.

Behind Winston's back the voice from the telescreen was still babbling away
about pig-iron and the overfulfilment of the Ninth Three-Year Plan. The
telescreen received and transmitted simultaneously. Any sound that Winston
made, above the level of a very low whisper, would be picked up by it,
moreover, so long as he remained within the field of vision which the metal
plaque commanded, he could be seen as well as heard. There was of course
no way of knowing whether you were being watched at any given moment. How
often, or on what system, the Thought Police plugged in on any individual
wire was guesswork. It was even conceivable that they watched everybody all
the time. But at any rate they could plug in your wire whenever they wanted
to. You had to live--did live, from habit that became instinct--in the
assumption that every sound you made was overheard, and, except in
darkness, every movement scrutinized.

Winston kept his back turned to the telescreen. It was safer; though, as he
well knew, even a back can be revealing. A kilometre away the Ministry of
Truth, his place of work, towered vast and white above the grimy landscape.
This, he thought with a sort of vague distaste--this was London, chief
city of Airstrip One, itself the third most populous of the provinces of
Oceania. He tried to squeeze out some childhood memory that should tell him
whether London had always been quite like this. Were there always these
vistas of rotting nineteenth-century houses, their sides shored up with
baulks of timber, their windows patched with cardboard and their roofs
with corrugated iron, their crazy garden walls sagging in all directions?
And the bombed sites where the plaster dust swirled in the air and the
willow-herb straggled over the heaps of rubble; and the places where the
bombs had cleared a larger patch and there had sprung up sordid colonies
of wooden dwellings like chicken-houses? But it was no use, he could not
remember: nothing remained of his childhood except a series of bright-lit
tableaux occurring against no background and mostly unintelligible.

The Ministry of Truth--Minitrue, in Newspeak [Newspeak was the official
language of Oceania. For an account of its structure and etymology see
Appendix.]--was startlingly different from any other object in sight. It
was an enormous pyramidal structure of glittering white concrete, soaring
up, terrace after terrace, 300 metres into the air. From where Winston
stood it was just possible to read, picked out on its white face in
elegant lettering, the three slogans of the Party:


  WAR IS PEACE
  FREEDOM IS SLAVERY
  IGNORANCE IS STRENGTH


The Ministry of Truth contained, it was said, three thousand rooms above
ground level, and corresponding ramifications below. Scattered about London
there were just three other buildings of similar appearance and size. So
completely did they dwarf the surrounding architecture that from the roof
of Victory Mansions you could see all four of them simultaneously. They
were the homes of the four Ministries between which the entire apparatus
of government was divided. The Ministry of Truth, which concerned itself
with news, entertainment, education, and the fine arts. The Ministry of
Peace, which concerned itself with war. The Ministry of Love, which
maintained law and order. And the Ministry of Plenty, which was responsible
for economic affairs. Their names, in Newspeak: Minitrue, Minipax, Miniluv,
and Miniplenty.

The Ministry of Love was the really frightening one. There were no windows
in it at all. Winston had never been inside the Ministry of Love, nor
within half a kilometre of it. It was a place impossible to enter except
on official business, and then only by penetrating through a maze of
barbed-wire entanglements, steel doors, and hidden machine-gun nests. Even
the streets leading up to its outer barriers were roamed by gorilla-faced
guards in black uniforms, armed with jointed truncheons.

Winston turned round abruptly. He had set his features into the
expression of quiet optimism which it was advisable to wear when facing
the telescreen. He crossed the room into the tiny kitchen. By leaving
the Ministry at this time of day he had sacrificed his lunch in the
canteen, and he was aware that there was no food in the kitchen except
a hunk of dark-coloured bread which had got to be saved for tomorrow's
breakfast. He took down from the shelf a bottle of colourless liquid
with a plain white label marked VICTORY GIN. It gave off a sickly, oily
smell, as of Chinese rice-spirit. Winston poured out nearly a teacupful,
nerved himself for a shock, and gulped it down like a dose of medicine.

Instantly his face turned scarlet and the water ran out of his eyes. The
stuff was like nitric acid, and moreover, in swallowing it one had the
sensation of being hit on the back of the head with a rubber club. The
next moment, however, the burning in his belly died down and the world
began to look more cheerful. He took a cigarette from a crumpled packet
marked VICTORY CIGARETTES and incautiously held it upright, whereupon the
tobacco fell out on to the floor. With the next he was more successful.
He went back to the living-room and sat down at a small table that stood
to the left of the telescreen. From the table drawer he took out a
penholder, a bottle of ink, and a thick, quarto-sized blank book with a
red back and a marbled cover.

For some reason the telescreen in the living-room was in an unusual
position. Instead of being placed, as was normal, in the end wall, where
it could command the whole room, it was in the longer wall, opposite the
window. To one side of it there was a shallow alcove in which Winston
was now sitting, and which, when the flats were built, had probably been
intended to hold bookshelves. By sitting in the alcove, and keeping well
back, Winston was able to remain outside the range of the telescreen, so
far as sight went. He could be heard, of course, but so long as he stayed
in his present position he could not be seen. It was partly the unusual
geography of the room that had suggested to him the thing that he was now
about to do.

But it had also been suggested by the book that he had just taken out of
the drawer. It was a peculiarly beautiful book. Its smooth creamy paper,
a little yellowed by age, was of a kind that had not been manufactured for
at least forty years past. He could guess, however, that the book was much
older than that. He had seen it lying in the window of a frowsy little
junk-shop in a slummy quarter of the town (just what quarter he did not
now remember) and had been stricken immediately by an overwhelming desire
to possess it. Party members were supposed not to go into ordinary shops
('dealing on the free market', it was called), but the rule was not
strictly kept, because there were various things, such as shoelaces and
razor blades, which it was impossible to get hold of in any other way. He
had given a quick glance up and down the street and then had slipped inside
and bought the book for two dollars fifty. At the time he was not conscious
of wanting it for any particular purpose. He had carried it guiltily home
in his briefcase. Even with nothing written in it, it was a compromising
possession.

The thing that he was about to do was to open a diary. This was not illegal
(nothing was illegal, since there were no longer any laws), but if detected
it was reasonably certain that it would be punished by death, or at least
by twenty-five years in a forced-labour camp. Winston fitted a nib into
the penholder and sucked it to get the grease off. The pen was an archaic
instrument, seldom used even for signatures, and he had procured one,
furtively and with some difficulty, simply because of a feeling that the
beautiful creamy paper deserved to be written on with a real nib instead
of being scratched with an ink-pencil. Actually he was not used to writing
by hand. Apart from very short notes, it was usual to dictate everything
into the speak-write which was of course impossible for his present
purpose. He dipped the pen into the ink and then faltered for just a
second. A tremor had gone through his bowels. To mark the paper was the
decisive act. In small clumsy letters he wrote:


   April 4th, 1984.


He sat back. A sense of complete helplessness had descended upon him. To
begin with, he did not know with any certainty that this was 1984. It
must be round about that date, since he was fairly sure that his age was
thirty-nine, and he believed that he had been born in 1944 or 1945; but
it was never possible nowadays to pin down any date within a year or two.

For whom, it suddenly occurred to him to wonder, was he writing this diary?
For the future, for the unborn. His mind hovered for a moment round the
doubtful date on the page, and then fetched up with a bump against the
Newspeak word DOUBLETHINK. For the first time the magnitude of what he had
undertaken came home to him. How could you communicate with the future? It
was of its nature impossible. Either the future would resemble the present,
in which case it would not listen to him: or it would be different from it,
and his predicament would be meaningless.

For some time he sat gazing stupidly at the paper. The telescreen had
changed over to strident military music. It was curious that he seemed
not merely to have lost the power of expressing himself, but even to have
forgotten what it was that he had originally intended to say. For weeks
past he had been making ready for this moment, and it had never crossed
his mind that anything would be needed except courage. The actual writing
would be easy. All he had to do was to transfer to paper the interminable
restless monologue that had been running inside his head, literally for
years. At this moment, however, even the monologue had dried up. Moreover
his varicose ulcer had begun itching unbearably. He dared not scratch it,
because if he did so it always became inflamed. The seconds were ticking
by. He was conscious of nothing except the blankness of the page in front
of him, the itching of the skin above his ankle, the blaring of the music,
and a slight booziness caused by the gin.

Suddenly he began writing in sheer panic, only imperfectly aware of what
he was setting down. His small but childish handwriting straggled up and
down the page, shedding first its capital letters and finally even its
full stops:


   April 4th, 1984. Last night to the flicks. All war films. One very good
one of a ship full of refugees being bombed somewhere in the Mediterranean.
Audience much amused by shots of a great huge fat man trying to swim away
with a helicopter after him, first you saw him wallowing along in the
water like a porpoise, then you saw him through the helicopters gunsights,
then he was full of holes and the sea round him turned pink and he sank as
suddenly as though the holes had let in the water, audience shouting with
laughter when he sank. then you saw a lifeboat full of children with a
helicopter hovering over it. there was a middle-aged woman might have been
a jewess sitting up in the bow with a little boy about three years old in
her arms. little boy screaming with fright and hiding his head between her
breasts as if he was trying to burrow right into her and the woman putting
her arms round him and comforting him although she was blue with fright
herself, all the time covering him up as much as possible as if she thought
her arms could keep the bullets off him. then the helicopter planted a 20
kilo bomb in among them terrific flash and the boat went all to matchwood.
then there was a wonderful shot of a child's arm going up up up right up
into the air a helicopter with a camera in its nose must have followed it
up and there was a lot of applause from the party seats but a woman down in
the prole part of the house suddenly started kicking up a fuss and shouting
they didnt oughter of showed it not in front of kids they didnt it aint
right not in front of kids it aint until the police turned her turned her
out i dont suppose anything happened to her nobody cares what the proles
say typical prole reaction they never----


Winston stopped writing, partly because he was suffering from cramp. He did
not know what had made him pour out this stream of rubbish. But the curious
thing was that while he was doing so a totally different memory had
clarified itself in his mind, to the point where he almost felt equal to
writing it down. It was, he now realized, because of this other incident
that he had suddenly decided to come home and begin the diary today.

It had happened that morning at the Ministry, if anything so nebulous could
be said to happen.

It was nearly eleven hundred, and in the Records Department, where Winston
worked, they were dragging the chairs out of the cubicles and grouping them
in the centre of the hall opposite the big telescreen, in preparation for
the Two Minutes Hate. Winston was just taking his place in one of the
middle rows when two people whom he knew by sight, but had never spoken
to, came unexpectedly into the room. One of them was a girl whom he often
passed in the corridors. He did not know her name, but he knew that she
worked in the Fiction Department. Presumably--since he had sometimes seen
her with oily hands and carrying a spanner--she had some mechanical job
on one of the novel-writing machines. She was a bold-looking girl, of
about twenty-seven, with thick hair, a freckled face, and swift, athletic
movements. A narrow scarlet sash, emblem of the Junior Anti-Sex League, was
wound several times round the waist of her overalls, just tightly enough to
bring out the shapeliness of her hips. Winston had disliked her from the
very first moment of seeing her. He knew the reason. It was because of the
atmosphere of hockey-fields and cold baths and community hikes and general
clean-mindedness which she managed to carry about with her. He disliked
nearly all women, and especially the young and pretty ones. It was always
the women, and above all the young ones, who were the most bigoted
adherents of the Party, the swallowers of slogans, the amateur spies and
nosers-out of unorthodoxy. But this particular girl gave him the impression
of being more dangerous than most. Once when they passed in the corridor
she gave him a quick sidelong glance which seemed to pierce right into
him and for a moment had filled him with black terror. The idea had even
crossed his mind that she might be an agent of the Thought Police. That,
it was true, was very unlikely. Still, he continued to feel a peculiar
uneasiness, which had fear mixed up in it as well as hostility, whenever
she was anywhere near him.

The other person was a man named O'Brien, a member of the Inner Party and
holder of some post so important and remote that Winston had only a dim
idea of its nature. A momentary hush passed over the group of people
round the chairs as they saw the black overalls of an Inner Party member
approaching. O'Brien was a large, burly man with a thick neck and a coarse,
humorous, brutal face. In spite of his formidable appearance he had a
certain charm of manner. He had a trick of resettling his spectacles on
his nose which was curiously disarming--in some indefinable way, curiously
civilized. It was a gesture which, if anyone had still thought in such
terms, might have recalled an eighteenth-century nobleman offering his
snuffbox. Winston had seen O'Brien perhaps a dozen times in almost as many
years. He felt deeply drawn to him, and not solely because he was intrigued
by the contrast between O'Brien's urbane manner and his prize-fighter's
physique. Much more it was because of a secretly held belief--or perhaps
not even a belief, merely a hope--that O'Brien's political orthodoxy was
not perfect. Something in his face suggested it irresistibly. And again,
perhaps it was not even unorthodoxy that was written in his face, but
simply intelligence. But at any rate he had the appearance of being a
person that you could talk to if somehow you could cheat the telescreen and
get him alone. Winston had never made the smallest effort to verify this
guess: indeed, there was no way of doing so. At this moment O'Brien glanced
at his wrist-watch, saw that it was nearly eleven hundred, and evidently
decided to stay in the Records Department until the Two Minutes Hate was
over. He took a chair in the same row as Winston, a couple of places away.
A small, sandy-haired woman who worked in the next cubicle to Winston was
between them. The girl with dark hair was sitting immediately behind.

The next moment a hideous, grinding speech, as of some monstrous machine
running without oil, burst from the big telescreen at the end of the room.
It was a noise that set one's teeth on edge and bristled the hair at the
back of one's neck. The Hate had started.

As usual, the face of Emmanuel Goldstein, the Enemy of the People, had
flashed on to the screen. There were hisses here and there among the
audience. The little sandy-haired woman gave a squeak of mingled fear and
disgust. Goldstein was the renegade and backslider who once, long ago
(how long ago, nobody quite remembered), had been one of the leading
figures of the Party, almost on a level with Big Brother himself, and
then had engaged in counter-revolutionary activities, had been condemned
to death, and had mysteriously escaped and disappeared. The programmes
of the Two Minutes Hate varied from day to day, but there was none in
which Goldstein was not the principal figure. He was the primal traitor,
the earliest defiler of the Party's purity. All subsequent crimes against
the Party, all treacheries, acts of sabotage, heresies, deviations,
sprang directly out of his teaching. Somewhere or other he was still
alive and hatching his conspiracies: perhaps somewhere beyond the sea,
under the protection of his foreign paymasters, perhaps even--so it was
occasionally rumoured--in some hiding-place in Oceania itself.

Winston's diaphragm was constricted. He could never see the face of
Goldstein without a painful mixture of emotions. It was a lean Jewish face,
with a great fuzzy aureole of white hair and a small goatee beard--a
clever face, and yet somehow inherently despicable, with a kind of senile
silliness in the long thin nose, near the end of which a pair of spectacles
was perched. It resembled the face of a sheep, and the voice, too, had a
sheep-like quality. Goldstein was delivering his usual venomous attack
upon the doctrines of the Party--an attack so exaggerated and perverse that
a child should have been able to see through it, and yet just plausible
enough to fill one with an alarmed feeling that other people, less
level-headed than oneself, might be taken in by it. He was abusing Big
Brother, he was denouncing the dictatorship of the Party, he was demanding
the immediate conclusion of peace with Eurasia, he was advocating freedom
of speech, freedom of the Press, freedom of assembly, freedom of thought,
he was crying hysterically that the revolution had been betrayed--and all
this in rapid polysyllabic speech which was a sort of parody of the
habitual style of the orators of the Party, and even contained Newspeak
words: more Newspeak words, indeed, than any Party member would normally
use in real life. And all the while, lest one should be in any doubt as to
the reality which Goldstein's specious claptrap covered, behind his head on
the telescreen there marched the endless columns of the Eurasian army--row
after row of solid-looking men with expressionless Asiatic faces, who swam
up to the surface of the screen and vanished, to be replaced by others
exactly similar. The dull rhythmic tramp of the soldiers' boots formed the
background to Goldstein's bleating voice.

Before the Hate had proceeded for thirty seconds, uncontrollable
exclamations of rage were breaking out from half the people in the room.
The self-satisfied sheep-like face on the screen, and the terrifying power
of the Eurasian army behind it, were too much to be borne: besides,
the sight or even the thought of Goldstein produced fear and anger
automatically. He was an object of hatred more constant than either Eurasia
or Eastasia, since when Oceania was at war with one of these Powers it was
generally at peace with the other. But what was strange was that although
Goldstein was hated and despised by everybody, although every day and a
thousand times a day, on platforms, on the telescreen, in newspapers,
in books, his theories were refuted, smashed, ridiculed, held up to the
general gaze for the pitiful rubbish that they were--in spite of all this,
his influence never seemed to grow less. Always there were fresh dupes
waiting to be seduced by him. A day never passed when spies and saboteurs
acting under his directions were not unmasked by the Thought Police.
He was the commander of a vast shadowy army, an underground network of
conspirators dedicated to the overthrow of the State. The Brotherhood, its
name was supposed to be. There were also whispered stories of a terrible
book, a compendium of all the heresies, of which Goldstein was the author
and which circulated clandestinely here and there. It was a book without a
title. People referred to it, if at all, simply as THE BOOK. But one knew
of such things only through vague rumours. Neither the Brotherhood nor
THE BOOK was a subject that any ordinary Party member would mention if
there was a way of avoiding it.

In its second minute the Hate rose to a frenzy. People were leaping up and
down in their places and shouting at the tops of their voices in an effort
to drown the maddening bleating voice that came from the screen. The little
sandy-haired woman had turned bright pink, and her mouth was opening and
shutting like that of a landed fish. Even O'Brien's heavy face was flushed.
He was sitting very straight in his chair, his powerful chest swelling and
quivering as though he were standing up to the assault of a wave. The
dark-haired girl behind Winston had begun crying out 'Swine! Swine! Swine!'
and suddenly she picked up a heavy Newspeak dictionary and flung it at the
screen. It struck Goldstein's nose and bounced off; the voice continued
inexorably. In a lucid moment Winston found that he was shouting with the
others and kicking his heel violently against the rung of his chair. The
horrible thing about the Two Minutes Hate was not that one was obliged to
act a part, but, on the contrary, that it was impossible to avoid joining
in. Within thirty seconds any pretence was always unnecessary. A hideous
ecstasy of fear and vindictiveness, a desire to kill, to torture, to smash
faces in with a sledge-hammer, seemed to flow through the whole group of
people like an electric current, turning one even against one's will into
a grimacing, screaming lunatic. And yet the rage that one felt was an
abstract, undirected emotion which could be switched from one object to
another like the flame of a blowlamp. Thus, at one moment Winston's hatred
was not turned against Goldstein at all, but, on the contrary, against
Big Brother, the Party, and the Thought Police; and at such moments his
heart went out to the lonely, derided heretic on the screen, sole guardian
of truth and sanity in a world of lies. And yet the very next instant he
was at one with the people about him, and all that was said of Goldstein
seemed to him to be true. At those moments his secret loathing of Big
Brother changed into adoration, and Big Brother seemed to tower up, an
invincible, fearless protector, standing like a rock against the hordes
of Asia, and Goldstein, in spite of his isolation, his helplessness, and
the doubt that hung about his very existence, seemed like some sinister
enchanter, capable by the mere power of his voice of wrecking the structure
of civilization.

It was even possible, at moments, to switch one's hatred this way or that
by a voluntary act. Suddenly, by the sort of violent effort with which one
wrenches one's head away from the pillow in a nightmare, Winston succeeded
in transferring his hatred from the face on the screen to the dark-haired
girl behind him. Vivid, beautiful hallucinations flashed through his mind.
He would flog her to death with a rubber truncheon. He would tie her naked
to a stake and shoot her full of arrows like Saint Sebastian. He would
ravish her and cut her throat at the moment of climax. Better than before,
moreover, he realized WHY it was that he hated her. He hated her because
she was young and pretty and sexless, because he wanted to go to bed with
her and would never do so, because round her sweet supple waist, which
seemed to ask you to encircle it with your arm, there was only the odious
scarlet sash, aggressive symbol of chastity.

The Hate rose to its climax. The voice of Goldstein had become an actual
sheep's bleat, and for an instant the face changed into that of a sheep.
Then the sheep-face melted into the figure of a Eurasian soldier who seemed
to be advancing, huge and terrible, his sub-machine gun roaring, and
seeming to spring out of the surface of the screen, so that some of the
people in the front row actually flinched backwards in their seats. But
in the same moment, drawing a deep sigh of relief from everybody, the
hostile figure melted into the face of Big Brother, black-haired,
black-moustachio'd, full of power and mysterious calm, and so vast that
it almost filled up the screen. Nobody heard what Big Brother was saying.
It was merely a few words of encouragement, the sort of words that are
uttered in the din of battle, not distinguishable individually but
restoring confidence by the fact of being spoken. Then the face of Big
Brother faded away again, and instead the three slogans of the Party stood
out in bold capitals:


  WAR IS PEACE
  FREEDOM IS SLAVERY
  IGNORANCE IS STRENGTH


But the face of Big Brother seemed to persist for several seconds on the
screen, as though the impact that it had made on everyone's eyeballs was
too vivid to wear off immediately. The little sandy-haired woman had flung
herself forward over the back of the chair in front of her. With a
tremulous murmur that sounded like 'My Saviour!' she extended her arms
towards the screen. Then she buried her face in her hands. It was apparent
that she was uttering a prayer.

At this moment the entire group of people broke into a deep, slow,
rhythmical chant of 'B-B!...B-B!'--over and over again, very slowly, with a
long pause between the first 'B' and the second--a heavy, murmurous sound,
somehow curiously savage, in the background of which one seemed to hear the
stamp of naked feet and the throbbing of tom-toms. For perhaps as much as
thirty seconds they kept it up. It was a refrain that was often heard in
moments of overwhelming emotion. Partly it was a sort of hymn to the wisdom
and majesty of Big Brother, but still more it was an act of self-hypnosis,
a deliberate drowning of consciousness by means of rhythmic noise.
Winston's entrails seemed to grow cold. In the Two Minutes Hate he could
not help sharing in the general delirium, but this sub-human chanting of
'B-B!...B-B!' always filled him with horror. Of course he chanted with the
rest: it was impossible to do otherwise. To dissemble your feelings, to
control your face, to do what everyone else was doing, was an instinctive
reaction. But there was a space of a couple of seconds during which the
expression of his eyes might conceivably have betrayed him. And it was
exactly at this moment that the significant thing happened--if, indeed,
it did happen.

Momentarily he caught O'Brien's eye. O'Brien had stood up. He had taken
off his spectacles and was in the act of resettling them on his nose with
his characteristic gesture. But there was a fraction of a second when
their eyes met, and for as long as it took to happen Winston knew--yes, he
KNEW!--that O'Brien was thinking the same thing as himself. An unmistakable
message had passed. It was as though their two minds had opened and the
thoughts were flowing from one into the other through their eyes. 'I am
with you,' O'Brien seemed to be saying to him. 'I know precisely what you
are feeling. I know all about your contempt, your hatred, your disgust.
But don't worry, I am on your side!' And then the flash of intelligence
was gone, and O'Brien's face was as inscrutable as everybody else's.

That was all, and he was already uncertain whether it had happened. Such
incidents never had any sequel. All that they did was to keep alive in him
the belief, or hope, that others besides himself were the enemies of the
Party. Perhaps the rumours of vast underground conspiracies were true after
all--perhaps the Brotherhood really existed! It was impossible, in spite
of the endless arrests and confessions and executions, to be sure that the
Brotherhood was not simply a myth. Some days he believed in it, some days
not. There was no evidence, only fleeting glimpses that might mean anything
or nothing: snatches of overheard conversation, faint scribbles on lavatory
walls--once, even, when two strangers met, a small movement of the hand
which had looked as though it might be a signal of recognition. It was all
guesswork: very likely he had imagined everything. He had gone back to his
cubicle without looking at O'Brien again. The idea of following up their
momentary contact hardly crossed his mind. It would have been inconceivably
dangerous even if he had known how to set about doing it. For a second, two
seconds, they had exchanged an equivocal glance, and that was the end of
the story. But even that was a memorable event, in the locked loneliness in
which one had to live.

Winston roused himself and sat up straighter. He let out a belch. The gin
was rising from his stomach.

His eyes re-focused on the page. He discovered that while he sat helplessly
musing he had also been writing, as though by automatic action. And it was
no longer the same cramped, awkward handwriting as before. His pen had slid
voluptuously over the smooth paper, printing in large neat capitals--


  DOWN WITH BIG BROTHER
  DOWN WITH BIG BROTHER
  DOWN WITH BIG BROTHER
  DOWN WITH BIG BROTHER
  DOWN WITH BIG BROTHER


over and over again, filling half a page.

He could not help feeling a twinge of panic. It was absurd, since the
writing of those particular words was not more dangerous than the initial
act of opening the diary, but for a moment he was tempted to tear out the
spoiled pages and abandon the enterprise altogether.

He did not do so, however, because he knew that it was useless. Whether he
wrote DOWN WITH BIG BROTHER, or whether he refrained from writing it, made
no difference. Whether he went on with the diary, or whether he did not go
on with it, made no difference. The Thought Police would get him just the
same. He had committed--would still have committed, even if he had never
set pen to paper--the essential crime that contained all others in itself.
Thoughtcrime, they called it. Thoughtcrime was not a thing that could be
concealed for ever. You might dodge successfully for a while, even for
years, but sooner or later they were bound to get you.

It was always at night--the arrests invariably happened at night. The
sudden jerk out of sleep, the rough hand shaking your shoulder, the lights
glaring in your eyes, the ring of hard faces round the bed. In the vast
majority of cases there was no trial, no report of the arrest. People
simply disappeared, always during the night. Your name was removed from the
registers, every record of everything you had ever done was wiped out, your
one-time existence was denied and then forgotten. You were abolished,
annihilated: VAPORIZED was the usual word.

For a moment he was seized by a kind of hysteria. He began writing in a
hurried untidy scrawl:


   theyll shoot me i don't care theyll shoot me in the back of the neck i
dont care down with big brother they always shoot you in the back of the
neck i dont care down with big brother----


He sat back in his chair, slightly ashamed of himself, and laid down
the pen. The next moment he started violently. There was a knocking at
the door.

Already! He sat as still as a mouse, in the futile hope that whoever it was
might go away after a single attempt. But no, the knocking was repeated.
The worst thing of all would be to delay. His heart was thumping like a
drum, but his face, from long habit, was probably expressionless. He got
up and moved heavily towards the door.




Chapter 2



As he put his hand to the door-knob Winston saw that he had left the
diary open on the table. DOWN WITH BIG BROTHER was written all over it,
in letters almost big enough to be legible across the room. It was an
inconceivably stupid thing to have done. But, he realized, even in his
panic he had not wanted to smudge the creamy paper by shutting the book
while the ink was wet.

He drew in his breath and opened the door. Instantly a warm wave of relief
flowed through him. A colourless, crushed-looking woman, with wispy hair
and a lined face, was standing outside.

'Oh, comrade,' she began in a dreary, whining sort of voice, 'I thought I
heard you come in. Do you think you could come across and have a look at
our kitchen sink? It's got blocked up and----'

It was Mrs Parsons, the wife of a neighbour on the same floor. ('Mrs' was
a word somewhat discountenanced by the Party--you were supposed to call
everyone 'comrade'--but with some women one used it instinctively.) She was
a woman of about thirty, but looking much older. One had the impression
that there was dust in the creases of her face. Winston followed her down
the passage. These amateur repair jobs were an almost daily irritation.
Victory Mansions were old flats, built in 1930 or thereabouts, and were
falling to pieces. The plaster flaked constantly from ceilings and walls,
the pipes burst in every hard frost, the roof leaked whenever there was
snow, the heating system was usually running at half steam when it was not
closed down altogether from motives of economy. Repairs, except what you
could do for yourself, had to be sanctioned by remote committees which
were liable to hold up even the mending of a window-pane for two years.

'Of course it's only because Tom isn't home,' said Mrs Parsons vaguely.

The Parsons' flat was bigger than Winston's, and dingy in a different
way. Everything had a battered, trampled-on look, as though the
place had just been visited by some large violent animal. Games
impedimenta--hockey-sticks, boxing-gloves, a burst football, a pair of
sweaty shorts turned inside out--lay all over the floor, and on the
table there was a litter of dirty dishes and dog-eared exercise-books.
On the walls were scarlet banners of the Youth League and the Spies, and
a full-sized poster of Big Brother. There was the usual boiled-cabbage
smell, common to the whole building, but it was shot through by a sharper
reek of sweat, which--one knew this at the first sniff, though it was
hard to say how--was the sweat of some person not present at the moment.
In another room someone with a comb and a piece of toilet paper was
trying to keep tune with the military music which was still issuing
from the telescreen.

'It's the children,' said Mrs Parsons, casting a half-apprehensive glance
at the door. 'They haven't been out today. And of course----'

She had a habit of breaking off her sentences in the middle. The kitchen
sink was full nearly to the brim with filthy greenish water which smelt
worse than ever of cabbage. Winston knelt down and examined the angle-joint
of the pipe. He hated using his hands, and he hated bending down, which was
always liable to start him coughing. Mrs Parsons looked on helplessly.

'Of course if Tom was home he'd put it right in a moment,' she said.
'He loves anything like that. He's ever so good with his hands, Tom is.'

Parsons was Winston's fellow-employee at the Ministry of Truth. He was
a fattish but active man of paralysing stupidity, a mass of imbecile
enthusiasms--one of those completely unquestioning, devoted drudges on
whom, more even than on the Thought Police, the stability of the Party
depended. At thirty-five he had just been unwillingly evicted from the
Youth League, and before graduating into the Youth League he had managed to
stay on in the Spies for a year beyond the statutory age. At the Ministry
he was employed in some subordinate post for which intelligence was not
required, but on the other hand he was a leading figure on the Sports
Committee and all the other committees engaged in organizing community
hikes, spontaneous demonstrations, savings campaigns, and voluntary
activities generally. He would inform you with quiet pride, between whiffs
of his pipe, that he had put in an appearance at the Community Centre every
evening for the past four years. An overpowering smell of sweat, a sort of
unconscious testimony to the strenuousness of his life, followed him about
wherever he went, and even remained behind him after he had gone.

'Have you got a spanner?' said Winston, fiddling with the nut on the
angle-joint.

'A spanner,' said Mrs Parsons, immediately becoming invertebrate. 'I don't
know, I'm sure. Perhaps the children----'

There was a trampling of boots and another blast on the comb as the
children charged into the living-room. Mrs Parsons brought the spanner.
Winston let out the water and disgustedly removed the clot of human hair
that had blocked up the pipe. He cleaned his fingers as best he could in
the cold water from the tap and went back into the other room.

'Up with your hands!' yelled a savage voice.

A handsome, tough-looking boy of nine had popped up from behind the table
and was menacing him with a toy automatic pistol, while his small sister,
about two years younger, made the same gesture with a fragment of wood.
Both of them were dressed in the blue shorts, grey shirts, and red
neckerchiefs which were the uniform of the Spies. Winston raised his hands
above his head, but with an uneasy feeling, so vicious was the boy's
demeanour, that it was not altogether a game.

'You're a traitor!' yelled the boy. 'You're a thought-criminal! You're a
Eurasian spy! I'll shoot you, I'll vaporize you, I'll send you to the salt
mines!'

Suddenly they were both leaping round him, shouting 'Traitor!' and
'Thought-criminal!' the little girl imitating her brother in every
movement. It was somehow slightly frightening, like the gambolling of
tiger cubs which will soon grow up into man-eaters. There was a sort of
calculating ferocity in the boy's eye, a quite evident desire to hit or
kick Winston and a consciousness of being very nearly big enough to do so.
It was a good job it was not a real pistol he was holding, Winston thought.

Mrs Parsons' eyes flitted nervously from Winston to the children, and back
again. In the better light of the living-room he noticed with interest
that there actually was dust in the creases of her face.

'They do get so noisy,' she said. 'They're disappointed because they
couldn't go to see the hanging, that's what it is. I'm too busy to take
them. and Tom won't be back from work in time.'

'Why can't we go and see the hanging?' roared the boy in his huge voice.

'Want to see the hanging! Want to see the hanging!' chanted the little
girl, still capering round.

Some Eurasian prisoners, guilty of war crimes, were to be hanged in the
Park that evening, Winston remembered. This happened about once a month,
and was a popular spectacle. Children always clamoured to be taken to see
it. He took his leave of Mrs Parsons and made for the door. But he had not
gone six steps down the passage when something hit the back of his neck an
agonizingly painful blow. It was as though a red-hot wire had been jabbed
into him. He spun round just in time to see Mrs Parsons dragging her son
back into the doorway while the boy pocketed a catapult.

'Goldstein!' bellowed the boy as the door closed on him. But what most
struck Winston was the look of helpless fright on the woman's greyish face.

Back in the flat he stepped quickly past the telescreen and sat down at the
table again, still rubbing his neck. The music from the telescreen had
stopped. Instead, a clipped military voice was reading out, with a sort of
brutal relish, a description of the armaments of the new Floating Fortress
which had just been anchored between Iceland and the Faroe Islands.

With those children, he thought, that wretched woman must lead a life of
terror. Another year, two years, and they would be watching her night
and day for symptoms of unorthodoxy. Nearly all children nowadays were
horrible. What was worst of all was that by means of such organizations as
the Spies they were systematically turned into ungovernable little savages,
and yet this produced in them no tendency whatever to rebel against the
discipline of the Party. On the contrary, they adored the Party and
everything connected with it. The songs, the processions, the banners, the
hiking, the drilling with dummy rifles, the yelling of slogans, the worship
of Big Brother--it was all a sort of glorious game to them. All their
ferocity was turned outwards, against the enemies of the State, against
foreigners, traitors, saboteurs, thought-criminals. It was almost normal
for people over thirty to be frightened of their own children. And with
good reason, for hardly a week passed in which 'The Times' did not carry
a paragraph describing how some eavesdropping little sneak--'child hero'
was the phrase generally used--had overheard some compromising remark
and denounced its parents to the Thought Police.

The sting of the catapult bullet had worn off. He picked up his pen
half-heartedly, wondering whether he could find something more to write
in the diary. Suddenly he began thinking of O'Brien again.

Years ago--how long was it? Seven years it must be--he had dreamed that he
was walking through a pitch-dark room. And someone sitting to one side of
him had said as he passed: 'We shall meet in the place where there is no
darkness.' It was said very quietly, almost casually--a statement, not a
command. He had walked on without pausing. What was curious was that at the
time, in the dream, the words had not made much impression on him. It was
only later and by degrees that they had seemed to take on significance. He
could not now remember whether it was before or after having the dream that
he had seen O'Brien for the first time, nor could he remember when he had
first identified the voice as O'Brien's. But at any rate the identification
existed. It was O'Brien who had spoken to him out of the dark.

Winston had never been able to feel sure--even after this morning's flash
of the eyes it was still impossible to be sure whether O'Brien was a friend
or an enemy. Nor did it even seem to matter greatly. There was a link of
understanding between them, more important than affection or partisanship.
'We shall meet in the place where there is no darkness,' he had said.
Winston did not know what it meant, only that in some way or another it
would come true.

The voice from the telescreen paused. A trumpet call, clear and beautiful,
floated into the stagnant air. The voice continued raspingly:

'Attention! Your attention, please! A newsflash has this moment arrived
from the Malabar front. Our forces in South India have won a glorious
victory. I am authorized to say that the action we are now reporting may
well bring the war within measurable distance of its end. Here is the
newsflash----'

Bad news coming, thought Winston. And sure enough, following on a gory
description of the annihilation of a Eurasian army, with stupendous figures
of killed and prisoners, came the announcement that, as from next week,
the chocolate ration would be reduced from thirty grammes to twenty.

Winston belched again. The gin was wearing off, leaving a deflated feeling.
The telescreen--perhaps to celebrate the victory, perhaps to drown the
memory of the lost chocolate--crashed into 'Oceania, 'tis for thee'. You
were supposed to stand to attention. However, in his present position he
was invisible.

'Oceania, 'tis for thee' gave way to lighter music. Winston walked over to
the window, keeping his back to the telescreen. The day was still cold and
clear. Somewhere far away a rocket bomb exploded with a dull, reverberating
roar. About twenty or thirty of them a week were falling on London at
present.

Down in the street the wind flapped the torn poster to and fro, and the
word INGSOC fitfully appeared and vanished. Ingsoc. The sacred principles
of Ingsoc. Newspeak, doublethink, the mutability of the past. He felt as
though he were wandering in the forests of the sea bottom, lost in a
monstrous world where he himself was the monster. He was alone. The past
was dead, the future was unimaginable. What certainty had he that a single
human creature now living was on his side? And what way of knowing that the
dominion of the Party would not endure FOR EVER? Like an answer, the three
slogans on the white face of the Ministry of Truth came back to him:


  WAR IS PEACE
  FREEDOM IS SLAVERY
  IGNORANCE IS STRENGTH


He took a twenty-five cent piece out of his pocket. There, too, in tiny
clear lettering, the same slogans were inscribed, and on the other face of
the coin the head of Big Brother. Even from the coin the eyes pursued you.
On coins, on stamps, on the covers of books, on banners, on posters, and on
the wrappings of a cigarette packet--everywhere. Always the eyes watching
you and the voice enveloping you. Asleep or awake, working or eating,
indoors or out of doors, in the bath or in bed--no escape. Nothing was your
own except the few cubic centimetres inside your skull.

The sun had shifted round, and the myriad windows of the Ministry of Truth,
with the light no longer shining on them, looked grim as the loopholes of a
fortress. His heart quailed before the enormous pyramidal shape. It was too
strong, it could not be stormed. A thousand rocket bombs would not batter
it down. He wondered again for whom he was writing the diary. For the
future, for the past--for an age that might be imaginary. And in front of
him there lay not death but annihilation. The diary would be reduced to
ashes and himself to vapour. Only the Thought Police would read what he had
written, before they wiped it out of existence and out of memory. How could
you make appeal to the future when not a trace of you, not even an
anonymous word scribbled on a piece of paper, could physically survive?

The telescreen struck fourteen. He must leave in ten minutes. He had to be
back at work by fourteen-thirty.

Curiously, the chiming of the hour seemed to have put new heart into him.
He was a lonely ghost uttering a truth that nobody would ever hear. But so
long as he uttered it, in some obscure way the continuity was not broken.
It was not by making yourself heard but by staying sane that you carried on
the human heritage. He went back to the table, dipped his pen, and wrote:


   To the future or to the past, to a time when thought is free, when men
are different from one another and do not live alone--to a time when truth
exists and what is done cannot be undone:
   From the age of uniformity, from the age of solitude, from the age of
Big Brother, from the age of doublethink--greetings!


He was already dead, he reflected. It seemed to him that it was only now,
when he had begun to be able to formulate his thoughts, that he had taken
the decisive step. The consequences of every act are included in the act
itself. He wrote:


   Thoughtcrime does not entail death: thoughtcrime IS death.


Now he had recognized himself as a dead man it became important to stay
alive as long as possible. Two fingers of his right hand were inkstained.
It was exactly the kind of detail that might betray you. Some nosing zealot
in the Ministry (a woman, probably: someone like the little sandy-haired
woman or the dark-haired girl from the Fiction Department) might start
wondering why he had been writing during the lunch interval, why he had
used an old-fashioned pen, WHAT he had been writing--and then drop a hint
in the appropriate quarter. He went to the bathroom and carefully scrubbed
the ink away with the gritty dark-brown soap which rasped your skin like
sandpaper and was therefore well adapted for this purpose.

He put the diary away in the drawer. It was quite useless to think of
hiding it, but he could at least make sure whether or not its existence had
been discovered. A hair laid across the page-ends was too obvious. With the
tip of his finger he picked up an identifiable grain of whitish dust and
deposited it on the corner of the cover, where it was bound to be shaken
off if the book was moved.




Chapter 3



Winston was dreaming of his mother.

He must, he thought, have been ten or eleven years old when his mother had
disappeared. She was a tall, statuesque, rather silent woman with slow
movements and magnificent fair hair. His father he remembered more vaguely
as dark and thin, dressed always in neat dark clothes (Winston remembered
especially the very thin soles of his father's shoes) and wearing
spectacles. The two of them must evidently have been swallowed up in one
of the first great purges of the fifties.

At this moment his mother was sitting in some place deep down beneath him,
with his young sister in her arms. He did not remember his sister at all,
except as a tiny, feeble baby, always silent, with large, watchful eyes.
Both of them were looking up at him. They were down in some subterranean
place--the bottom of a well, for instance, or a very deep grave--but it
was a place which, already far below him, was itself moving downwards.
They were in the saloon of a sinking ship, looking up at him through the
darkening water. There was still air in the saloon, they could still see
him and he them, but all the while they were sinking down, down into the
green waters which in another moment must hide them from sight for ever.
He was out in the light and air while they were being sucked down to death,
and they were down there because he was up here. He knew it and they knew
it, and he could see the knowledge in their faces. There was no reproach
either in their faces or in their hearts, only the knowledge that they
must die in order that he might remain alive, and that this was part of
the unavoidable order of things.

He could not remember what had happened, but he knew in his dream that in
some way the lives of his mother and his sister had been sacrificed to his
own. It was one of those dreams which, while retaining the characteristic
dream scenery, are a continuation of one's intellectual life, and in which
one becomes aware of facts and ideas which still seem new and valuable
after one is awake. The thing that now suddenly struck Winston was that his
mother's death, nearly thirty years ago, had been tragic and sorrowful in
a way that was no longer possible. Tragedy, he perceived, belonged to the
ancient time, to a time when there was still privacy, love, and friendship,
and when the members of a family stood by one another without needing to
know the reason. His mother's memory tore at his heart because she had died
loving him, when he was too young and selfish to love her in return, and
because somehow, he did not remember how, she had sacrificed herself to a
conception of loyalty that was private and unalterable. Such things, he
saw, could not happen today. Today there were fear, hatred, and pain, but
no dignity of emotion, no deep or complex sorrows. All this he seemed to
see in the large eyes of his mother and his sister, looking up at him
through the green water, hundreds of fathoms down and still sinking.

Suddenly he was standing on short springy turf, on a summer evening when
the slanting rays of the sun gilded the ground. The landscape that he was
looking at recurred so often in his dreams that he was never fully certain
whether or not he had seen it in the real world. In his waking thoughts he
called it the Golden Country. It was an old, rabbit-bitten pasture, with a
foot-track wandering across it and a molehill here and there. In the ragged
hedge on the opposite side of the field the boughs of the elm trees were
swaying very faintly in the breeze, their leaves just stirring in dense
masses like women's hair. Somewhere near at hand, though out of sight,
there was a clear, slow-moving stream where dace were swimming in the
pools under the willow trees.

The girl with dark hair was coming towards them across the field. With
what seemed a single movement she tore off her clothes and flung them
disdainfully aside. Her body was white and smooth, but it aroused no desire
in him, indeed he barely looked at it. What overwhelmed him in that instant
was admiration for the gesture with which she had thrown her clothes aside.
With its grace and carelessness it seemed to annihilate a whole culture,
a whole system of thought, as though Big Brother and the Party and the
Thought Police could all be swept into nothingness by a single splendid
movement of the arm. That too was a gesture belonging to the ancient time.
Winston woke up with the word 'Shakespeare' on his lips.

The telescreen was giving forth an ear-splitting whistle which continued on
the same note for thirty seconds. It was nought seven fifteen, getting-up
time for office workers. Winston wrenched his body out of bed--naked, for
a member of the Outer Party received only 3,000 clothing coupons annually,
and a suit of pyjamas was 600--and seized a dingy singlet and a pair of
shorts that were lying across a chair. The Physical Jerks would begin in
three minutes. The next moment he was doubled up by a violent coughing fit
which nearly always attacked him soon after waking up. It emptied his lungs
so completely that he could only begin breathing again by lying on his back
and taking a series of deep gasps. His veins had swelled with the effort of
the cough, and the varicose ulcer had started itching.

'Thirty to forty group!' yapped a piercing female voice. 'Thirty to forty
group! Take your places, please. Thirties to forties!'

Winston sprang to attention in front of the telescreen, upon which the
image of a youngish woman, scrawny but muscular, dressed in tunic and
gym-shoes, had already appeared.

'Arms bending and stretching!' she rapped out. 'Take your time by me. ONE,
two, three, four! ONE, two, three, four! Come on, comrades, put a bit of
life into it! ONE, two, three four! ONE two, three, four!...'

The pain of the coughing fit had not quite driven out of Winston's mind the
impression made by his dream, and the rhythmic movements of the exercise
restored it somewhat. As he mechanically shot his arms back and forth,
wearing on his face the look of grim enjoyment which was considered proper
during the Physical Jerks, he was struggling to think his way backward into
the dim period of his early childhood. It was extraordinarily difficult.
Beyond the late fifties everything faded. When there were no external
records that you could refer to, even the outline of your own life lost
its sharpness. You remembered huge events which had quite probably not
happened, you remembered the detail of incidents without being able to
recapture their atmosphere, and there were long blank periods to which you
could assign nothing. Everything had been different then. Even the names of
countries, and their shapes on the map, had been different. Airstrip One,
for instance, had not been so called in those days: it had been called
England or Britain, though London, he felt fairly certain, had always been
called London.

Winston could not definitely remember a time when his country had not been
at war, but it was evident that there had been a fairly long interval of
peace during his childhood, because one of his early memories was of an air
raid which appeared to take everyone by surprise. Perhaps it was the time
when the atomic bomb had fallen on Colchester. He did not remember the raid
itself, but he did remember his father's hand clutching his own as they
hurried down, down, down into some place deep in the earth, round and round
a spiral staircase which rang under his feet and which finally so wearied
his legs that he began whimpering and they had to stop and rest. His
mother, in her slow, dreamy way, was following a long way behind them. She
was carrying his baby sister--or perhaps it was only a bundle of blankets
that she was carrying: he was not certain whether his sister had been born
then. Finally they had emerged into a noisy, crowded place which he had
realized to be a Tube station.

There were people sitting all over the stone-flagged floor, and other
people, packed tightly together, were sitting on metal bunks, one above
the other. Winston and his mother and father found themselves a place on
the floor, and near them an old man and an old woman were sitting side by
side on a bunk. The old man had on a decent dark suit and a black cloth cap
pushed back from very white hair: his face was scarlet and his eyes were
blue and full of tears. He reeked of gin. It seemed to breathe out of his
skin in place of sweat, and one could have fancied that the tears welling
from his eyes were pure gin. But though slightly drunk he was also
suffering under some grief that was genuine and unbearable. In his childish
way Winston grasped that some terrible thing, something that was beyond
forgiveness and could never be remedied, had just happened. It also seemed
to him that he knew what it was. Someone whom the old man loved--a little
granddaughter, perhaps--had been killed. Every few minutes the old man kept
repeating:

'We didn't ought to 'ave trusted 'em. I said so, Ma, didn't I? That's what
comes of trusting 'em. I said so all along. We didn't ought to 'ave trusted
the buggers.'

But which buggers they didn't ought to have trusted Winston could not now
remember.

Since about that time, war had been literally continuous, though strictly
speaking it had not always been the same war. For several months during his
childhood there had been confused street fighting in London itself, some
of which he remembered vividly. But to trace out the history of the whole
period, to say who was fighting whom at any given moment, would have been
utterly impossible, since no written record, and no spoken word, ever made
mention of any other alignment than the existing one. At this moment, for
example, in 1984 (if it was 1984), Oceania was at war with Eurasia and
in alliance with Eastasia. In no public or private utterance was it ever
admitted that the three powers had at any time been grouped along different
lines. Actually, as Winston well knew, it was only four years since Oceania
had been at war with Eastasia and in alliance with Eurasia. But that was
merely a piece of furtive knowledge which he happened to possess because
his memory was not satisfactorily under control. Officially the change of
partners had never happened. Oceania was at war with Eurasia: therefore
Oceania had always been at war with Eurasia. The enemy of the moment always
represented absolute evil, and it followed that any past or future
agreement with him was impossible.

The frightening thing, he reflected for the ten thousandth time as he
forced his shoulders painfully backward (with hands on hips, they were
gyrating their bodies from the waist, an exercise that was supposed to be
good for the back muscles)--the frightening thing was that it might all be
true. If the Party could thrust its hand into the past and say of this or
that event, IT NEVER HAPPENED--that, surely, was more terrifying than mere
torture and death?

The Party said that Oceania had never been in alliance with Eurasia. He,
Winston Smith, knew that Oceania had been in alliance with Eurasia as short
a time as four years ago. But where did that knowledge exist? Only in his
own consciousness, which in any case must soon be annihilated. And if all
others accepted the lie which the Party imposed--if all records told the
same tale--then the lie passed into history and became truth. 'Who controls
the past,' ran the Party slogan, 'controls the future: who controls the
present controls the past.' And yet the past, though of its nature
alterable, never had been altered. Whatever was true now was true from
everlasting to everlasting. It was quite simple. All that was needed was
an unending series of victories over your own memory. 'Reality control',
they called it: in Newspeak, 'doublethink'.

'Stand easy!' barked the instructress, a little more genially.

Winston sank his arms to his sides and slowly refilled his lungs with air.
His mind slid away into the labyrinthine world of doublethink. To know
and not to know, to be conscious of complete truthfulness while telling
carefully constructed lies, to hold simultaneously two opinions which
cancelled out, knowing them to be contradictory and believing in both of
them, to use logic against logic, to repudiate morality while laying claim
to it, to believe that democracy was impossible and that the Party was the
guardian of democracy, to forget whatever it was necessary to forget, then
to draw it back into memory again at the moment when it was needed, and
then promptly to forget it again: and above all, to apply the same process
to the process itself. That was the ultimate subtlety: consciously to
induce unconsciousness, and then, once again, to become unconscious of
the act of hypnosis you had just performed. Even to understand the word
'doublethink' involved the use of doublethink.

The instructress had called them to attention again. 'And now let's see
which of us can touch our toes!' she said enthusiastically. 'Right over
from the hips, please, comrades. ONE-two! ONE-two!...'

Winston loathed this exercise, which sent shooting pains all the way from
his heels to his buttocks and often ended by bringing on another coughing
fit. The half-pleasant quality went out of his meditations. The past, he
reflected, had not merely been altered, it had been actually destroyed. For
how could you establish even the most obvious fact when there existed no
record outside your own memory? He tried to remember in what year he had
first heard mention of Big Brother. He thought it must have been at some
time in the sixties, but it was impossible to be certain. In the Party
histories, of course, Big Brother figured as the leader and guardian of the
Revolution since its very earliest days. His exploits had been gradually
pushed backwards in time until already they extended into the fabulous
world of the forties and the thirties, when the capitalists in their
strange cylindrical hats still rode through the streets of London in great
gleaming motor-cars or horse carriages with glass sides. There was no
knowing how much of this legend was true and how much invented. Winston
could not even remember at what date the Party itself had come into
existence. He did not believe he had ever heard the word Ingsoc before
1960, but it was possible that in its Oldspeak form--'English Socialism',
that is to say--it had been current earlier. Everything melted into mist.
Sometimes, indeed, you could put your finger on a definite lie. It was not
true, for example, as was claimed in the Party history books, that the
Party had invented aeroplanes. He remembered aeroplanes since his earliest
childhood. But you could prove nothing. There was never any evidence. Just
once in his whole life he had held in his hands unmistakable documentary
proof of the falsification of an historical fact. And on that occasion----

'Smith!' screamed the shrewish voice from the telescreen. '6079 Smith W.!
Yes, YOU! Bend lower, please! You can do better than that. You're not
trying. Lower, please! THAT'S better, comrade. Now stand at ease, the
whole squad, and watch me.'

A sudden hot sweat had broken out all over Winston's body. His face
remained completely inscrutable. Never show dismay! Never show resentment!
A single flicker of the eyes could give you away. He stood watching while
the instructress raised her arms above her head and--one could not say
gracefully, but with remarkable neatness and efficiency--bent over and
tucked the first joint of her fingers under her toes.

'THERE, comrades! THAT'S how I want to see you doing it. Watch me again.
I'm thirty-nine and I've had four children. Now look.' She bent over again.
'You see MY knees aren't bent. You can all do it if you want to,' she added
as she straightened herself up. 'Anyone under forty-five is perfectly
capable of touching his toes. We don't all have the privilege of fighting
in the front line, but at least we can all keep fit. Remember our boys on
the Malabar front! And the sailors in the Floating Fortresses! Just think
what THEY have to put up with. Now try again. That's better, comrade,
that's MUCH better,' she added encouragingly as Winston, with a violent
lunge, succeeded in touching his toes with knees unbent, for the first
time in several years.




Chapter 4



With the deep, unconscious sigh which not even the nearness of the
telescreen could prevent him from uttering when his day's work started,
Winston pulled the speakwrite towards him, blew the dust from its
mouthpiece, and put on his spectacles. Then he unrolled and clipped
together four small cylinders of paper which had already flopped out of
the pneumatic tube on the right-hand side of his desk.

In the walls of the cubicle there were three orifices. To the right of the
speakwrite, a small pneumatic tube for written messages, to the left, a
larger one for newspapers; and in the side wall, within easy reach of
Winston's arm, a large oblong slit protected by a wire grating. This last
was for the disposal of waste paper. Similar slits existed in thousands or
tens of thousands throughout the building, not only in every room but at
short intervals in every corridor. For some reason they were nicknamed
memory holes. When one knew that any document was due for destruction, or
even when one saw a scrap of waste paper lying about, it was an automatic
action to lift the flap of the nearest memory hole and drop it in,
whereupon it would be whirled away on a current of warm air to the enormous
furnaces which were hidden somewhere in the recesses of the building.

Winston examined the four slips of paper which he had unrolled. Each
contained a message of only one or two lines, in the abbreviated
jargon--not actually Newspeak, but consisting
largely of Newspeak words--which was used in the Ministry for internal
purposes. They ran:


times 17.3.84 bb speech malreported africa rectify

times 19.12.83 forecasts 3 yp 4th quarter 83 misprints verify current issue

times 14.2.84 miniplenty malquoted chocolate rectify

times 3.12.83 reporting bb dayorder doubleplusungood refs unpersons rewrite
fullwise upsub antefiling


With a faint feeling of satisfaction Winston laid the fourth message aside.
It was an intricate and responsible job and had better be dealt with last.
The other three were routine matters, though the second one would probably
mean some tedious wading through lists of figures.

Winston dialled 'back numbers' on the telescreen and called for the
appropriate issues of 'The Times', which slid out of the pneumatic tube
after only a few minutes' delay. The messages he had received referred to
articles or news items which for one reason or another it was thought
necessary to alter, or, as the official phrase had it, to rectify. For
example, it appeared from 'The Times' of the seventeenth of March that Big
Brother, in his speech of the previous day, had predicted that the South
Indian front would remain quiet but that a Eurasian offensive would shortly
be launched in North Africa. As it happened, the Eurasian Higher Command
had launched its offensive in South India and left North Africa alone. It
was therefore necessary to rewrite a paragraph of Big Brother's speech, in
such a way as to make him predict the thing that had actually happened. Or
again, 'The Times' of the nineteenth of December had published the official
forecasts of the output of various classes of consumption goods in the
fourth quarter of 1983, which was also the sixth quarter of the Ninth
Three-Year Plan. Today's issue contained a statement of the actual output,
from which it appeared that the forecasts were in every instance grossly
wrong. Winston's job was to rectify the original figures by making them
agree with the later ones. As for the third message, it referred to a very
simple error which could be set right in a couple of minutes. As short
a time ago as February, the Ministry of Plenty had issued a promise
(a 'categorical pledge' were the official words) that there would be
no reduction of the chocolate ration during 1984. Actually, as Winston
was aware, the chocolate ration was to be reduced from thirty grammes
to twenty at the end of the present week. All that was needed was to
substitute for the original promise a warning that it would probably be
necessary to reduce the ration at some time in April.

As soon as Winston had dealt with each of the messages, he clipped his
speakwritten corrections to the appropriate copy of 'The Times' and pushed
them into the pneumatic tube. Then, with a movement which was as nearly as
possible unconscious, he crumpled up the original message and any notes
that he himself had made, and dropped them into the memory hole to be
devoured by the flames.

What happened in the unseen labyrinth to which the pneumatic tubes led, he
did not know in detail, but he did know in general terms. As soon as all
the corrections which happened to be necessary in any particular number
of 'The Times' had been assembled and collated, that number would be
reprinted, the original copy destroyed, and the corrected copy placed on
the files in its stead. This process of continuous alteration was applied
not only to newspapers, but to books, periodicals, pamphlets, posters,
leaflets, films, sound-tracks, cartoons, photographs--to every kind of
literature or documentation which might conceivably hold any political or
ideological significance. Day by day and almost minute by minute the past
was brought up to date. In this way every prediction made by the Party
could be shown by documentary evidence to have been correct, nor was any
item of news, or any expression of opinion, which conflicted with the
needs of the moment, ever allowed to remain on record. All history was
a palimpsest, scraped clean and reinscribed exactly as often as was
necessary. In no case would it have been possible, once the deed was done,
to prove that any falsification had taken place. The largest section of
the Records Department, far larger than the one on which Winston worked,
consisted simply of persons whose duty it was to track down and collect all
copies of books, newspapers, and other documents which had been superseded
and were due for destruction. A number of 'The Times' which might, because
of changes in political alignment, or mistaken prophecies uttered by Big
Brother, have been rewritten a dozen times still stood on the files bearing
its original date, and no other copy existed to contradict it. Books, also,
were recalled and rewritten again and again, and were invariably reissued
without any admission that any alteration had been made. Even the written
instructions which Winston received, and which he invariably got rid of
as soon as he had dealt with them, never stated or implied that an act of
forgery was to be committed: always the reference was to slips, errors,
misprints, or misquotations which it was necessary to put right in the
interests of accuracy.

But actually, he thought as he re-adjusted the Ministry of Plenty's
figures, it was not even forgery. It was merely the substitution of one
piece of nonsense for another. Most of the material that you were dealing
with had no connexion with anything in the real world, not even the kind of
connexion that is contained in a direct lie. Statistics were just as much
a fantasy in their original version as in their rectified version. A great
deal of the time you were expected to make them up out of your head. For
example, the Ministry of Plenty's forecast had estimated the output of
boots for the quarter at 145 million pairs. The actual output was given as
sixty-two millions. Winston, however, in rewriting the forecast, marked
the figure down to fifty-seven millions, so as to allow for the usual claim
that the quota had been overfulfilled. In any case, sixty-two millions was
no nearer the truth than fifty-seven millions, or than 145 millions. Very
likely no boots had been produced at all. Likelier still, nobody knew
how many had been produced, much less cared. All one knew was that every
quarter astronomical numbers of boots were produced on paper, while perhaps
half the population of Oceania went barefoot. And so it was with every
class of recorded fact, great or small. Everything faded away into a
shadow-world in which, finally, even the date of the year had become
uncertain.

Winston glanced across the hall. In the corresponding cubicle on the other
side a small, precise-looking, dark-chinned man named Tillotson was working
steadily away, with a folded newspaper on his knee and his mouth very close
to the mouthpiece of the speakwrite. He had the air of trying to keep what
he was saying a secret between himself and the telescreen. He looked up,
and his spectacles darted a hostile flash in Winston's direction.

Winston hardly knew Tillotson, and had no idea what work he was employed
on. People in the Records Department did not readily talk about their jobs.
In the long, windowless hall, with its double row of cubicles and its
endless rustle of papers and hum of voices murmuring into speakwrites,
there were quite a dozen people whom Winston did not even know by name,
though he daily saw them hurrying to and fro in the corridors or
gesticulating in the Two Minutes Hate. He knew that in the cubicle next
to him the little woman with sandy hair toiled day in day out, simply at
tracking down and deleting from the Press the names of people who had been
vaporized and were therefore considered never to have existed. There was a
certain fitness in this, since her own husband had been vaporized a couple
of years earlier. And a few cubicles away a mild, ineffectual, dreamy
creature named Ampleforth, with very hairy ears and a surprising talent
for juggling with rhymes and metres, was engaged in producing garbled
versions--definitive texts, they were called--of poems which had become
ideologically offensive, but which for one reason or another were to be
retained in the anthologies. And this hall, with its fifty workers or
thereabouts, was only one sub-section, a single cell, as it were, in the
huge complexity of the Records Department. Beyond, above, below, were other
swarms of workers engaged in an unimaginable multitude of jobs. There were
the huge printing-shops with their sub-editors, their typography experts,
and their elaborately equipped studios for the faking of photographs. There
was the tele-programmes section with its engineers, its producers, and its
teams of actors specially chosen for their skill in imitating voices. There
were the armies of reference clerks whose job was simply to draw up lists
of books and periodicals which were due for recall. There were the vast
repositories where the corrected documents were stored, and the hidden
furnaces where the original copies were destroyed. And somewhere or other,
quite anonymous, there were the directing brains who co-ordinated the whole
effort and laid down the lines of policy which made it necessary that this
fragment of the past should be preserved, that one falsified, and the other
rubbed out of existence.

And the Records Department, after all, was itself only a single branch of
the Ministry of Truth, whose primary job was not to reconstruct the past
but to supply the citizens of Oceania with newspapers, films, textbooks,
telescreen programmes, plays, novels--with every conceivable kind of
information, instruction, or entertainment, from a statue to a slogan,
from a lyric poem to a biological treatise, and from a child's
spelling-book to a Newspeak dictionary. And the Ministry had not only to
supply the multifarious needs of the party, but also to repeat the whole
operation at a lower level for the benefit of the proletariat. There
was a whole chain of separate departments dealing with proletarian
literature, music, drama, and entertainment generally. Here were produced
rubbishy newspapers containing almost nothing except sport, crime and
astrology, sensational five-cent novelettes, films oozing with sex, and
sentimental songs which were composed entirely by mechanical means on a
special kind of kaleidoscope known as a versificator. There was even
a whole sub-section--Pornosec, it was called in Newspeak--engaged in
producing the lowest kind of pornography, which was sent out in sealed
packets and which no Party member, other than those who worked on it,
was permitted to look at.

Three messages had slid out of the pneumatic tube while Winston was
working, but they were simple matters, and he had disposed of them before
the Two Minutes Hate interrupted him. When the Hate was over he returned
to his cubicle, took the Newspeak dictionary from the shelf, pushed the
speakwrite to one side, cleaned his spectacles, and settled down to his
main job of the morning.

Winston's greatest pleasure in life was in his work. Most of it was a
tedious routine, but included in it there were also jobs so difficult and
intricate that you could lose yourself in them as in the depths of a
mathematical problem--delicate pieces of forgery in which you had nothing
to guide you except your knowledge of the principles of Ingsoc and your
estimate of what the Party wanted you to say. Winston was good at this kind
of thing. On occasion he had even been entrusted with the rectification of
'The Times' leading articles, which were written entirely in Newspeak.
He unrolled the message that he had set aside earlier. It ran:


   times 3.12.83 reporting bb dayorder doubleplusungood refs unpersons
rewrite fullwise upsub antefiling


In Oldspeak (or standard English) this might be rendered:


The reporting of Big Brother's Order for the Day in 'The Times' of December
3rd 1983 is extremely unsatisfactory and makes references to non-existent
persons. Rewrite it in full and submit your draft to higher authority
before filing.


Winston read through the offending article. Big Brother's Order for the
Day, it seemed, had been chiefly devoted to praising the work of an
organization known as FFCC, which supplied cigarettes and other comforts
to the sailors in the Floating Fortresses. A certain Comrade Withers, a
prominent member of the Inner Party, had been singled out for special
mention and awarded a decoration, the Order of Conspicuous Merit, Second
Class.

Three months later FFCC had suddenly been dissolved with no reasons given.
One could assume that Withers and his associates were now in disgrace, but
there had been no report of the matter in the Press or on the telescreen.
That was to be expected, since it was unusual for political offenders to
be put on trial or even publicly denounced. The great purges involving
thousands of people, with public trials of traitors and thought-criminals
who made abject confession of their crimes and were afterwards executed,
were special show-pieces not occurring oftener than once in a couple of
years. More commonly, people who had incurred the displeasure of the
Party simply disappeared and were never heard of again. One never had the
smallest clue as to what had happened to them. In some cases they might
not even be dead. Perhaps thirty people personally known to Winston, not
counting his parents, had disappeared at one time or another.

Winston stroked his nose gently with a paper-clip. In the cubicle
across the way Comrade Tillotson was still crouching secretively over
his speakwrite. He raised his head for a moment: again the hostile
spectacle-flash. Winston wondered whether Comrade Tillotson was engaged
on the same job as himself. It was perfectly possible. So tricky a piece
of work would never be entrusted to a single person: on the other hand,
to turn it over to a committee would be to admit openly that an act of
fabrication was taking place. Very likely as many as a dozen people were
now working away on rival versions of what Big Brother had actually said.
And presently some master brain in the Inner Party would select this
version or that, would re-edit it and set in motion the complex processes
of cross-referencing that would be required, and then the chosen lie
would pass into the permanent records and become truth.

Winston did not know why Withers had been disgraced. Perhaps it was for
corruption or incompetence. Perhaps Big Brother was merely getting rid of
a too-popular subordinate. Perhaps Withers or someone close to him had
been suspected of heretical tendencies. Or perhaps--what was likeliest of
all--the thing had simply happened because purges and vaporizations were a
necessary part of the mechanics of government. The only real clue lay in
the words 'refs unpersons', which indicated that Withers was already dead.
You could not invariably assume this to be the case when people were
arrested. Sometimes they were released and allowed to remain at liberty
for as much as a year or two years before being executed. Very occasionally
some person whom you had believed dead long since would make a ghostly
reappearance at some public trial where he would implicate hundreds of
others by his testimony before vanishing, this time for ever. Withers,
however, was already an UNPERSON. He did not exist: he had never existed.
Winston decided that it would not be enough simply to reverse the tendency
of Big Brother's speech. It was better to make it deal with something
totally unconnected with its original subject.

He might turn the speech into the usual denunciation of traitors and
thought-criminals, but that was a little too obvious, while to invent a
victory at the front, or some triumph of over-production in the Ninth
Three-Year Plan, might complicate the records too much. What was needed
was a piece of pure fantasy. Suddenly there sprang into his mind, ready
made as it were, the image of a certain Comrade Ogilvy, who had recently
died in battle, in heroic circumstances. There were occasions when Big
Brother devoted his Order for the Day to commemorating some humble,
rank-and-file Party member whose life and death he held up as an example
worthy to be followed. Today he should commemorate Comrade Ogilvy. It was
true that there was no such person as Comrade Ogilvy, but a few lines of
print and a couple of faked photographs would soon bring him into
existence.

Winston thought for a moment, then pulled the speakwrite towards him and
began dictating in Big Brother's familiar style: a style at once military
and pedantic, and, because of a trick of asking questions and then
promptly answering them ('What lessons do we learn from this fact,
comrades? The lesson--which is also one of the fundamental principles
of Ingsoc--that,' etc., etc.), easy to imitate.

At the age of three Comrade Ogilvy had refused all toys except a drum, a
sub-machine gun, and a model helicopter. At six--a year early, by a special
relaxation of the rules--he had joined the Spies, at nine he had been a
troop leader. At eleven he had denounced his uncle to the Thought Police
after overhearing a conversation which appeared to him to have criminal
tendencies. At seventeen he had been a district organizer of the Junior
Anti-Sex League. At nineteen he had designed a hand-grenade which had
been adopted by the Ministry of Peace and which, at its first trial, had
killed thirty-one Eurasian prisoners in one burst. At twenty-three he had
perished in action. Pursued by enemy jet planes while flying over the
Indian Ocean with important despatches, he had weighted his body with his
machine gun and leapt out of the helicopter into deep water, despatches
and all--an end, said Big Brother, which it was impossible to contemplate
without feelings of envy. Big Brother added a few remarks on the purity
and single-mindedness of Comrade Ogilvy's life. He was a total abstainer
and a nonsmoker, had no recreations except a daily hour in the gymnasium,
and had taken a vow of celibacy, believing marriage and the care of a
family to be incompatible with a twenty-four-hour-a-day devotion to duty.
He had no subjects of conversation except the principles of Ingsoc, and
no aim in life except the defeat of the Eurasian enemy and the hunting-down
of spies, saboteurs, thought-criminals, and traitors generally.

Winston debated with himself whether to award Comrade Ogilvy the Order of
Conspicuous Merit: in the end he decided against it because of the
unnecessary cross-referencing that it would entail.

Once again he glanced at his rival in the opposite cubicle. Something
seemed to tell him with certainty that Tillotson was busy on the same job
as himself. There was no way of knowing whose job would finally be adopted,
but he felt a profound conviction that it would be his own. Comrade Ogilvy,
unimagined an hour ago, was now a fact. It struck him as curious that you
could create dead men but not living ones. Comrade Ogilvy, who had never
existed in the present, now existed in the past, and when once the act of
forgery was forgotten, he would exist just as authentically, and upon the
same evidence, as Charlemagne or Julius Caesar.




Chapter 5



In the low-ceilinged canteen, deep underground, the lunch queue jerked
slowly forward. The room was already very full and deafeningly noisy. From
the grille at the counter the steam of stew came pouring forth, with a sour
metallic smell which did not quite overcome the fumes of Victory Gin. On
the far side of the room there was a small bar, a mere hole in the wall,
where gin could be bought at ten cents the large nip.

'Just the man I was looking for,' said a voice at Winston's back.

He turned round. It was his friend Syme, who worked in the Research
Department. Perhaps 'friend' was not exactly the right word. You did not
have friends nowadays, you had comrades: but there were some comrades whose
society was pleasanter than that of others. Syme was a philologist, a
specialist in Newspeak. Indeed, he was one of the enormous team of experts
now engaged in compiling the Eleventh Edition of the Newspeak Dictionary.
He was a tiny creature, smaller than Winston, with dark hair and large,
protuberant eyes, at once mournful and derisive, which seemed to search
your face closely while he was speaking to you.

'I wanted to ask you whether you'd got any razor blades,' he said.

'Not one!' said Winston with a sort of guilty haste. 'I've tried all over
the place. They don't exist any longer.'

Everyone kept asking you for razor blades. Actually he had two unused ones
which he was hoarding up. There had been a famine of them for months past.
At any given moment there was some necessary article which the Party shops
were unable to supply. Sometimes it was buttons, sometimes it was darning
wool, sometimes it was shoelaces; at present it was razor blades. You could
only get hold of them, if at all, by scrounging more or less furtively on
the 'free' market.

'I've been using the same blade for six weeks,' he added untruthfully.

The queue gave another jerk forward. As they halted he turned and faced
Syme again. Each of them took a greasy metal tray from a pile at the end
of the counter.

'Did you go and see the prisoners hanged yesterday?' said Syme.

'I was working,' said Winston indifferently. 'I shall see it on the
flicks, I suppose.'

'A very inadequate substitute,' said Syme.

His mocking eyes roved over Winston's face. 'I know you,' the eyes seemed
to say, 'I see through you. I know very well why you didn't go to see
those prisoners hanged.' In an intellectual way, Syme was venomously
orthodox. He would talk with a disagreeable gloating satisfaction of
helicopter raids on enemy villages, and trials and confessions of
thought-criminals, the executions in the cellars of the Ministry of Love.
Talking to him was largely a matter of getting him away from such subjects
and entangling him, if possible, in the technicalities of Newspeak, on
which he was authoritative and interesting. Winston turned his head a
little aside to avoid the scrutiny of the large dark eyes.

'It was a good hanging,' said Syme reminiscently. 'I think it spoils it
when they tie their feet together. I like to see them kicking. And above
all, at the end, the tongue sticking right out, and blue--a quite bright
blue. That's the detail that appeals to me.'

'Nex', please!' yelled the white-aproned prole with the ladle.

Winston and Syme pushed their trays beneath the grille. On to each was
dumped swiftly the regulation lunch--a metal pannikin of pinkish-grey stew,
a hunk of bread, a cube of cheese, a mug of milkless Victory Coffee, and
one saccharine tablet.

'There's a table over there, under that telescreen,' said Syme. 'Let's pick
up a gin on the way.'

The gin was served out to them in handleless china mugs. They threaded
their way across the crowded room and unpacked their trays on to the
metal-topped table, on one corner of which someone had left a pool of stew,
a filthy liquid mess that had the appearance of vomit. Winston took up his
mug of gin, paused for an instant to collect his nerve, and gulped the
oily-tasting stuff down. When he had winked the tears out of his eyes he
suddenly discovered that he was hungry. He began swallowing spoonfuls of
the stew, which, in among its general sloppiness, had cubes of spongy
pinkish stuff which was probably a preparation of meat. Neither of them
spoke again till they had emptied their pannikins. From the table at
Winston's left, a little behind his back, someone was talking rapidly and
continuously, a harsh gabble almost like the quacking of a duck, which
pierced the general uproar of the room.

'How is the Dictionary getting on?' said Winston, raising his voice to
overcome the noise.

'Slowly,' said Syme. 'I'm on the adjectives. It's fascinating.'

He had brightened up immediately at the mention of Newspeak. He pushed his
pannikin aside, took up his hunk of bread in one delicate hand and his
cheese in the other, and leaned across the table so as to be able to speak
without shouting.

'The Eleventh Edition is the definitive edition,' he said. 'We're getting
the language into its final shape--the shape it's going to have when nobody
speaks anything else. When we've finished with it, people like you will
have to learn it all over again. You think, I dare say, that our chief job
is inventing new words. But not a bit of it! We're destroying words--scores
of them, hundreds of them, every day. We're cutting the language down to
the bone. The Eleventh Edition won't contain a single word that will become
obsolete before the year 2050.'

He bit hungrily into his bread and swallowed a couple of mouthfuls, then
continued speaking, with a sort of pedant's passion. His thin dark face
had become animated, his eyes had lost their mocking expression and grown
almost dreamy.

'It's a beautiful thing, the destruction of words. Of course the great
wastage is in the verbs and adjectives, but there are hundreds of nouns
that can be got rid of as well. It isn't only the synonyms; there are also
the antonyms. After all, what justification is there for a word which is
simply the opposite of some other word? A word contains its opposite in
itself. Take "good", for instance. If you have a word like "good", what
need is there for a word like "bad"? "Ungood" will do just as well--better,
because it's an exact opposite, which the other is not. Or again, if you
want a stronger version of "good", what sense is there in having a whole
string of vague useless words like "excellent" and "splendid" and all the
rest of them? "Plusgood" covers the meaning, or "doubleplusgood" if you
want something stronger still. Of course we use those forms already. but
in the final version of Newspeak there'll be nothing else. In the end the
whole notion of goodness and badness will be covered by only six words--in
reality, only one word. Don't you see the beauty of that, Winston? It was
B.B.'s idea originally, of course,' he added as an afterthought.

A sort of vapid eagerness flitted across Winston's face at the mention of
Big Brother. Nevertheless Syme immediately detected a certain lack of
enthusiasm.

'You haven't a real appreciation of Newspeak, Winston,' he said almost
sadly. 'Even when you write it you're still thinking in Oldspeak. I've read
some of those pieces that you write in "The Times" occasionally. They're
good enough, but they're translations. In your heart you'd prefer to stick
to Oldspeak, with all its vagueness and its useless shades of meaning.
You don't grasp the beauty of the destruction of words. Do you know that
Newspeak is the only language in the world whose vocabulary gets smaller
every year?'

Winston did know that, of course. He smiled, sympathetically he hoped, not
trusting himself to speak. Syme bit off another fragment of the
dark-coloured bread, chewed it briefly, and went on:

'Don't you see that the whole aim of Newspeak is to narrow the range of
thought? In the end we shall make thoughtcrime literally impossible,
because there will be no words in which to express it. Every concept that
can ever be needed, will be expressed by exactly one word, with its meaning
rigidly defined and all its subsidiary meanings rubbed out and forgotten.
Already, in the Eleventh Edition, we're not far from that point. But the
process will still be continuing long after you and I are dead. Every year
fewer and fewer words, and the range of consciousness always a little
smaller. Even now, of course, there's no reason or excuse for committing
thoughtcrime. It's merely a question of self-discipline, reality-control.
But in the end there won't be any need even for that. The Revolution will
be complete when the language is perfect. Newspeak is Ingsoc and Ingsoc
is Newspeak,' he added with a sort of mystical satisfaction. 'Has it ever
occurred to you, Winston, that by the year 2050, at the very latest, not a
single human being will be alive who could understand such a conversation
as we are having now?'

'Except----' began Winston doubtfully, and he stopped.

It had been on the tip of his tongue to say 'Except the proles,' but he
checked himself, not feeling fully certain that this remark was not in
some way unorthodox. Syme, however, had divined what he was about to say.

'The proles are not human beings,' he said carelessly. 'By 2050--earlier,
probably--all real knowledge of Oldspeak will have disappeared. The whole
literature of the past will have been destroyed. Chaucer, Shakespeare,
Milton, Byron--they'll exist only in Newspeak versions, not merely changed
into something different, but actually changed into something contradictory
of what they used to be. Even the literature of the Party will change.
Even the slogans will change. How could you have a slogan like "freedom is
slavery" when the concept of freedom has been abolished? The whole climate
of thought will be different. In fact there will be no thought, as we
understand it now. Orthodoxy means not thinking--not needing to think.
Orthodoxy is unconsciousness.'

One of these days, thought Winston with sudden deep conviction, Syme will
be vaporized. He is too intelligent. He sees too clearly and speaks too
plainly. The Party does not like such people. One day he will disappear.
It is written in his face.

Winston had finished his bread and cheese. He turned a little sideways
in his chair to drink his mug of coffee. At the table on his left the man
with the strident voice was still talking remorselessly away. A young
woman who was perhaps his secretary, and who was sitting with her back
to Winston, was listening to him and seemed to be eagerly agreeing with
everything that he said. From time to time Winston caught some such remark
as 'I think you're so right, I do so agree with you', uttered in a youthful
and rather silly feminine voice. But the other voice never stopped for an
instant, even when the girl was speaking. Winston knew the man by sight,
though he knew no more about him than that he held some important post
in the Fiction Department. He was a man of about thirty, with a muscular
throat and a large, mobile mouth. His head was thrown back a little, and
because of the angle at which he was sitting, his spectacles caught the
light and presented to Winston two blank discs instead of eyes. What was
slightly horrible, was that from the stream of sound that poured out of
his mouth it was almost impossible to distinguish a single word. Just
once Winston caught a phrase--'complete and final elimination of
Goldsteinism'--jerked out very rapidly and, as it seemed, all in one piece,
like a line of type cast solid. For the rest it was just a noise, a
quack-quack-quacking. And yet, though you could not actually hear what the
man was saying, you could not be in any doubt about its general nature.
He might be denouncing Goldstein and demanding sterner measures against
thought-criminals and saboteurs, he might be fulminating against the
atrocities of the Eurasian army, he might be praising Big Brother or the
heroes on the Malabar front--it made no difference. Whatever it was, you
could be certain that every word of it was pure orthodoxy, pure Ingsoc.
As he watched the eyeless face with the jaw moving rapidly up and down,
Winston had a curious feeling that this was not a real human being but
some kind of dummy. It was not the man's brain that was speaking, it was
his larynx. The stuff that was coming out of him consisted of words, but
it was not speech in the true sense: it was a noise uttered in
unconsciousness, like the quacking of a duck.

Syme had fallen silent for a moment, and with the handle of his spoon was
tracing patterns in the puddle of stew. The voice from the other table
quacked rapidly on, easily audible in spite of the surrounding din.

'There is a word in Newspeak,' said Syme, 'I don't know whether you know
it: DUCKSPEAK, to quack like a duck. It is one of those interesting words
that have two contradictory meanings. Applied to an opponent, it is abuse,
applied to someone you agree with, it is praise.'

Unquestionably Syme will be vaporized, Winston thought again. He thought
it with a kind of sadness, although well knowing that Syme despised him
and slightly disliked him, and was fully capable of denouncing him as a
thought-criminal if he saw any reason for doing so. There was something
subtly wrong with Syme. There was something that he lacked: discretion,
aloofness, a sort of saving stupidity. You could not say that he was
unorthodox. He believed in the principles of Ingsoc, he venerated Big
Brother, he rejoiced over victories, he hated heretics, not merely with
sincerity but with a sort of restless zeal, an up-to-dateness of
information, which the ordinary Party member did not approach. Yet a faint
air of disreputability always clung to him. He said things that would have
been better unsaid, he had read too many books, he frequented the Chestnut
Tree Cafe, haunt of painters and musicians. There was no law, not even an
unwritten law, against frequenting the Chestnut Tree Cafe, yet the place
was somehow ill-omened. The old, discredited leaders of the Party had been
used to gather there before they were finally purged. Goldstein himself,
it was said, had sometimes been seen there, years and decades ago. Syme's
fate was not difficult to foresee. And yet it was a fact that if Syme
grasped, even for three seconds, the nature of his, Winston's, secret
opinions, he would betray him instantly to the Thought Police. So would
anybody else, for that matter: but Syme more than most. Zeal was not
enough. Orthodoxy was unconsciousness.

Syme looked up. 'Here comes Parsons,' he said.

Something in the tone of his voice seemed to add, 'that bloody fool'.
Parsons, Winston's fellow-tenant at Victory Mansions, was in fact threading
his way across the room--a tubby, middle-sized man with fair hair and a
froglike face. At thirty-five he was already putting on rolls of fat at
neck and waistline, but his movements were brisk and boyish. His whole
appearance was that of a little boy grown large, so much so that although
he was wearing the regulation overalls, it was almost impossible not to
think of him as being dressed in the blue shorts, grey shirt, and red
neckerchief of the Spies. In visualizing him one saw always a picture of
dimpled knees and sleeves rolled back from pudgy forearms. Parsons did,
indeed, invariably revert to shorts when a community hike or any other
physical activity gave him an excuse for doing so. He greeted them both
with a cheery 'Hullo, hullo!' and sat down at the table, giving off an
intense smell of sweat. Beads of moisture stood out all over his pink face.
His powers of sweating were extraordinary. At the Community Centre you
could always tell when he had been playing table-tennis by the dampness of
the bat handle. Syme had produced a strip of paper on which there was a
long column of words, and was studying it with an ink-pencil between his
fingers.

'Look at him working away in the lunch hour,' said Parsons, nudging
Winston. 'Keenness, eh? What's that you've got there, old boy? Something
a bit too brainy for me, I expect. Smith, old boy, I'll tell you why I'm
chasing you. It's that sub you forgot to give me.'

'Which sub is that?' said Winston, automatically feeling for money. About
a quarter of one's salary had to be earmarked for voluntary subscriptions,
which were so numerous that it was difficult to keep track of them.

'For Hate Week. You know--the house-by-house fund. I'm treasurer for our
block. We're making an all-out effort--going to put on a tremendous show.
I tell you, it won't be my fault if old Victory Mansions doesn't have the
biggest outfit of flags in the whole street. Two dollars you promised me.'

Winston found and handed over two creased and filthy notes, which Parsons
entered in a small notebook, in the neat handwriting of the illiterate.

'By the way, old boy,' he said. 'I hear that little beggar of mine let fly
at you with his catapult yesterday. I gave him a good dressing-down for it.
In fact I told him I'd take the catapult away if he does it again.'

'I think he was a little upset at not going to the execution,' said
Winston.

'Ah, well--what I mean to say, shows the right spirit, doesn't it?
Mischievous little beggars they are, both of them, but talk about keenness!
All they think about is the Spies, and the war, of course. D'you know what
that little girl of mine did last Saturday, when her troop was on a hike
out Berkhamsted way? She got two other girls to go with her, slipped off
from the hike, and spent the whole afternoon following a strange man. They
kept on his tail for two hours, right through the woods, and then, when
they got into Amersham, handed him over to the patrols.'

'What did they do that for?' said Winston, somewhat taken aback. Parsons
went on triumphantly:

'My kid made sure he was some kind of enemy agent--might have been dropped
by parachute, for instance. But here's the point, old boy. What do you
think put her on to him in the first place? She spotted he was wearing a
funny kind of shoes--said she'd never seen anyone wearing shoes like that
before. So the chances were he was a foreigner. Pretty smart for a nipper
of seven, eh?'

'What happened to the man?' said Winston.

'Ah, that I couldn't say, of course. But I wouldn't be altogether surprised
if----' Parsons made the motion of aiming a rifle, and clicked his tongue
for the explosion.

'Good,' said Syme abstractedly, without looking up from his strip of paper.

'Of course we can't afford to take chances,' agreed Winston dutifully.

'What I mean to say, there is a war on,' said Parsons.

As though in confirmation of this, a trumpet call floated from the
telescreen just above their heads. However, it was not the proclamation of
a military victory this time, but merely an announcement from the Ministry
of Plenty.

'Comrades!' cried an eager youthful voice. 'Attention, comrades! We have
glorious news for you. We have won the battle for production! Returns now
completed of the output of all classes of consumption goods show that the
standard of living has risen by no less than 20 per cent over the past
year. All over Oceania this morning there were irrepressible spontaneous
demonstrations when workers marched out of factories and offices and
paraded through the streets with banners voicing their gratitude to Big
Brother for the new, happy life which his wise leadership has bestowed
upon us. Here are some of the completed figures. Foodstuffs----'

The phrase 'our new, happy life' recurred several times. It had been a
favourite of late with the Ministry of Plenty. Parsons, his attention
caught by the trumpet call, sat listening with a sort of gaping solemnity,
a sort of edified boredom. He could not follow the figures, but he was
aware that they were in some way a cause for satisfaction. He had lugged
out a huge and filthy pipe which was already half full of charred tobacco.
With the tobacco ration at 100 grammes a week it was seldom possible to
fill a pipe to the top. Winston was smoking a Victory Cigarette which he
held carefully horizontal. The new ration did not start till tomorrow and
he had only four cigarettes left. For the moment he had shut his ears to
the remoter noises and was listening to the stuff that streamed out of the
telescreen. It appeared that there had even been demonstrations to thank
Big Brother for raising the chocolate ration to twenty grammes a week. And
only yesterday, he reflected, it had been announced that the ration was
to be REDUCED to twenty grammes a week. Was it possible that they could
swallow that, after only twenty-four hours? Yes, they swallowed it. Parsons
swallowed it easily, with the stupidity of an animal. The eyeless creature
at the other table swallowed it fanatically, passionately, with a furious
desire to track down, denounce, and vaporize anyone who should suggest that
last week the ration had been thirty grammes. Syme, too--in some more
complex way, involving doublethink, Syme swallowed it. Was he, then, ALONE
in the possession of a memory?

The fabulous statistics continued to pour out of the telescreen. As
compared with last year there was more food, more clothes, more houses,
more furniture, more cooking-pots, more fuel, more ships, more helicopters,
more books, more babies--more of everything except disease, crime, and
insanity. Year by year and minute by minute, everybody and everything was
whizzing rapidly upwards. As Syme had done earlier Winston had taken up
his spoon and was dabbling in the pale-coloured gravy that dribbled across
the table, drawing a long streak of it out into a pattern. He meditated
resentfully on the physical texture of life. Had it always been like
this? Had food always tasted like this? He looked round the canteen.
A low-ceilinged, crowded room, its walls grimy from the contact of
innumerable bodies; battered metal tables and chairs, placed so close
together that you sat with elbows touching; bent spoons, dented trays,
coarse white mugs; all surfaces greasy, grime in every crack; and a
sourish, composite smell of bad gin and bad coffee and metallic stew and
dirty clothes. Always in your stomach and in your skin there was a sort
of protest, a feeling that you had been cheated of something that you had
a right to. It was true that he had no memories of anything greatly
different. In any time that he could accurately remember, there had never
been quite enough to eat, one had never had socks or underclothes that
were not full of holes, furniture had always been battered and rickety,
rooms underheated, tube trains crowded, houses falling to pieces,
bread dark-coloured, tea a rarity, coffee filthy-tasting, cigarettes
insufficient--nothing cheap and plentiful except synthetic gin. And though,
of course, it grew worse as one's body aged, was it not a sign that this
was NOT the natural order of things, if one's heart sickened at the
discomfort and dirt and scarcity, the interminable winters, the stickiness
of one's socks, the lifts that never worked, the cold water, the gritty
soap, the cigarettes that came to pieces, the food with its strange evil
tastes? Why should one feel it to be intolerable unless one had some kind
of ancestral memory that things had once been different?

He looked round the canteen again. Nearly everyone was ugly, and would
still have been ugly even if dressed otherwise than in the uniform blue
overalls. On the far side of the room, sitting at a table alone, a small,
curiously beetle-like man was drinking a cup of coffee, his little eyes
darting suspicious glances from side to side. How easy it was, thought
Winston, if you did not look about you, to believe that the physical type
set up by the Party as an ideal--tall muscular youths and deep-bosomed
maidens, blond-haired, vital, sunburnt, carefree--existed and even
predominated. Actually, so far as he could judge, the majority of people
in Airstrip One were small, dark, and ill-favoured. It was curious how that
beetle-like type proliferated in the Ministries: little dumpy men, growing
stout very early in life, with short legs, swift scuttling movements, and
fat inscrutable faces with very small eyes. It was the type that seemed to
flourish best under the dominion of the Party.

The announcement from the Ministry of Plenty ended on another trumpet call
and gave way to tinny music. Parsons, stirred to vague enthusiasm by the
bombardment of figures, took his pipe out of his mouth.

'The Ministry of Plenty's certainly done a good job this year,' he said
with a knowing shake of his head. 'By the way, Smith old boy, I suppose
you haven't got any razor blades you can let me have?'

'Not one,' said Winston. 'I've been using the same blade for six weeks
myself.'

'Ah, well--just thought I'd ask you, old boy.'

'Sorry,' said Winston.

The quacking voice from the next table, temporarily silenced during the
Ministry's announcement, had started up again, as loud as ever. For some
reason Winston suddenly found himself thinking of Mrs Parsons, with her
wispy hair and the dust in the creases of her face. Within two years those
children would be denouncing her to the Thought Police. Mrs Parsons would
be vaporized. Syme would be vaporized. Winston would be vaporized. O'Brien
would be vaporized. Parsons, on the other hand, would never be vaporized.
The eyeless creature with the quacking voice would never be vaporized.
The little beetle-like men who scuttle so nimbly through the labyrinthine
corridors of Ministries they, too, would never be vaporized. And the girl
with dark hair, the girl from the Fiction Department--she would never be
vaporized either. It seemed to him that he knew instinctively who would
survive and who would perish: though just what it was that made for
survival, it was not easy to say.

At this moment he was dragged out of his reverie with a violent jerk. The
girl at the next table had turned partly round and was looking at him. It
was the girl with dark hair. She was looking at him in a sidelong way, but
with curious intensity. The instant she caught his eye she looked away
again.

The sweat started out on Winston's backbone. A horrible pang of terror
went through him. It was gone almost at once, but it left a sort of nagging
uneasiness behind. Why was she watching him? Why did she keep following him
about? Unfortunately he could not remember whether she had already been at
the table when he arrived, or had come there afterwards. But yesterday, at
any rate, during the Two Minutes Hate, she had sat immediately behind him
when there was no apparent need to do so. Quite likely her real object had
been to listen to him and make sure whether he was shouting loudly enough.

His earlier thought returned to him: probably she was not actually a member
of the Thought Police, but then it was precisely the amateur spy who was
the greatest danger of all. He did not know how long she had been looking
at him, but perhaps for as much as five minutes, and it was possible
that his features had not been perfectly under control. It was terribly
dangerous to let your thoughts wander when you were in any public place
or within range of a telescreen. The smallest thing could give you away.
A nervous tic, an unconscious look of anxiety, a habit of muttering to
yourself--anything that carried with it the suggestion of abnormality, of
having something to hide. In any case, to wear an improper expression on
your face (to look incredulous when a victory was announced, for example)
was itself a punishable offence. There was even a word for it in Newspeak:
FACECRIME, it was called.

The girl had turned her back on him again. Perhaps after all she was not
really following him about, perhaps it was coincidence that she had sat so
close to him two days running. His cigarette had gone out, and he laid it
carefully on the edge of the table. He would finish smoking it after work,
if he could keep the tobacco in it. Quite likely the person at the next
table was a spy of the Thought Police, and quite likely he would be in the
cellars of the Ministry of Love within three days, but a cigarette end
must not be wasted. Syme had folded up his strip of paper and stowed it
away in his pocket. Parsons had begun talking again.

'Did I ever tell you, old boy,' he said, chuckling round the stem of his
pipe, 'about the time when those two nippers of mine set fire to the old
market-woman's skirt because they saw her wrapping up sausages in a poster
of B.B.? Sneaked up behind her and set fire to it with a box of matches.
Burned her quite badly, I believe. Little beggars, eh? But keen as mustard!
That's a first-rate training they give them in the Spies nowadays--better
than in my day, even. What d'you think's the latest thing they've served
them out with? Ear trumpets for listening through keyholes! My little
girl brought one home the other night--tried it out on our sitting-room
door, and reckoned she could hear twice as much as with her ear to the
hole. Of course it's only a toy, mind you. Still, gives 'em the right
idea, eh?'

At this moment the telescreen let out a piercing whistle. It was the
signal to return to work. All three men sprang to their feet to join in
the struggle round the lifts, and the remaining tobacco fell out of
Winston's cigarette.




Chapter 6



Winston was writing in his diary:


   It was three years ago. It was on a dark evening, in a narrow
side-street near one of the big railway stations. She was standing near a
doorway in the wall, under a street lamp that hardly gave any light. She
had a young face, painted very thick. It was really the paint that appealed
to me, the whiteness of it, like a mask, and the bright red lips. Party
women never paint their faces. There was nobody else in the street, and no
telescreens. She said two dollars. I----


For the moment it was too difficult to go on. He shut his eyes and pressed
his fingers against them, trying to squeeze out the vision that kept
recurring. He had an almost overwhelming temptation to shout a string of
filthy words at the top of his voice. Or to bang his head against the wall,
to kick over the table, and hurl the inkpot through the window--to do any
violent or noisy or painful thing that might black out the memory that was
tormenting him.

Your worst enemy, he reflected, was your own nervous system. At any moment
the tension inside you was liable to translate itself into some visible
symptom. He thought of a man whom he had passed in the street a few weeks
back; a quite ordinary-looking man, a Party member, aged thirty-five to
forty, tallish and thin, carrying a brief-case. They were a few metres
apart when the left side of the man's face was suddenly contorted by a sort
of spasm. It happened again just as they were passing one another: it was
only a twitch, a quiver, rapid as the clicking of a camera shutter, but
obviously habitual. He remembered thinking at the time: That poor devil is
done for. And what was frightening was that the action was quite possibly
unconscious. The most deadly danger of all was talking in your sleep. There
was no way of guarding against that, so far as he could see.

He drew his breath and went on writing:


   I went with her through the doorway and across a backyard into a
basement kitchen. There was a bed against the wall, and a lamp on the
table, turned down very low. She----


His teeth were set on edge. He would have liked to spit. Simultaneously
with the woman in the basement kitchen he thought of Katharine, his wife.
Winston was married--had been married, at any rate: probably he still was
married, so far as he knew his wife was not dead. He seemed to breathe
again the warm stuffy odour of the basement kitchen, an odour compounded
of bugs and dirty clothes and villainous cheap scent, but nevertheless
alluring, because no woman of the Party ever used scent, or could be
imagined as doing so. Only the proles used scent. In his mind the smell
of it was inextricably mixed up with fornication.

When he had gone with that woman it had been his first lapse in two years
or thereabouts. Consorting with prostitutes was forbidden, of course, but
it was one of those rules that you could occasionally nerve yourself to
break. It was dangerous, but it was not a life-and-death matter. To be
caught with a prostitute might mean five years in a forced-labour camp:
not more, if you had committed no other offence. And it was easy enough,
provided that you could avoid being caught in the act. The poorer quarters
swarmed with women who were ready to sell themselves. Some could even be
purchased for a bottle of gin, which the proles were not supposed to drink.
Tacitly the Party was even inclined to encourage prostitution, as an outlet
for instincts which could not be altogether suppressed. Mere debauchery
did not matter very much, so long as it was furtive and joyless and only
involved the women of a submerged and despised class. The unforgivable
crime was promiscuity between Party members. But--though this was one
of the crimes that the accused in the great purges invariably confessed
to--it was difficult to imagine any such thing actually happening.

The aim of the Party was not merely to prevent men and women from forming
loyalties which it might not be able to control. Its real, undeclared
purpose was to remove all pleasure from the sexual act. Not love so much
as eroticism was the enemy, inside marriage as well as outside it. All
marriages between Party members had to be approved by a committee
appointed for the purpose, and--though the principle was never clearly
stated--permission was always refused if the couple concerned gave
the impression of being physically attracted to one another. The only
recognized purpose of marriage was to beget children for the service of
the Party. Sexual intercourse was to be looked on as a slightly disgusting
minor operation, like having an enema. This again was never put into plain
words, but in an indirect way it was rubbed into every Party member from
childhood onwards. There were even organizations such as the Junior
Anti-Sex League, which advocated complete celibacy for both sexes. All
children were to be begotten by artificial insemination (ARTSEM, it was
called in Newspeak) and brought up in public institutions. This, Winston
was aware, was not meant altogether seriously, but somehow it fitted in
with the general ideology of the Party. The Party was trying to kill the
sex instinct, or, if it could not be killed, then to distort it and dirty
it. He did not know why this was so, but it seemed natural that it should
be so. And as far as the women were concerned, the Party's efforts were
largely successful.

He thought again of Katharine. It must be nine, ten--nearly eleven years
since they had parted. It was curious how seldom he thought of her. For
days at a time he was capable of forgetting that he had ever been married.
They had only been together for about fifteen months. The Party did not
permit divorce, but it rather encouraged separation in cases where there
were no children.

Katharine was a tall, fair-haired girl, very straight, with splendid
movements. She had a bold, aquiline face, a face that one might have called
noble until one discovered that there was as nearly as possible nothing
behind it. Very early in her married life he had decided--though perhaps
it was only that he knew her more intimately than he knew most people--that
she had without exception the most stupid, vulgar, empty mind that he had
ever encountered. She had not a thought in her head that was not a slogan,
and there was no imbecility, absolutely none that she was not capable of
swallowing if the Party handed it out to her. 'The human sound-track' he
nicknamed her in his own mind. Yet he could have endured living with her
if it had not been for just one thing--sex.

As soon as he touched her she seemed to wince and stiffen. To embrace her
was like embracing a jointed wooden image. And what was strange was that
even when she was clasping him against her he had the feeling that she
was simultaneously pushing him away with all her strength. The rigidity
of her muscles managed to convey that impression. She would lie there
with shut eyes, neither resisting nor co-operating but SUBMITTING. It was
extraordinarily embarrassing, and, after a while, horrible. But even then
he could have borne living with her if it had been agreed that they should
remain celibate. But curiously enough it was Katharine who refused this.
They must, she said, produce a child if they could. So the performance
continued to happen, once a week quite regularly, whenever it was not
impossible. She even used to remind him of it in the morning, as something
which had to be done that evening and which must not be forgotten. She had
two names for it. One was 'making a baby', and the other was 'our duty to
the Party' (yes, she had actually used that phrase). Quite soon he grew to
have a feeling of positive dread when the appointed day came round. But
luckily no child appeared, and in the end she agreed to give up trying,
and soon afterwards they parted.

Winston sighed inaudibly. He picked up his pen again and
wrote:


   She threw herself down on the bed, and at once, without any kind of
preliminary in the most coarse, horrible way you can imagine, pulled up
her skirt. I----


He saw himself standing there in the dim lamplight, with the smell of bugs
and cheap scent in his nostrils, and in his heart a feeling of defeat and
resentment which even at that moment was mixed up with the thought of
Katharine's white body, frozen for ever by the hypnotic power of the Party.
Why did it always have to be like this? Why could he not have a woman of
his own instead of these filthy scuffles at intervals of years? But a real
love affair was an almost unthinkable event. The women of the Party were
all alike. Chastity was as deep ingrained in them as Party loyalty. By
careful early conditioning, by games and cold water, by the rubbish that
was dinned into them at school and in the Spies and the Youth League, by
lectures, parades, songs, slogans, and martial music, the natural feeling
had been driven out of them. His reason told him that there must be
exceptions, but his heart did not believe it. They were all impregnable,
as the Party intended that they should be. And what he wanted, more even
than to be loved, was to break down that wall of virtue, even if it were
only once in his whole life. The sexual act, successfully performed, was
rebellion. Desire was thoughtcrime. Even to have awakened Katharine, if he
could have achieved it, would have been like a seduction, although she was
his wife.

But the rest of the story had got to be written down. He wrote:


   I turned up the lamp. When I saw her in the light----


After the darkness the feeble light of the paraffin lamp had seemed very
bright. For the first time he could see the woman properly. He had taken a
step towards her and then halted, full of lust and terror. He was painfully
conscious of the risk he had taken in coming here. It was perfectly
possible that the patrols would catch him on the way out: for that matter
they might be waiting outside the door at this moment. If he went away
without even doing what he had come here to do----!

It had got to be written down, it had got to be confessed. What he had
suddenly seen in the lamplight was that the woman was OLD. The paint was
plastered so thick on her face that it looked as though it might crack
like a cardboard mask. There were streaks of white in her hair; but the
truly dreadful detail was that her mouth had fallen a little open,
revealing nothing except a cavernous blackness. She had no teeth at all.

He wrote hurriedly, in scrabbling handwriting:


   When I saw her in the light she was quite an old woman, fifty years old
at least. But I went ahead and did it just the same.


He pressed his fingers against his eyelids again. He had written it down
at last, but it made no difference. The therapy had not worked. The urge
to shout filthy words at the top of his voice was as strong as ever.




Chapter 7



'If there is hope,' wrote Winston, 'it lies in the proles.'

If there was hope, it MUST lie in the proles, because only there in those
swarming disregarded masses, 85 per cent of the population of Oceania,
could the force to destroy the Party ever be generated. The Party could
not be overthrown from within. Its enemies, if it had any enemies, had
no way of coming together or even of identifying one another. Even if
the legendary Brotherhood existed, as just possibly it might, it was
inconceivable that its members could ever assemble in larger numbers than
twos and threes. Rebellion meant a look in the eyes, an inflexion of the
voice, at the most, an occasional whispered word. But the proles, if only
they could somehow become conscious of their own strength. would have no
need to conspire. They needed only to rise up and shake themselves like
a horse shaking off flies. If they chose they could blow the Party to
pieces tomorrow morning. Surely sooner or later it must occur to them to
do it? And yet----!

He remembered how once he had been walking down a crowded street when a
tremendous shout of hundreds of voices women's voices--had burst from a
side-street a little way ahead. It was a great formidable cry of anger
and despair, a deep, loud 'Oh-o-o-o-oh!' that went humming on like the
reverberation of a bell. His heart had leapt. It's started! he had thought.
A riot! The proles are breaking loose at last! When he had reached the spot
it was to see a mob of two or three hundred women crowding round the stalls
of a street market, with faces as tragic as though they had been the doomed
passengers on a sinking ship. But at this moment the general despair broke
down into a multitude of individual quarrels. It appeared that one of the
stalls had been selling tin saucepans. They were wretched, flimsy things,
but cooking-pots of any kind were always difficult to get. Now the supply
had unexpectedly given out. The successful women, bumped and jostled by
the rest, were trying to make off with their saucepans while dozens of
others clamoured round the stall, accusing the stall-keeper of favouritism
and of having more saucepans somewhere in reserve. There was a fresh
outburst of yells. Two bloated women, one of them with her hair coming
down, had got hold of the same saucepan and were trying to tear it out of
one another's hands. For a moment they were both tugging, and then the
handle came off. Winston watched them disgustedly. And yet, just for a
moment, what almost frightening power had sounded in that cry from only
a few hundred throats! Why was it that they could never shout like that
about anything that mattered?

He wrote:


   Until they become conscious they will never rebel, and until after they
have rebelled they cannot become conscious.


That, he reflected, might almost have been a transcription from one of the
Party textbooks. The Party claimed, of course, to have liberated the proles
from bondage. Before the Revolution they had been hideously oppressed by
the capitalists, they had been starved and flogged, women had been forced
to work in the coal mines (women still did work in the coal mines, as a
matter of fact), children had been sold into the factories at the age
of six. But simultaneously, true to the Principles of doublethink, the
Party taught that the proles were natural inferiors who must be kept in
subjection, like animals, by the application of a few simple rules. In
reality very little was known about the proles. It was not necessary to
know much. So long as they continued to work and breed, their other
activities were without importance. Left to themselves, like cattle turned
loose upon the plains of Argentina, they had reverted to a style of life
that appeared to be natural to them, a sort of ancestral pattern. They were
born, they grew up in the gutters, they went to work at twelve, they passed
through a brief blossoming-period of beauty and sexual desire, they married
at twenty, they were middle-aged at thirty, they died, for the most part,
at sixty. Heavy physical work, the care of home and children, petty
quarrels with neighbours, films, football, beer, and above all, gambling,
filled up the horizon of their minds. To keep them in control was not
difficult. A few agents of the Thought Police moved always among them,
spreading false rumours and marking down and eliminating the few
individuals who were judged capable of becoming dangerous; but no attempt
was made to indoctrinate them with the ideology of the Party. It was not
desirable that the proles should have strong political feelings. All that
was required of them was a primitive patriotism which could be appealed to
whenever it was necessary to make them accept longer working-hours or
shorter rations. And even when they became discontented, as they sometimes
did, their discontent led nowhere, because being without general ideas,
they could only focus it on petty specific grievances. The larger evils
invariably escaped their notice. The great majority of proles did not even
have telescreens in their homes. Even the civil police interfered with them
very little. There was a vast amount of criminality in London, a whole
world-within-a-world of thieves, bandits, prostitutes, drug-peddlers, and
racketeers of every description; but since it all happened among the proles
themselves, it was of no importance. In all questions of morals they were
allowed to follow their ancestral code. The sexual puritanism of the
Party was not imposed upon them. Promiscuity went unpunished, divorce
was permitted. For that matter, even religious worship would have been
permitted if the proles had shown any sign of needing or wanting it.
They were beneath suspicion. As the Party slogan put it: 'Proles and
animals are free.'

Winston reached down and cautiously scratched his varicose ulcer. It
had begun itching again. The thing you invariably came back to was the
impossibility of knowing what life before the Revolution had really been
like. He took out of the drawer a copy of a children's history textbook
which he had borrowed from Mrs Parsons, and began copying a passage into
the diary:


   In the old days (it ran), before the glorious Revolution, London was
not the beautiful city that we know today. It was a dark, dirty, miserable
place where hardly anybody had enough to eat and where hundreds and
thousands of poor people had no boots on their feet and not even a roof to
sleep under. Children no older than you had to work twelve hours a day for
cruel masters who flogged them with whips if they worked too slowly and
fed them on nothing but stale breadcrusts and water. But in among all
this terrible poverty there were just a few great big beautiful houses
that were lived in by rich men who had as many as thirty servants to look
after them. These rich men were called capitalists. They were fat, ugly
men with wicked faces, like the one in the picture on the opposite page.
You can see that he is dressed in a long black coat which was called a
frock coat, and a queer, shiny hat shaped like a stovepipe, which was
called a top hat. This was the uniform of the capitalists, and no one else
was allowed to wear it. The capitalists owned everything in the world, and
everyone else was their slave. They owned all the land, all the houses,
all the factories, and all the money. If anyone disobeyed them they could
throw them into prison, or they could take his job away and starve him to
death. When any ordinary person spoke to a capitalist he had to cringe and
bow to him, and take off his cap and address him as 'Sir'. The chief of
all the capitalists was called the King, and----


But he knew the rest of the catalogue. There would be mention of the
bishops in their lawn sleeves, the judges in their ermine robes, the
pillory, the stocks, the treadmill, the cat-o'-nine tails, the Lord Mayor's
Banquet, and the practice of kissing the Pope's toe. There was also
something called the JUS PRIMAE NOCTIS, which would probably not be
mentioned in a textbook for children. It was the law by which every
capitalist had the right to sleep with any woman working in one of his
factories.

How could you tell how much of it was lies? It MIGHT be true that the
average human being was better off now than he had been before the
Revolution. The only evidence to the contrary was the mute protest in your
own bones, the instinctive feeling that the conditions you lived in were
intolerable and that at some other time they must have been different. It
struck him that the truly characteristic thing about modern life was not
its cruelty and insecurity, but simply its bareness, its dinginess, its
listlessness. Life, if you looked about you, bore no resemblance not only
to the lies that streamed out of the telescreens, but even to the ideals
that the Party was trying to achieve. Great areas of it, even for a Party
member, were neutral and non-political, a matter of slogging through dreary
jobs, fighting for a place on the Tube, darning a worn-out sock, cadging
a saccharine tablet, saving a cigarette end. The ideal set up by the
Party was something huge, terrible, and glittering--a world of steel
and concrete, of monstrous machines and terrifying weapons--a nation of
warriors and fanatics, marching forward in perfect unity, all thinking the
same thoughts and shouting the same slogans, perpetually working, fighting,
triumphing, persecuting--three hundred million people all with the same
face. The reality was decaying, dingy cities where underfed people shuffled
to and fro in leaky shoes, in patched-up nineteenth-century houses that
smelt always of cabbage and bad lavatories. He seemed to see a vision of
London, vast and ruinous, city of a million dustbins, and mixed up with it
was a picture of Mrs Parsons, a woman with lined face and wispy hair,
fiddling helplessly with a blocked waste-pipe.

He reached down and scratched his ankle again. Day and night the
telescreens bruised your ears with statistics proving that people today
had more food, more clothes, better houses, better recreations--that they
lived longer, worked shorter hours, were bigger, healthier, stronger,
happier, more intelligent, better educated, than the people of fifty years
ago. Not a word of it could ever be proved or disproved. The Party claimed,
for example, that today 40 per cent of adult proles were literate: before
the Revolution, it was said, the number had only been 15 per cent. The
Party claimed that the infant mortality rate was now only 160 per
thousand, whereas before the Revolution it had been 300--and so it went
on. It was like a single equation with two unknowns. It might very well be
that literally every word in the history books, even the things that one
accepted without question, was pure fantasy. For all he knew there might
never have been any such law as the JUS PRIMAE NOCTIS, or any such creature
as a capitalist, or any such garment as a top hat.

Everything faded into mist. The past was erased, the erasure was forgotten,
the lie became truth. Just once in his life he had possessed--AFTER the
event: that was what counted--concrete, unmistakable evidence of an act of
falsification. He had held it between his fingers for as long as thirty
seconds. In 1973, it must have been--at any rate, it was at about the time
when he and Katharine had parted. But the really relevant date was seven
or eight years earlier.

The story really began in the middle sixties, the period of the great
purges in which the original leaders of the Revolution were wiped out
once and for all. By 1970 none of them was left, except Big Brother
himself. All the rest had by that time been exposed as traitors and
counter-revolutionaries. Goldstein had fled and was hiding no one knew
where, and of the others, a few had simply disappeared, while the majority
had been executed after spectacular public trials at which they made
confession of their crimes. Among the last survivors were three men named
Jones, Aaronson, and Rutherford. It must have been in 1965 that these three
had been arrested. As often happened, they had vanished for a year or more,
so that one did not know whether they were alive or dead, and then had
suddenly been brought forth to incriminate themselves in the usual way.
They had confessed to intelligence with the enemy (at that date, too, the
enemy was Eurasia), embezzlement of public funds, the murder of various
trusted Party members, intrigues against the leadership of Big Brother
which had started long before the Revolution happened, and acts of sabotage
causing the death of hundreds of thousands of people. After confessing to
these things they had been pardoned, reinstated in the Party, and given
posts which were in fact sinecures but which sounded important. All three
had written long, abject articles in 'The Times', analysing the reasons
for their defection and promising to make amends.

Some time after their release Winston had actually seen all three of them
in the Chestnut Tree Cafe. He remembered the sort of terrified fascination
with which he had watched them out of the corner of his eye. They were men
far older than himself, relics of the ancient world, almost the last great
figures left over from the heroic days of the Party. The glamour of the
underground struggle and the civil war still faintly clung to them. He had
the feeling, though already at that time facts and dates were growing
blurry, that he had known their names years earlier than he had known that
of Big Brother. But also they were outlaws, enemies, untouchables, doomed
with absolute certainty to extinction within a year or two. No one who had
once fallen into the hands of the Thought Police ever escaped in the end.
They were corpses waiting to be sent back to the grave.

There was no one at any of the tables nearest to them. It was not wise
even to be seen in the neighbourhood of such people. They were sitting
in silence before glasses of the gin flavoured with cloves which was the
speciality of the cafe. Of the three, it was Rutherford whose appearance
had most impressed Winston. Rutherford had once been a famous caricaturist,
whose brutal cartoons had helped to inflame popular opinion before and
during the Revolution. Even now, at long intervals, his cartoons were
appearing in The Times. They were simply an imitation of his earlier
manner, and curiously lifeless and unconvincing. Always they were a
rehashing of the ancient themes--slum tenements, starving children, street
battles, capitalists in top hats--even on the barricades the capitalists
still seemed to cling to their top hats an endless, hopeless effort to
get back into the past. He was a monstrous man, with a mane of greasy
grey hair, his face pouched and seamed, with thick negroid lips. At one
time he must have been immensely strong; now his great body was sagging,
sloping, bulging, falling away in every direction. He seemed to be breaking
up before one's eyes, like a mountain crumbling.

It was the lonely hour of fifteen. Winston could not now remember how he
had come to be in the cafe at such a time. The place was almost empty. A
tinny music was trickling from the telescreens. The three men sat in their
corner almost motionless, never speaking. Uncommanded, the waiter brought
fresh glasses of gin. There was a chessboard on the table beside them, with
the pieces set out but no game started. And then, for perhaps half a minute
in all, something happened to the telescreens. The tune that they were
playing changed, and the tone of the music changed too. There came into
it--but it was something hard to describe. It was a peculiar, cracked,
braying, jeering note: in his mind Winston called it a yellow note. And
then a voice from the telescreen was singing:


  Under the spreading chestnut tree
  I sold you and you sold me:
  There lie they, and here lie we
  Under the spreading chestnut tree.


The three men never stirred. But when Winston glanced again at Rutherford's
ruinous face, he saw that his eyes were full of tears. And for the first
time he noticed, with a kind of inward shudder, and yet not knowing
AT WHAT he shuddered, that both Aaronson and Rutherford had broken noses.

A little later all three were re-arrested. It appeared that they had
engaged in fresh conspiracies from the very moment of their release. At
their second trial they confessed to all their old crimes over again, with
a whole string of new ones. They were executed, and their fate was recorded
in the Party histories, a warning to posterity. About five years after
this, in 1973, Winston was unrolling a wad of documents which had just
flopped out of the pneumatic tube on to his desk when he came on a fragment
of paper which had evidently been slipped in among the others and then
forgotten. The instant he had flattened it out he saw its significance.
It was a half-page torn out of 'The Times' of about ten years earlier--the
top half of the page, so that it included the date--and it contained a
photograph of the delegates at some Party function in New York. Prominent
in the middle of the group were Jones, Aaronson, and Rutherford. There was
no mistaking them, in any case their names were in the caption at the
bottom.

The point was that at both trials all three men had confessed that on that
date they had been on Eurasian soil. They had flown from a secret airfield
in Canada to a rendezvous somewhere in Siberia, and had conferred with
members of the Eurasian General Staff, to whom they had betrayed important
military secrets. The date had stuck in Winston's memory because it chanced
to be midsummer day; but the whole story must be on record in countless
other places as well. There was only one possible conclusion: the
confessions were lies.

Of course, this was not in itself a discovery. Even at that time Winston
had not imagined that the people who were wiped out in the purges had
actually committed the crimes that they were accused of. But this was
concrete evidence; it was a fragment of the abolished past, like a fossil
bone which turns up in the wrong stratum and destroys a geological theory.
It was enough to blow the Party to atoms, if in some way it could have
been published to the world and its significance made known.

He had gone straight on working. As soon as he saw what the photograph
was, and what it meant, he had covered it up with another sheet of paper.
Luckily, when he unrolled it, it had been upside-down from the point of
view of the telescreen.

He took his scribbling pad on his knee and pushed back his chair so as
to get as far away from the telescreen as possible. To keep your face
expressionless was not difficult, and even your breathing could be
controlled, with an effort: but you could not control the beating of your
heart, and the telescreen was quite delicate enough to pick it up. He let
what he judged to be ten minutes go by, tormented all the while by the
fear that some accident--a sudden draught blowing across his desk, for
instance--would betray him. Then, without uncovering it again, he dropped
the photograph into the memory hole, along with some other waste papers.
Within another minute, perhaps, it would have crumbled into ashes.

That was ten--eleven years ago. Today, probably, he would have kept that
photograph. It was curious that the fact of having held it in his fingers
seemed to him to make a difference even now, when the photograph itself,
as well as the event it recorded, was only memory. Was the Party's hold
upon the past less strong, he wondered, because a piece of evidence which
existed no longer HAD ONCE existed?

But today, supposing that it could be somehow resurrected from its ashes,
the photograph might not even be evidence. Already, at the time when he
made his discovery, Oceania was no longer at war with Eurasia, and it must
have been to the agents of Eastasia that the three dead men had betrayed
their country. Since then there had been other changes--two, three,
he could not remember how many. Very likely the confessions had been
rewritten and rewritten until the original facts and dates no longer
had the smallest significance. The past not only changed, but changed
continuously. What most afflicted him with the sense of nightmare was that
he had never clearly understood why the huge imposture was undertaken.
The immediate advantages of falsifying the past were obvious, but the
ultimate motive was mysterious. He took up his pen again and wrote:


   I understand HOW: I do not understand WHY.


He wondered, as he had many times wondered before, whether he himself was
a lunatic. Perhaps a lunatic was simply a minority of one. At one time it
had been a sign of madness to believe that the earth goes round the sun;
today, to believe that the past is unalterable. He might be ALONE in
holding that belief, and if alone, then a lunatic. But the thought of being
a lunatic did not greatly trouble him: the horror was that he might also
be wrong.

He picked up the children's history book and looked at the portrait of
Big Brother which formed its frontispiece. The hypnotic eyes gazed into
his own. It was as though some huge force were pressing down upon
you--something that penetrated inside your skull, battering against your
brain, frightening you out of your beliefs, persuading you, almost, to
deny the evidence of your senses. In the end the Party would announce that
two and two made five, and you would have to believe it. It was inevitable
that they should make that claim sooner or later: the logic of their
position demanded it. Not merely the validity of experience, but the very
existence of external reality, was tacitly denied by their philosophy. The
heresy of heresies was common sense. And what was terrifying was not that
they would kill you for thinking otherwise, but that they might be right.
For, after all, how do we know that two and two make four? Or that the
force of gravity works? Or that the past is unchangeable? If both the past
and the external world exist only in the mind, and if the mind itself is
controllable what then?

But no! His courage seemed suddenly to stiffen of its own accord. The face
of O'Brien, not called up by any obvious association, had floated into his
mind. He knew, with more certainty than before, that O'Brien was on his
side. He was writing the diary for O'Brien--TO O'Brien: it was like an
interminable letter which no one would ever read, but which was addressed
to a particular person and took its colour from that fact.

The Party told you to reject the evidence of your eyes and ears. It was
their final, most essential command. His heart sank as he thought of
the enormous power arrayed against him, the ease with which any Party
intellectual would overthrow him in debate, the subtle arguments which he
would not be able to understand, much less answer. And yet he was in the
right! They were wrong and he was right. The obvious, the silly, and the
true had got to be defended. Truisms are true, hold on to that! The solid
world exists, its laws do not change. Stones are hard, water is wet,
objects unsupported fall towards the earth's centre. With the feeling that
he was speaking to O'Brien, and also that he was setting forth an important
axiom, he wrote:


   Freedom is the freedom to say that two plus two make four. If that is
granted, all else follows.




Chapter 8



From somewhere at the bottom of a passage the smell of roasting
coffee--real coffee, not Victory Coffee--came floating out into the street.
Winston paused involuntarily. For perhaps two seconds he was back in the
half-forgotten world of his childhood. Then a door banged, seeming to cut
off the smell as abruptly as though it had been a sound.

He had walked several kilometres over pavements, and his varicose ulcer
was throbbing. This was the second time in three weeks that he had missed
an evening at the Community Centre: a rash act, since you could be certain
that the number of your attendances at the Centre was carefully checked.
In principle a Party member had no spare time, and was never alone except
in bed. It was assumed that when he was not working, eating, or sleeping
he would be taking part in some kind of communal recreation: to do anything
that suggested a taste for solitude, even to go for a walk by yourself,
was always slightly dangerous. There was a word for it in Newspeak:
OWNLIFE, it was called, meaning individualism and eccentricity. But this
evening as he came out of the Ministry the balminess of the April air had
tempted him. The sky was a warmer blue than he had seen it that year, and
suddenly the long, noisy evening at the Centre, the boring, exhausting
games, the lectures, the creaking camaraderie oiled by gin, had seemed
intolerable. On impulse he had turned away from the bus-stop and wandered
off into the labyrinth of London, first south, then east, then north again,
losing himself among unknown streets and hardly bothering in which
direction he was going.

'If there is hope,' he had written in the diary, 'it lies in the proles.'
The words kept coming back to him, statement of a mystical truth and a
palpable absurdity. He was somewhere in the vague, brown-coloured slums
to the north and east of what had once been Saint Pancras Station. He was
walking up a cobbled street of little two-storey houses with battered
doorways which gave straight on the pavement and which were somehow
curiously suggestive of ratholes. There were puddles of filthy water here
and there among the cobbles. In and out of the dark doorways, and down
narrow alley-ways that branched off on either side, people swarmed in
astonishing numbers--girls in full bloom, with crudely lipsticked mouths,
and youths who chased the girls, and swollen waddling women who showed you
what the girls would be like in ten years' time, and old bent creatures
shuffling along on splayed feet, and ragged barefooted children who played
in the puddles and then scattered at angry yells from their mothers.
Perhaps a quarter of the windows in the street were broken and boarded up.
Most of the people paid no attention to Winston; a few eyed him with a
sort of guarded curiosity. Two monstrous women with brick-red forearms
folded across their aprons were talking outside a doorway. Winston caught
scraps of conversation as he approached.

'"Yes," I says to 'er, "that's all very well," I says. "But if you'd of
been in my place you'd of done the same as what I done. It's easy to
criticize," I says, "but you ain't got the same problems as what I got."'

'Ah,' said the other, 'that's jest it. That's jest where it is.'

The strident voices stopped abruptly. The women studied him in hostile
silence as he went past. But it was not hostility, exactly; merely a kind
of wariness, a momentary stiffening, as at the passing of some unfamiliar
animal. The blue overalls of the Party could not be a common sight in a
street like this. Indeed, it was unwise to be seen in such places, unless
you had definite business there. The patrols might stop you if you happened
to run into them. 'May I see your papers, comrade? What are you doing here?
What time did you leave work? Is this your usual way home?'--and so on and
so forth. Not that there was any rule against walking home by an unusual
route: but it was enough to draw attention to you if the Thought Police
heard about it.

Suddenly the whole street was in commotion. There were yells of warning
from all sides. People were shooting into the doorways like rabbits. A
young woman leapt out of a doorway a little ahead of Winston, grabbed up a
tiny child playing in a puddle, whipped her apron round it, and leapt back
again, all in one movement. At the same instant a man in a concertina-like
black suit, who had emerged from a side alley, ran towards Winston,
pointing excitedly to the sky.

'Steamer!' he yelled. 'Look out, guv'nor! Bang over'ead! Lay down quick!'

'Steamer' was a nickname which, for some reason, the proles applied to
rocket bombs. Winston promptly flung himself on his face. The proles were
nearly always right when they gave you a warning of this kind. They seemed
to possess some kind of instinct which told them several seconds in advance
when a rocket was coming, although the rockets supposedly travelled faster
than sound. Winston clasped his forearms above his head. There was a roar
that seemed to make the pavement heave; a shower of light objects pattered
on to his back. When he stood up he found that he was covered with
fragments of glass from the nearest window.

He walked on. The bomb had demolished a group of houses 200 metres up the
street. A black plume of smoke hung in the sky, and below it a cloud of
plaster dust in which a crowd was already forming around the ruins. There
was a little pile of plaster lying on the pavement ahead of him, and in
the middle of it he could see a bright red streak. When he got up to it he
saw that it was a human hand severed at the wrist. Apart from the bloody
stump, the hand was so completely whitened as to resemble a plaster cast.

He kicked the thing into the gutter, and then, to avoid the crowd, turned
down a side-street to the right. Within three or four minutes he was out
of the area which the bomb had affected, and the sordid swarming life of
the streets was going on as though nothing had happened. It was nearly
twenty hours, and the drinking-shops which the proles frequented ('pubs',
they called them) were choked with customers. From their grimy swing doors,
endlessly opening and shutting, there came forth a smell of urine, sawdust,
and sour beer. In an angle formed by a projecting house-front three men
were standing very close together, the middle one of them holding a
folded-up newspaper which the other two were studying over his shoulder.
Even before he was near enough to make out the expression on their faces,
Winston could see absorption in every line of their bodies. It was
obviously some serious piece of news that they were reading. He was a few
paces away from them when suddenly the group broke up and two of the men
were in violent altercation. For a moment they seemed almost on the point
of blows.

'Can't you bleeding well listen to what I say? I tell you no number ending
in seven ain't won for over fourteen months!'

'Yes, it 'as, then!'

'No, it 'as not! Back 'ome I got the 'ole lot of 'em for over two years
wrote down on a piece of paper. I takes 'em down reg'lar as the clock. An'
I tell you, no number ending in seven----'

'Yes, a seven 'AS won! I could pretty near tell you the bleeding number.
Four oh seven, it ended in. It were in February--second week in February.'

'February your grandmother! I got it all down in black and white. An' I
tell you, no number----'

'Oh, pack it in!' said the third man.

They were talking about the Lottery. Winston looked back when he had gone
thirty metres. They were still arguing, with vivid, passionate faces.
The Lottery, with its weekly pay-out of enormous prizes, was the one public
event to which the proles paid serious attention. It was probable that
there were some millions of proles for whom the Lottery was the principal
if not the only reason for remaining alive. It was their delight, their
folly, their anodyne, their intellectual stimulant. Where the Lottery was
concerned, even people who could barely read and write seemed capable of
intricate calculations and staggering feats of memory. There was a whole
tribe of men who made a living simply by selling systems, forecasts, and
lucky amulets. Winston had nothing to do with the running of the Lottery,
which was managed by the Ministry of Plenty, but he was aware (indeed
everyone in the party was aware) that the prizes were largely imaginary.
Only small sums were actually paid out, the winners of the big prizes being
non-existent persons. In the absence of any real intercommunication between
one part of Oceania and another, this was not difficult to arrange.

But if there was hope, it lay in the proles. You had to cling on to that.
When you put it in words it sounded reasonable: it was when you looked at
the human beings passing you on the pavement that it became an act of
faith. The street into which he had turned ran downhill. He had a feeling
that he had been in this neighbourhood before, and that there was a main
thoroughfare not far away. From somewhere ahead there came a din of
shouting voices. The street took a sharp turn and then ended in a flight
of steps which led down into a sunken alley where a few stall-keepers
were selling tired-looking vegetables. At this moment Winston remembered
where he was. The alley led out into the main street, and down the next
turning, not five minutes away, was the junk-shop where he had bought the
blank book which was now his diary. And in a small stationer's shop not
far away he had bought his penholder and his bottle of ink.

He paused for a moment at the top of the steps. On the opposite side of
the alley there was a dingy little pub whose windows appeared to be frosted
over but in reality were merely coated with dust. A very old man, bent but
active, with white moustaches that bristled forward like those of a prawn,
pushed open the swing door and went in. As Winston stood watching, it
occurred to him that the old man, who must be eighty at the least, had
already been middle-aged when the Revolution happened. He and a few others
like him were the last links that now existed with the vanished world of
capitalism. In the Party itself there were not many people left whose ideas
had been formed before the Revolution. The older generation had mostly
been wiped out in the great purges of the fifties and sixties, and the few
who survived had long ago been terrified into complete intellectual
surrender. If there was any one still alive who could give you a truthful
account of conditions in the early part of the century, it could only be a
prole. Suddenly the passage from the history book that he had copied into
his diary came back into Winston's mind, and a lunatic impulse took hold
of him. He would go into the pub, he would scrape acquaintance with that
old man and question him. He would say to him: 'Tell me about your life
when you were a boy. What was it like in those days? Were things better
than they are now, or were they worse?'

Hurriedly, lest he should have time to become frightened, he descended the
steps and crossed the narrow street. It was madness of course. As usual,
there was no definite rule against talking to proles and frequenting their
pubs, but it was far too unusual an action to pass unnoticed. If the
patrols appeared he might plead an attack of faintness, but it was not
likely that they would believe him. He pushed open the door, and a hideous
cheesy smell of sour beer hit him in the face. As he entered the din of
voices dropped to about half its volume. Behind his back he could feel
everyone eyeing his blue overalls. A game of darts which was going on at
the other end of the room interrupted itself for perhaps as much as thirty
seconds. The old man whom he had followed was standing at the bar, having
some kind of altercation with the barman, a large, stout, hook-nosed young
man with enormous forearms. A knot of others, standing round with glasses
in their hands, were watching the scene.

'I arst you civil enough, didn't I?' said the old man, straightening his
shoulders pugnaciously. 'You telling me you ain't got a pint mug in the
'ole bleeding boozer?'

'And what in hell's name IS a pint?' said the barman, leaning forward with
the tips of his fingers on the counter.

''Ark at 'im! Calls 'isself a barman and don't know what a pint is! Why,
a pint's the 'alf of a quart, and there's four quarts to the gallon.
'Ave to teach you the A, B, C next.'

'Never heard of 'em,' said the barman shortly. 'Litre and half
litre--that's all we serve. There's the glasses on the shelf in front
of you.'

'I likes a pint,' persisted the old man. 'You could 'a drawed me off a pint
easy enough. We didn't 'ave these bleeding litres when I was a young man.'

'When you were a young man we were all living in the treetops,' said the
barman, with a glance at the other customers.

There was a shout of laughter, and the uneasiness caused by Winston's entry
seemed to disappear. The old man's white-stubbled face had flushed pink. He
turned away, muttering to himself, and bumped into Winston. Winston caught
him gently by the arm.

'May I offer you a drink?' he said.

'You're a gent,' said the other, straightening his shoulders again. He
appeared not to have noticed Winston's blue overalls. 'Pint!' he added
aggressively to the barman. 'Pint of wallop.'

The barman swished two half-litres of dark-brown beer into thick glasses
which he had rinsed in a bucket under the counter. Beer was the only drink
you could get in prole pubs. The proles were supposed not to drink gin,
though in practice they could get hold of it easily enough. The game of
darts was in full swing again, and the knot of men at the bar had begun
talking about lottery tickets. Winston's presence was forgotten for a
moment. There was a deal table under the window where he and the old man
could talk without fear of being overheard. It was horribly dangerous, but
at any rate there was no telescreen in the room, a point he had made sure
of as soon as he came in.

''E could 'a drawed me off a pint,' grumbled the old man as he settled down
behind a glass. 'A 'alf litre ain't enough. It don't satisfy. And a 'ole
litre's too much. It starts my bladder running. Let alone the price.'

'You must have seen great changes since you were a young man,' said
Winston tentatively.

The old man's pale blue eyes moved from the darts board to the bar, and
from the bar to the door of the Gents, as though it were in the bar-room
that he expected the changes to have occurred.

'The beer was better,' he said finally. 'And cheaper! When I was a young
man, mild beer--wallop we used to call it--was fourpence a pint. That was
before the war, of course.'

'Which war was that?' said Winston.

'It's all wars,' said the old man vaguely. He took up his glass, and his
shoulders straightened again. ''Ere's wishing you the very best of 'ealth!'

In his lean throat the sharp-pointed Adam's apple made a surprisingly rapid
up-and-down movement, and the beer vanished. Winston went to the bar and
came back with two more half-litres. The old man appeared to have forgotten
his prejudice against drinking a full litre.

'You are very much older than I am,' said Winston. 'You must have been a
grown man before I was born. You can remember what it was like in the old
days, before the Revolution. People of my age don't really know anything
about those times. We can only read about them in books, and what it says
in the books may not be true. I should like your opinion on that. The
history books say that life before the Revolution was completely different
from what it is now. There was the most terrible oppression, injustice,
poverty worse than anything we can imagine. Here in London, the great mass
of the people never had enough to eat from birth to death. Half of them
hadn't even boots on their feet. They worked twelve hours a day, they left
school at nine, they slept ten in a room. And at the same time there were
a very few people, only a few thousands--the capitalists, they were
called--who were rich and powerful. They owned everything that there was
to own. They lived in great gorgeous houses with thirty servants, they
rode about in motor-cars and four-horse carriages, they drank champagne,
they wore top hats----'

The old man brightened suddenly.

'Top 'ats!' he said. 'Funny you should mention 'em. The same thing come
into my 'ead only yesterday, I dono why. I was jest thinking, I ain't seen
a top 'at in years. Gorn right out, they 'ave. The last time I wore one
was at my sister-in-law's funeral. And that was--well, I couldn't give you
the date, but it must'a been fifty years ago. Of course it was only 'ired
for the occasion, you understand.'

'It isn't very important about the top hats,' said Winston patiently.
'The point is, these capitalists--they and a few lawyers and priests and
so forth who lived on them--were the lords of the earth. Everything existed
for their benefit. You--the ordinary people, the workers--were their
slaves. They could do what they liked with you. They could ship you off to
Canada like cattle. They could sleep with your daughters if they chose.
They could order you to be flogged with something called a cat-o'-nine
tails. You had to take your cap off when you passed them. Every capitalist
went about with a gang of lackeys who----'

The old man brightened again.

'Lackeys!' he said. 'Now there's a word I ain't 'eard since ever so long.
Lackeys! That reg'lar takes me back, that does. I recollect--oh, donkey's
years ago--I used to sometimes go to 'Yde Park of a Sunday afternoon to
'ear the blokes making speeches. Salvation Army, Roman Catholics, Jews,
Indians--all sorts there was. And there was one bloke--well, I couldn't
give you 'is name, but a real powerful speaker 'e was. 'E didn't 'alf
give it 'em! "Lackeys!" 'e says, "lackeys of the bourgeoisie! Flunkies of
the ruling class!" Parasites--that was another of them. And 'yenas--'e
definitely called 'em 'yenas. Of course 'e was referring to the Labour
Party, you understand.'

Winston had the feeling that they were talking at cross-purposes.

'What I really wanted to know was this,' he said. 'Do you feel that you
have more freedom now than you had in those days? Are you treated more
like a human being? In the old days, the rich people, the people at the
top----'

'The 'Ouse of Lords,' put in the old man reminiscently.

'The House of Lords, if you like. What I am asking is, were these people
able to treat you as an inferior, simply because they were rich and you
were poor? Is it a fact, for instance, that you had to call them "Sir" and
take off your cap when you passed them?'

The old man appeared to think deeply. He drank off about a quarter of his
beer before answering.

'Yes,' he said. 'They liked you to touch your cap to 'em. It showed
respect, like. I didn't agree with it, myself, but I done it often enough.
Had to, as you might say.'

'And was it usual--I'm only quoting what I've read in history books--was
it usual for these people and their servants to push you off the pavement
into the gutter?'

'One of 'em pushed me once,' said the old man. 'I recollect it as if it
was yesterday. It was Boat Race night--terribly rowdy they used to get on
Boat Race night--and I bumps into a young bloke on Shaftesbury Avenue.
Quite a gent, 'e was--dress shirt, top 'at, black overcoat. 'E was kind
of zig-zagging across the pavement, and I bumps into 'im accidental-like.
'E says, "Why can't you look where you're going?" 'e says. I say, "Ju think
you've bought the bleeding pavement?" 'E says, "I'll twist your bloody 'ead
off if you get fresh with me." I says, "You're drunk. I'll give you in
charge in 'alf a minute," I says. An' if you'll believe me, 'e puts 'is
'and on my chest and gives me a shove as pretty near sent me under the
wheels of a bus. Well, I was young in them days, and I was going to 'ave
fetched 'im one, only----'

A sense of helplessness took hold of Winston. The old man's memory was
nothing but a rubbish-heap of details. One could question him all day
without getting any real information. The party histories might still be
true, after a fashion: they might even be completely true. He made a last
attempt.

'Perhaps I have not made myself clear,' he said. 'What I'm trying to say
is this. You have been alive a very long time; you lived half your life
before the Revolution. In 1925, for instance, you were already grown up.
Would you say from what you can remember, that life in 1925 was better
than it is now, or worse? If you could choose, would you prefer to live
then or now?'

The old man looked meditatively at the darts board. He finished up his
beer, more slowly than before. When he spoke it was with a tolerant
philosophical air, as though the beer had mellowed him.

'I know what you expect me to say,' he said. 'You expect me to say as I'd
sooner be young again. Most people'd say they'd sooner be young, if you
arst 'em. You got your 'ealth and strength when you're young. When you
get to my time of life you ain't never well. I suffer something wicked
from my feet, and my bladder's jest terrible. Six and seven times a night
it 'as me out of bed. On the other 'and, there's great advantages in being
a old man. You ain't got the same worries. No truck with women, and that's
a great thing. I ain't 'ad a woman for near on thirty year, if you'd
credit it. Nor wanted to, what's more.'

Winston sat back against the window-sill. It was no use going on. He was
about to buy some more beer when the old man suddenly got up and shuffled
rapidly into the stinking urinal at the side of the room. The extra
half-litre was already working on him. Winston sat for a minute or two
gazing at his empty glass, and hardly noticed when his feet carried him out
into the street again. Within twenty years at the most, he reflected, the
huge and simple question, 'Was life better before the Revolution than it
is now?' would have ceased once and for all to be answerable. But in effect
it was unanswerable even now, since the few scattered survivors from the
ancient world were incapable of comparing one age with another. They
remembered a million useless things, a quarrel with a workmate, a hunt for
a lost bicycle pump, the expression on a long-dead sister's face, the
swirls of dust on a windy morning seventy years ago: but all the relevant
facts were outside the range of their vision. They were like the ant,
which can see small objects but not large ones. And when memory failed and
written records were falsified--when that happened, the claim of the Party
to have improved the conditions of human life had got to be accepted,
because there did not exist, and never again could exist, any standard
against which it could be tested.

At this moment his train of thought stopped abruptly. He halted and looked
up. He was in a narrow street, with a few dark little shops, interspersed
among dwelling-houses. Immediately above his head there hung three
discoloured metal balls which looked as if they had once been gilded. He
seemed to know the place. Of course! He was standing outside the junk-shop
where he had bought the diary.

A twinge of fear went through him. It had been a sufficiently rash act to
buy the book in the beginning, and he had sworn never to come near the
place again. And yet the instant that he allowed his thoughts to wander,
his feet had brought him back here of their own accord. It was precisely
against suicidal impulses of this kind that he had hoped to guard himself
by opening the diary. At the same time he noticed that although it was
nearly twenty-one hours the shop was still open. With the feeling that he
would be less conspicuous inside than hanging about on the pavement, he
stepped through the doorway. If questioned, he could plausibly say that
he was trying to buy razor blades.

The proprietor had just lighted a hanging oil lamp which gave off an
unclean but friendly smell. He was a man of perhaps sixty, frail and
bowed, with a long, benevolent nose, and mild eyes distorted by thick
spectacles. His hair was almost white, but his eyebrows were bushy and
still black. His spectacles, his gentle, fussy movements, and the fact
that he was wearing an aged jacket of black velvet, gave him a vague air
of intellectuality, as though he had been some kind of literary man, or
perhaps a musician. His voice was soft, as though faded, and his accent
less debased than that of the majority of proles.

'I recognized you on the pavement,' he said immediately. 'You're the
gentleman that bought the young lady's keepsake album. That was a beautiful
bit of paper, that was. Cream-laid, it used to be called. There's been no
paper like that made for--oh, I dare say fifty years.' He peered at Winston
over the top of his spectacles. 'Is there anything special I can do for
you? Or did you just want to look round?'

'I was passing,' said Winston vaguely. 'I just looked in. I don't want
anything in particular.'

'It's just as well,' said the other, 'because I don't suppose I could have
satisfied you.' He made an apologetic gesture with his softpalmed hand.
'You see how it is; an empty shop, you might say. Between you and me, the
antique trade's just about finished. No demand any longer, and no stock
either. Furniture, china, glass it's all been broken up by degrees. And
of course the metal stuff's mostly been melted down. I haven't seen a brass
candlestick in years.'

The tiny interior of the shop was in fact uncomfortably full, but there
was almost nothing in it of the slightest value. The floorspace was very
restricted, because all round the walls were stacked innumerable dusty
picture-frames. In the window there were trays of nuts and bolts, worn-out
chisels, penknives with broken blades, tarnished watches that did not even
pretend to be in going order, and other miscellaneous rubbish. Only on a
small table in the corner was there a litter of odds and ends--lacquered
snuffboxes, agate brooches, and the like--which looked as though they might
include something interesting. As Winston wandered towards the table his
eye was caught by a round, smooth thing that gleamed softly in the
lamplight, and he picked it up.

It was a heavy lump of glass, curved on one side, flat on the other, making
almost a hemisphere. There was a peculiar softness, as of rainwater, in
both the colour and the texture of the glass. At the heart of it, magnified
by the curved surface, there was a strange, pink, convoluted object that
recalled a rose or a sea anemone.

'What is it?' said Winston, fascinated.

'That's coral, that is,' said the old man. 'It must have come from the
Indian Ocean. They used to kind of embed it in the glass. That wasn't made
less than a hundred years ago. More, by the look of it.'

'It's a beautiful thing,' said Winston.

'It is a beautiful thing,' said the other appreciatively. 'But there's not
many that'd say so nowadays.' He coughed. 'Now, if it so happened that you
wanted to buy it, that'd cost you four dollars. I can remember when a thing
like that would have fetched eight pounds, and eight pounds was--well, I
can't work it out, but it was a lot of money. But who cares about genuine
antiques nowadays--even the few that's left?'

Winston immediately paid over the four dollars and slid the coveted thing
into his pocket. What appealed to him about it was not so much its beauty
as the air it seemed to possess of belonging to an age quite different
from the present one. The soft, rainwatery glass was not like any glass
that he had ever seen. The thing was doubly attractive because of its
apparent uselessness, though he could guess that it must once have been
intended as a paperweight. It was very heavy in his pocket, but fortunately
it did not make much of a bulge. It was a queer thing, even a compromising
thing, for a Party member to have in his possession. Anything old, and for
that matter anything beautiful, was always vaguely suspect. The old man had
grown noticeably more cheerful after receiving the four dollars. Winston
realized that he would have accepted three or even two.

'There's another room upstairs that you might care to take a look at,' he
said. 'There's not much in it. Just a few pieces. We'll do with a light if
we're going upstairs.'

He lit another lamp, and, with bowed back, led the way slowly up the
steep and worn stairs and along a tiny passage, into a room which did
not give on the street but looked out on a cobbled yard and a forest of
chimney-pots. Winston noticed that the furniture was still arranged as
though the room were meant to be lived in. There was a strip of carpet on
the floor, a picture or two on the walls, and a deep, slatternly arm-chair
drawn up to the fireplace. An old-fashioned glass clock with a twelve-hour
face was ticking away on the mantelpiece. Under the window, and occupying
nearly a quarter of the room, was an enormous bed with the mattress still
on it.

'We lived here till my wife died,' said the old man half apologetically.
'I'm selling the furniture off by little and little. Now that's a beautiful
mahogany bed, or at least it would be if you could get the bugs out of it.
But I dare say you'd find it a little bit cumbersome.'

He was holding the lamp high up, so as to illuminate the whole room, and
in the warm dim light the place looked curiously inviting. The thought
flitted through Winston's mind that it would probably be quite easy to
rent the room for a few dollars a week, if he dared to take the risk. It
was a wild, impossible notion, to be abandoned as soon as thought of; but
the room had awakened in him a sort of nostalgia, a sort of ancestral
memory. It seemed to him that he knew exactly what it felt like to sit in
a room like this, in an arm-chair beside an open fire with your feet in
the fender and a kettle on the hob; utterly alone, utterly secure, with
nobody watching you, no voice pursuing you, no sound except the singing
of the kettle and the friendly ticking of the clock.

'There's no telescreen!' he could not help murmuring.

'Ah,' said the old man, 'I never had one of those things. Too expensive.
And I never seemed to feel the need of it, somehow. Now that's a nice
gateleg table in the corner there. Though of course you'd have to put new
hinges on it if you wanted to use the flaps.'

There was a small bookcase in the other corner, and Winston had already
gravitated towards it. It contained nothing but rubbish. The hunting-down
and destruction of books had been done with the same thoroughness in the
prole quarters as everywhere else. It was very unlikely that there existed
anywhere in Oceania a copy of a book printed earlier than 1960. The old
man, still carrying the lamp, was standing in front of a picture in a
rosewood frame which hung on the other side of the fireplace, opposite
the bed.

'Now, if you happen to be interested in old prints at all----' he began
delicately.

Winston came across to examine the picture. It was a steel engraving of an
oval building with rectangular windows, and a small tower in front. There
was a railing running round the building, and at the rear end there was
what appeared to be a statue. Winston gazed at it for some moments. It
seemed vaguely familiar, though he did not remember the statue.

'The frame's fixed to the wall,' said the old man, 'but I could unscrew it
for you, I dare say.'

'I know that building,' said Winston finally. 'It's a ruin now. It's in
the middle of the street outside the Palace of Justice.'

'That's right. Outside the Law Courts. It was bombed in--oh, many years
ago. It was a church at one time, St Clement Danes, its name was.' He
smiled apologetically, as though conscious of saying something slightly
ridiculous, and added: 'Oranges and lemons, say the bells of St Clement's!'

'What's that?' said Winston.

'Oh--"Oranges and lemons, say the bells of St Clement's." That was a rhyme
we had when I was a little boy. How it goes on I don't remember, but I do
know it ended up, "Here comes a candle to light you to bed, Here comes a
chopper to chop off your head." It was a kind of a dance. They held out
their arms for you to pass under, and when they came to "Here comes a
chopper to chop off your head" they brought their arms down and caught you.
It was just names of churches. All the London churches were in it--all the
principal ones, that is.'

Winston wondered vaguely to what century the church belonged. It was always
difficult to determine the age of a London building. Anything large and
impressive, if it was reasonably new in appearance, was automatically
claimed as having been built since the Revolution, while anything that was
obviously of earlier date was ascribed to some dim period called the Middle
Ages. The centuries of capitalism were held to have produced nothing of any
value. One could not learn history from architecture any more than one
could learn it from books. Statues, inscriptions, memorial stones, the
names of streets--anything that might throw light upon the past had been
systematically altered.

'I never knew it had been a church,' he said.

'There's a lot of them left, really,' said the old man, 'though they've
been put to other uses. Now, how did that rhyme go? Ah! I've got it!


  "Oranges and lemons, say the bells of St Clement's,
  You owe me three farthings, say the bells of St Martin's----"


there, now, that's as far as I can get. A farthing, that was a small copper
coin, looked something like a cent.'

'Where was St Martin's?' said Winston.

'St Martin's? That's still standing. It's in Victory Square, alongside the
picture gallery. A building with a kind of a triangular porch and pillars
in front, and a big flight of steps.'

Winston knew the place well. It was a museum used for propaganda displays
of various kinds--scale models of rocket bombs and Floating Fortresses,
waxwork tableaux illustrating enemy atrocities, and the like.

'St Martin's-in-the-Fields it used to be called,' supplemented the old man,
'though I don't recollect any fields anywhere in those parts.'

Winston did not buy the picture. It would have been an even more
incongruous possession than the glass paperweight, and impossible to carry
home, unless it were taken out of its frame. But he lingered for some
minutes more, talking to the old man, whose name, he discovered, was not
Weeks--as one might have gathered from the inscription over the
shop-front--but Charrington. Mr Charrington, it seemed, was a widower aged
sixty-three and had inhabited this shop for thirty years. Throughout that
time he had been intending to alter the name over the window, but had never
quite got to the point of doing it. All the while that they were talking
the half-remembered rhyme kept running through Winston's head. Oranges and
lemons say the bells of St Clement's, You owe me three farthings, say
the bells of St Martin's! It was curious, but when you said it to yourself
you had the illusion of actually hearing bells, the bells of a lost London
that still existed somewhere or other, disguised and forgotten. From one
ghostly steeple after another he seemed to hear them pealing forth. Yet so
far as he could remember he had never in real life heard church bells
ringing.

He got away from Mr Charrington and went down the stairs alone, so as not
to let the old man see him reconnoitring the street before stepping out of
the door. He had already made up his mind that after a suitable
interval--a month, say--he would take the risk of visiting the shop again.
It was perhaps not more dangerous than shirking an evening at the Centre.
The serious piece of folly had been to come back here in the first place,
after buying the diary and without knowing whether the proprietor of the
shop could be trusted. However----!

Yes, he thought again, he would come back. He would buy further scraps of
beautiful rubbish. He would buy the engraving of St Clement Danes, take
it out of its frame, and carry it home concealed under the jacket of his
overalls. He would drag the rest of that poem out of Mr Charrington's
memory. Even the lunatic project of renting the room upstairs flashed
momentarily through his mind again. For perhaps five seconds exaltation
made him careless, and he stepped out on to the pavement without so much
as a preliminary glance through the window. He had even started humming
to an improvised tune


  Oranges and lemons, say the bells of St Clement's,
  You owe me three farthings, say the----


Suddenly his heart seemed to turn to ice and his bowels to water. A figure
in blue overalls was coming down the pavement, not ten metres away. It was
the girl from the Fiction Department, the girl with dark hair. The light
was failing, but there was no difficulty in recognizing her. She looked
him straight in the face, then walked quickly on as though she had not
seen him.

For a few seconds Winston was too paralysed to move. Then he turned to the
right and walked heavily away, not noticing for the moment that he was
going in the wrong direction. At any rate, one question was settled. There
was no doubting any longer that the girl was spying on him. She must have
followed him here, because it was not credible that by pure chance she
should have happened to be walking on the same evening up the same obscure
backstreet, kilometres distant from any quarter where Party members lived.
It was too great a coincidence. Whether she was really an agent of the
Thought Police, or simply an amateur spy actuated by officiousness, hardly
mattered. It was enough that she was watching him. Probably she had seen
him go into the pub as well.

It was an effort to walk. The lump of glass in his pocket banged against
his thigh at each step, and he was half minded to take it out and throw it
away. The worst thing was the pain in his belly. For a couple of minutes
he had the feeling that he would die if he did not reach a lavatory soon.
But there would be no public lavatories in a quarter like this. Then the
spasm passed, leaving a dull ache behind.

The street was a blind alley. Winston halted, stood for several seconds
wondering vaguely what to do, then turned round and began to retrace his
steps. As he turned it occurred to him that the girl had only passed him
three minutes ago and that by running he could probably catch up with her.
He could keep on her track till they were in some quiet place, and then
smash her skull in with a cobblestone. The piece of glass in his pocket
would be heavy enough for the job. But he abandoned the idea immediately,
because even the thought of making any physical effort was unbearable. He
could not run, he could not strike a blow. Besides, she was young and lusty
and would defend herself. He thought also of hurrying to the Community
Centre and staying there till the place closed, so as to establish a
partial alibi for the evening. But that too was impossible. A deadly
lassitude had taken hold of him. All he wanted was to get home quickly and
then sit down and be quiet.

It was after twenty-two hours when he got back to the flat. The lights
would be switched off at the main at twenty-three thirty. He went into the
kitchen and swallowed nearly a teacupful of Victory Gin. Then he went to
the table in the alcove, sat down, and took the diary out of the drawer.
But he did not open it at once. From the telescreen a brassy female voice
was squalling a patriotic song. He sat staring at the marbled cover of the
book, trying without success to shut the voice out of his consciousness.

It was at night that they came for you, always at night. The proper thing
was to kill yourself before they got you. Undoubtedly some people did so.
Many of the disappearances were actually suicides. But it needed desperate
courage to kill yourself in a world where firearms, or any quick and
certain poison, were completely unprocurable. He thought with a kind of
astonishment of the biological uselessness of pain and fear, the treachery
of the human body which always freezes into inertia at exactly the moment
when a special effort is needed. He might have silenced the dark-haired
girl if only he had acted quickly enough: but precisely because of the
extremity of his danger he had lost the power to act. It struck him that
in moments of crisis one is never fighting against an external enemy, but
always against one's own body. Even now, in spite of the gin, the dull
ache in his belly made consecutive thought impossible. And it is the same,
he perceived, in all seemingly heroic or tragic situations. On the
battlefield, in the torture chamber, on a sinking ship, the issues that
you are fighting for are always forgotten, because the body swells up until
it fills the universe, and even when you are not paralysed by fright or
screaming with pain, life is a moment-to-moment struggle against hunger or
cold or sleeplessness, against a sour stomach or an aching tooth.

He opened the diary. It was important to write something down. The woman
on the telescreen had started a new song. Her voice seemed to stick into
his brain like jagged splinters of glass. He tried to think of O'Brien,
for whom, or to whom, the diary was written, but instead he began thinking
of the things that would happen to him after the Thought Police took him
away. It would not matter if they killed you at once. To be killed was
what you expected. But before death (nobody spoke of such things, yet
everybody knew of them) there was the routine of confession that had to
be gone through: the grovelling on the floor and screaming for mercy, the
crack of broken bones, the smashed teeth and bloody clots of hair.

Why did you have to endure it, since the end was always the same? Why was
it not possible to cut a few days or weeks out of your life? Nobody ever
escaped detection, and nobody ever failed to confess. When once you had
succumbed to thoughtcrime it was certain that by a given date you would be
dead. Why then did that horror, which altered nothing, have to lie embedded
in future time?

He tried with a little more success than before to summon up the image of
O'Brien. 'We shall meet in the place where there is no darkness,' O'Brien
had said to him. He knew what it meant, or thought he knew. The place where
there is no darkness was the imagined future, which one would never see,
but which, by foreknowledge, one could mystically share in. But with the
voice from the telescreen nagging at his ears he could not follow the train
of thought further. He put a cigarette in his mouth. Half the tobacco
promptly fell out on to his tongue, a bitter dust which was difficult to
spit out again. The face of Big Brother swam into his mind, displacing that
of O'Brien. Just as he had done a few days earlier, he slid a coin out of
his pocket and looked at it. The face gazed up at him, heavy, calm,
protecting: but what kind of smile was hidden beneath the dark moustache?
Like a leaden knell the words came back at him:


  WAR IS PEACE
  FREEDOM IS SLAVERY
  IGNORANCE IS STRENGTH





PART TWO




Chapter 1



It was the middle of the morning, and Winston had left the cubicle to go
to the lavatory.

A solitary figure was coming towards him from the other end of the long,
brightly-lit corridor. It was the girl with dark hair. Four days had gone
past since the evening when he had run into her outside the junk-shop.
As she came nearer he saw that her right arm was in a sling, not noticeable
at a distance because it was of the same colour as her overalls. Probably
she had crushed her hand while swinging round one of the big kaleidoscopes
on which the plots of novels were 'roughed in'. It was a common accident
in the Fiction Department.

They were perhaps four metres apart when the girl stumbled and fell almost
flat on her face. A sharp cry of pain was wrung out of her. She must have
fallen right on the injured arm. Winston stopped short. The girl had risen
to her knees. Her face had turned a milky yellow colour against which her
mouth stood out redder than ever. Her eyes were fixed on his, with an
appealing expression that looked more like fear than pain.

A curious emotion stirred in Winston's heart. In front of him was an enemy
who was trying to kill him: in front of him, also, was a human creature,
in pain and perhaps with a broken bone. Already he had instinctively
started forward to help her. In the moment when he had seen her fall on
the bandaged arm, it had been as though he felt the pain in his own body.

'You're hurt?' he said.

'It's nothing. My arm. It'll be all right in a second.'

She spoke as though her heart were fluttering. She had certainly turned
very pale.

'You haven't broken anything?'

'No, I'm all right. It hurt for a moment, that's all.'

She held out her free hand to him, and he helped her up. She had regained
some of her colour, and appeared very much better.

'It's nothing,' she repeated shortly. 'I only gave my wrist a bit of a
bang. Thanks, comrade!'

And with that she walked on in the direction in which she had been going,
as briskly as though it had really been nothing. The whole incident could
not have taken as much as half a minute. Not to let one's feelings appear
in one's face was a habit that had acquired the status of an instinct,
and in any case they had been standing straight in front of a telescreen
when the thing happened. Nevertheless it had been very difficult not to
betray a momentary surprise, for in the two or three seconds while he was
helping her up the girl had slipped something into his hand. There was no
question that she had done it intentionally. It was something small and
flat. As he passed through the lavatory door he transferred it to his
pocket and felt it with the tips of his fingers. It was a scrap of paper
folded into a square.

While he stood at the urinal he managed, with a little more fingering, to
get it unfolded. Obviously there must be a message of some kind written on
it. For a moment he was tempted to take it into one of the water-closets
and read it at once. But that would be shocking folly, as he well knew.
There was no place where you could be more certain that the telescreens
were watched continuously.

He went back to his cubicle, sat down, threw the fragment of paper
casually among the other papers on the desk, put on his spectacles and
hitched the speakwrite towards him. 'Five minutes,' he told himself,
'five minutes at the very least!' His heart bumped in his breast with
frightening loudness. Fortunately the piece of work he was engaged on was
mere routine, the rectification of a long list of figures, not needing
close attention.

Whatever was written on the paper, it must have some kind of political
meaning. So far as he could see there were two possibilities. One, much
the more likely, was that the girl was an agent of the Thought Police,
just as he had feared. He did not know why the Thought Police should
choose to deliver their messages in such a fashion, but perhaps they had
their reasons. The thing that was written on the paper might be a threat, a
summons, an order to commit suicide, a trap of some description. But there
was another, wilder possibility that kept raising its head, though he
tried vainly to suppress it. This was, that the message did not come from
the Thought Police at all, but from some kind of underground organization.
Perhaps the Brotherhood existed after all! Perhaps the girl was part of it!
No doubt the idea was absurd, but it had sprung into his mind in the very
instant of feeling the scrap of paper in his hand. It was not till a couple
of minutes later that the other, more probable explanation had occurred to
him. And even now, though his intellect told him that the message probably
meant death--still, that was not what he believed, and the unreasonable
hope persisted, and his heart banged, and it was with difficulty that he
kept his voice from trembling as he murmured his figures into the
speakwrite.

He rolled up the completed bundle of work and slid it into the pneumatic
tube. Eight minutes had gone by. He re-adjusted his spectacles on his nose,
sighed, and drew the next batch of work towards him, with the scrap of
paper on top of it. He flattened it out. On it was written, in a large
unformed handwriting:

I LOVE YOU.

For several seconds he was too stunned even to throw the incriminating
thing into the memory hole. When he did so, although he knew very well the
danger of showing too much interest, he could not resist reading it once
again, just to make sure that the words were really there.

For the rest of the morning it was very difficult to work. What was even
worse than having to focus his mind on a series of niggling jobs was the
need to conceal his agitation from the telescreen. He felt as though a
fire were burning in his belly. Lunch in the hot, crowded, noise-filled
canteen was torment. He had hoped to be alone for a little while during
the lunch hour, but as bad luck would have it the imbecile Parsons flopped
down beside him, the tang of his sweat almost defeating the tinny smell of
stew, and kept up a stream of talk about the preparations for Hate Week.
He was particularly enthusiastic about a papier-mache model of Big
Brother's head, two metres wide, which was being made for the occasion by
his daughter's troop of Spies. The irritating thing was that in the racket
of voices Winston could hardly hear what Parsons was saying, and was
constantly having to ask for some fatuous remark to be repeated. Just once
he caught a glimpse of the girl, at a table with two other girls at the
far end of the room. She appeared not to have seen him, and he did not
look in that direction again.

The afternoon was more bearable. Immediately after lunch there arrived a
delicate, difficult piece of work which would take several hours and
necessitated putting everything else aside. It consisted in falsifying a
series of production reports of two years ago, in such a way as to cast
discredit on a prominent member of the Inner Party, who was now under a
cloud. This was the kind of thing that Winston was good at, and for more
than two hours he succeeded in shutting the girl out of his mind
altogether. Then the memory of her face came back, and with it a raging,
intolerable desire to be alone. Until he could be alone it was impossible
to think this new development out. Tonight was one of his nights at the
Community Centre. He wolfed another tasteless meal in the canteen, hurried
off to the Centre, took part in the solemn foolery of a 'discussion group',
played two games of table tennis, swallowed several glasses of gin, and
sat for half an hour through a lecture entitled 'Ingsoc in relation to
chess'. His soul writhed with boredom, but for once he had had no impulse
to shirk his evening at the Centre. At the sight of the words I LOVE YOU
the desire to stay alive had welled up in him, and the taking of minor
risks suddenly seemed stupid. It was not till twenty-three hours, when he
was home and in bed--in the darkness, where you were safe even from the
telescreen so long as you kept silent--that he was able to think
continuously.

It was a physical problem that had to be solved: how to get in touch with
the girl and arrange a meeting. He did not consider any longer the
possibility that she might be laying some kind of trap for him. He knew
that it was not so, because of her unmistakable agitation when she handed
him the note. Obviously she had been frightened out of her wits, as well
she might be. Nor did the idea of refusing her advances even cross his
mind. Only five nights ago he had contemplated smashing her skull in with
a cobblestone, but that was of no importance. He thought of her naked,
youthful body, as he had seen it in his dream. He had imagined her a fool
like all the rest of them, her head stuffed with lies and hatred, her
belly full of ice. A kind of fever seized him at the thought that he might
lose her, the white youthful body might slip away from him! What he feared
more than anything else was that she would simply change her mind if he
did not get in touch with her quickly. But the physical difficulty of
meeting was enormous. It was like trying to make a move at chess when you
were already mated. Whichever way you turned, the telescreen faced you.
Actually, all the possible ways of communicating with her had occurred to
him within five minutes of reading the note; but now, with time to think,
he went over them one by one, as though laying out a row of instruments
on a table.

Obviously the kind of encounter that had happened this morning could not
be repeated. If she had worked in the Records Department it might have
been comparatively simple, but he had only a very dim idea whereabouts in
the building the Fiction Department lay, and he had no pretext for going
there. If he had known where she lived, and at what time she left work,
he could have contrived to meet her somewhere on her way home; but to try
to follow her home was not safe, because it would mean loitering about
outside the Ministry, which was bound to be noticed. As for sending a
letter through the mails, it was out of the question. By a routine that
was not even secret, all letters were opened in transit. Actually, few
people ever wrote letters. For the messages that it was occasionally
necessary to send, there were printed postcards with long lists of phrases,
and you struck out the ones that were inapplicable. In any case he did not
know the girl's name, let alone her address. Finally he decided that the
safest place was the canteen. If he could get her at a table by herself,
somewhere in the middle of the room, not too near the telescreens, and
with a sufficient buzz of conversation all round--if these conditions
endured for, say, thirty seconds, it might be possible to exchange a few
words.

For a week after this, life was like a restless dream. On the next day she
did not appear in the canteen until he was leaving it, the whistle having
already blown. Presumably she had been changed on to a later shift. They
passed each other without a glance. On the day after that she was in the
canteen at the usual time, but with three other girls and immediately
under a telescreen. Then for three dreadful days she did not appear at
all. His whole mind and body seemed to be afflicted with an unbearable
sensitivity, a sort of transparency, which made every movement, every
sound, every contact, every word that he had to speak or listen to, an
agony. Even in sleep he could not altogether escape from her image. He did
not touch the diary during those days. If there was any relief, it was in
his work, in which he could sometimes forget himself for ten minutes at a
stretch. He had absolutely no clue as to what had happened to her. There
was no enquiry he could make. She might have been vaporized, she might
have committed suicide, she might have been transferred to the other end
of Oceania: worst and likeliest of all, she might simply have changed her
mind and decided to avoid him.

The next day she reappeared. Her arm was out of the sling and she had a
band of sticking-plaster round her wrist. The relief of seeing her was
so great that he could not resist staring directly at her for several
seconds. On the following day he very nearly succeeded in speaking to her.
When he came into the canteen she was sitting at a table well out from the
wall, and was quite alone. It was early, and the place was not very full.
The queue edged forward till Winston was almost at the counter, then was
held up for two minutes because someone in front was complaining that he
had not received his tablet of saccharine. But the girl was still alone
when Winston secured his tray and began to make for her table. He walked
casually towards her, his eyes searching for a place at some table beyond
her. She was perhaps three metres away from him. Another two seconds would
do it. Then a voice behind him called, 'Smith!' He pretended not to hear.
'Smith!' repeated the voice, more loudly. It was no use. He turned round.
A blond-headed, silly-faced young man named Wilsher, whom he barely knew,
was inviting him with a smile to a vacant place at his table. It was not
safe to refuse. After having been recognized, he could not go and sit at
a table with an unattended girl. It was too noticeable. He sat down with
a friendly smile. The silly blond face beamed into his. Winston had a
hallucination of himself smashing a pick-axe right into the middle of it.
The girl's table filled up a few minutes later.

But she must have seen him coming towards her, and perhaps she would take
the hint. Next day he took care to arrive early. Surely enough, she was at
a table in about the same place, and again alone. The person immediately
ahead of him in the queue was a small, swiftly-moving, beetle-like man
with a flat face and tiny, suspicious eyes. As Winston turned away from
the counter with his tray, he saw that the little man was making straight
for the girl's table. His hopes sank again. There was a vacant place at a
table further away, but something in the little man's appearance suggested
that he would be sufficiently attentive to his own comfort to choose the
emptiest table. With ice at his heart Winston followed. It was no use
unless he could get the girl alone. At this moment there was a tremendous
crash. The little man was sprawling on all fours, his tray had gone flying,
two streams of soup and coffee were flowing across the floor. He started
to his feet with a malignant glance at Winston, whom he evidently
suspected of having tripped him up. But it was all right. Five seconds
later, with a thundering heart, Winston was sitting at the girl's table.

He did not look at her. He unpacked his tray and promptly began eating.
It was all-important to speak at once, before anyone else came, but now
a terrible fear had taken possession of him. A week had gone by since
she had first approached him. She would have changed her mind, she must
have changed her mind! It was impossible that this affair should end
successfully; such things did not happen in real life. He might have
flinched altogether from speaking if at this moment he had not seen
Ampleforth, the hairy-eared poet, wandering limply round the room with
a tray, looking for a place to sit down. In his vague way Ampleforth
was attached to Winston, and would certainly sit down at his table if
he caught sight of him. There was perhaps a minute in which to act. Both
Winston and the girl were eating steadily. The stuff they were eating was
a thin stew, actually a soup, of haricot beans. In a low murmur Winston
began speaking. Neither of them looked up; steadily they spooned the
watery stuff into their mouths, and between spoonfuls exchanged the few
necessary words in low expressionless voices.

'What time do you leave work?'

'Eighteen-thirty.'

'Where can we meet?'

'Victory Square, near the monument.'

'It's full of telescreens.'

'It doesn't matter if there's a crowd.'

'Any signal?'

'No. Don't come up to me until you see me among a lot of people. And don't
look at me. Just keep somewhere near me.'

'What time?'

'Nineteen hours.'

'All right.'

Ampleforth failed to see Winston and sat down at another table. They did
not speak again, and, so far as it was possible for two people sitting on
opposite sides of the same table, they did not look at one another. The
girl finished her lunch quickly and made off, while Winston stayed to
smoke a cigarette.

Winston was in Victory Square before the appointed time. He wandered round
the base of the enormous fluted column, at the top of which Big Brother's
statue gazed southward towards the skies where he had vanquished the
Eurasian aeroplanes (the Eastasian aeroplanes, it had been, a few years
ago) in the Battle of Airstrip One. In the street in front of it there was
a statue of a man on horseback which was supposed to represent Oliver
Cromwell. At five minutes past the hour the girl had still not appeared.
Again the terrible fear seized upon Winston. She was not coming, she had
changed her mind! He walked slowly up to the north side of the square and
got a sort of pale-coloured pleasure from identifying St Martin's Church,
whose bells, when it had bells, had chimed 'You owe me three farthings.'
Then he saw the girl standing at the base of the monument, reading or
pretending to read a poster which ran spirally up the column. It was not
safe to go near her until some more people had accumulated. There were
telescreens all round the pediment. But at this moment there was a din of
shouting and a zoom of heavy vehicles from somewhere to the left. Suddenly
everyone seemed to be running across the square. The girl nipped nimbly
round the lions at the base of the monument and joined in the rush.
Winston followed. As he ran, he gathered from some shouted remarks that
a convoy of Eurasian prisoners was passing.

Already a dense mass of people was blocking the south side of the square.
Winston, at normal times the kind of person who gravitates to the outer
edge of any kind of scrimmage, shoved, butted, squirmed his way forward
into the heart of the crowd. Soon he was within arm's length of the girl,
but the way was blocked by an enormous prole and an almost equally enormous
woman, presumably his wife, who seemed to form an impenetrable wall of
flesh. Winston wriggled himself sideways, and with a violent lunge managed
to drive his shoulder between them. For a moment it felt as though his
entrails were being ground to pulp between the two muscular hips, then he
had broken through, sweating a little. He was next to the girl. They were
shoulder to shoulder, both staring fixedly in front of them.

A long line of trucks, with wooden-faced guards armed with sub-machine
guns standing upright in each corner, was passing slowly down the street.
In the trucks little yellow men in shabby greenish uniforms were squatting,
jammed close together. Their sad, Mongolian faces gazed out over the sides
of the trucks utterly incurious. Occasionally when a truck jolted there
was a clank-clank of metal: all the prisoners were wearing leg-irons.
Truck-load after truck-load of the sad faces passed. Winston knew they
were there but he saw them only intermittently. The girl's shoulder, and
her arm right down to the elbow, were pressed against his. Her cheek was
almost near enough for him to feel its warmth. She had immediately taken
charge of the situation, just as she had done in the canteen. She began
speaking in the same expressionless voice as before, with lips barely
moving, a mere murmur easily drowned by the din of voices and the rumbling
of the trucks.

'Can you hear me?'

'Yes.'

'Can you get Sunday afternoon off?'

'Yes.'

'Then listen carefully. You'll have to remember this. Go to Paddington
Station----'

With a sort of military precision that astonished him, she outlined the
route that he was to follow. A half-hour railway journey; turn left outside
the station; two kilometres along the road; a gate with the top bar
missing; a path across a field; a grass-grown lane; a track between bushes;
a dead tree with moss on it. It was as though she had a map inside her
head. 'Can you remember all that?' she murmured finally.

'Yes.'

'You turn left, then right, then left again. And the gate's got no top bar.'

'Yes. What time?'

'About fifteen. You may have to wait. I'll get there by another way. Are
you sure you remember everything?'

'Yes.'

'Then get away from me as quick as you can.'

She need not have told him that. But for the moment they could not
extricate themselves from the crowd. The trucks were still filing past,
the people still insatiably gaping. At the start there had been a few boos
and hisses, but it came only from the Party members among the crowd, and
had soon stopped. The prevailing emotion was simply curiosity. Foreigners,
whether from Eurasia or from Eastasia, were a kind of strange animal. One
literally never saw them except in the guise of prisoners, and even as
prisoners one never got more than a momentary glimpse of them. Nor did
one know what became of them, apart from the few who were hanged as
war-criminals: the others simply vanished, presumably into forced-labour
camps. The round Mogol faces had given way to faces of a more European
type, dirty, bearded and exhausted. From over scrubby cheekbones eyes
looked into Winston's, sometimes with strange intensity, and flashed away
again. The convoy was drawing to an end. In the last truck he could see an
aged man, his face a mass of grizzled hair, standing upright with wrists
crossed in front of him, as though he were used to having them bound
together. It was almost time for Winston and the girl to part. But at the
last moment, while the crowd still hemmed them in, her hand felt for his
and gave it a fleeting squeeze.

It could not have been ten seconds, and yet it seemed a long time that
their hands were clasped together. He had time to learn every detail
of her hand. He explored the long fingers, the shapely nails, the
work-hardened palm with its row of callouses, the smooth flesh under the
wrist. Merely from feeling it he would have known it by sight. In the
same instant it occurred to him that he did not know what colour the
girl's eyes were. They were probably brown, but people with dark hair
sometimes had blue eyes. To turn his head and look at her would have
been inconceivable folly. With hands locked together, invisible among
the press of bodies, they stared steadily in front of them, and instead
of the eyes of the girl, the eyes of the aged prisoner gazed mournfully
at Winston out of nests of hair.




Chapter 2



Winston picked his way up the lane through dappled light and shade,
stepping out into pools of gold wherever the boughs parted. Under the
trees to the left of him the ground was misty with bluebells. The air
seemed to kiss one's skin. It was the second of May. From somewhere deeper
in the heart of the wood came the droning of ring-doves.

He was a bit early. There had been no difficulties about the journey, and
the girl was so evidently experienced that he was less frightened than he
would normally have been. Presumably she could be trusted to find a safe
place. In general you could not assume that you were much safer in the
country than in London. There were no telescreens, of course, but there
was always the danger of concealed microphones by which your voice might
be picked up and recognized; besides, it was not easy to make a journey
by yourself without attracting attention. For distances of less than
100 kilometres it was not necessary to get your passport endorsed, but
sometimes there were patrols hanging about the railway stations, who
examined the papers of any Party member they found there and asked awkward
questions. However, no patrols had appeared, and on the walk from the
station he had made sure by cautious backward glances that he was not
being followed. The train was full of proles, in holiday mood because of
the summery weather. The wooden-seated carriage in which he travelled was
filled to overflowing by a single enormous family, ranging from a toothless
great-grandmother to a month-old baby, going out to spend an afternoon
with 'in-laws' in the country, and, as they freely explained to Winston,
to get hold of a little black-market butter.

The lane widened, and in a minute he came to the footpath she had told him
of, a mere cattle-track which plunged between the bushes. He had no watch,
but it could not be fifteen yet. The bluebells were so thick underfoot
that it was impossible not to tread on them. He knelt down and began
picking some partly to pass the time away, but also from a vague idea that
he would like to have a bunch of flowers to offer to the girl when they
met. He had got together a big bunch and was smelling their faint sickly
scent when a sound at his back froze him, the unmistakable crackle of a
foot on twigs. He went on picking bluebells. It was the best thing to do.
It might be the girl, or he might have been followed after all. To look
round was to show guilt. He picked another and another. A hand fell
lightly on his shoulder.

He looked up. It was the girl. She shook her head, evidently as a warning
that he must keep silent, then parted the bushes and quickly led the way
along the narrow track into the wood. Obviously she had been that way
before, for she dodged the boggy bits as though by habit. Winston followed,
still clasping his bunch of flowers. His first feeling was relief, but as
he watched the strong slender body moving in front of him, with the scarlet
sash that was just tight enough to bring out the curve of her hips, the
sense of his own inferiority was heavy upon him. Even now it seemed quite
likely that when she turned round and looked at him she would draw back
after all. The sweetness of the air and the greenness of the leaves daunted
him. Already on the walk from the station the May sunshine had made him
feel dirty and etiolated, a creature of indoors, with the sooty dust of
London in the pores of his skin. It occurred to him that till now she had
probably never seen him in broad daylight in the open. They came to the
fallen tree that she had spoken of. The girl hopped over and forced apart
the bushes, in which there did not seem to be an opening. When Winston
followed her, he found that they were in a natural clearing, a tiny grassy
knoll surrounded by tall saplings that shut it in completely. The girl
stopped and turned.

'Here we are,' she said.

He was facing her at several paces' distance. As yet he did not dare move
nearer to her.

'I didn't want to say anything in the lane,' she went on, 'in case there's
a mike hidden there. I don't suppose there is, but there could be. There's
always the chance of one of those swine recognizing your voice. We're all
right here.'

He still had not the courage to approach her. 'We're all right here?'
he repeated stupidly.

'Yes. Look at the trees.' They were small ashes, which at some time had
been cut down and had sprouted up again into a forest of poles, none of
them thicker than one's wrist. 'There's nothing big enough to hide a mike
in. Besides, I've been here before.'

They were only making conversation. He had managed to move closer to her
now. She stood before him very upright, with a smile on her face that
looked faintly ironical, as though she were wondering why he was so slow
to act. The bluebells had cascaded on to the ground. They seemed to have
fallen of their own accord. He took her hand.

'Would you believe,' he said, 'that till this moment I didn't know what
colour your eyes were?' They were brown, he noted, a rather light shade of
brown, with dark lashes. 'Now that you've seen what I'm really like,
can you still bear to look at me?'

'Yes, easily.'

'I'm thirty-nine years old. I've got a wife that I can't get rid of. I've
got varicose veins. I've got five false teeth.'

'I couldn't care less,' said the girl.

The next moment, it was hard to say by whose act, she was in his arms.
At the beginning he had no feeling except sheer incredulity. The youthful
body was strained against his own, the mass of dark hair was against his
face, and yes! actually she had turned her face up and he was kissing the
wide red mouth. She had clasped her arms about his neck, she was calling
him darling, precious one, loved one. He had pulled her down on to the
ground, she was utterly unresisting, he could do what he liked with her.
But the truth was that he had no physical sensation, except that of mere
contact. All he felt was incredulity and pride. He was glad that this was
happening, but he had no physical desire. It was too soon, her youth and
prettiness had frightened him, he was too much used to living without
women--he did not know the reason. The girl picked herself up and pulled a
bluebell out of her hair. She sat against him, putting her arm round his
waist.

'Never mind, dear. There's no hurry. We've got the whole afternoon. Isn't
this a splendid hide-out? I found it when I got lost once on a community
hike. If anyone was coming you could hear them a hundred metres away.'

'What is your name?' said Winston.

'Julia. I know yours. It's Winston--Winston Smith.'

'How did you find that out?'

'I expect I'm better at finding things out than you are, dear. Tell me,
what did you think of me before that day I gave you the note?'

He did not feel any temptation to tell lies to her. It was even a sort of
love-offering to start off by telling the worst.

'I hated the sight of you,' he said. 'I wanted to rape you and then murder
you afterwards. Two weeks ago I thought seriously of smashing your head in
with a cobblestone. If you really want to know, I imagined that you had
something to do with the Thought Police.'

The girl laughed delightedly, evidently taking this as a
tribute to the excellence of her disguise.

'Not the Thought Police! You didn't honestly think that?'

'Well, perhaps not exactly that. But from your general appearance--merely
because you're young and fresh and healthy, you understand--I thought that
probably----'

'You thought I was a good Party member. Pure in word and deed. Banners,
processions, slogans, games, community hikes all that stuff. And you
thought that if I had a quarter of a chance I'd denounce you as a
thought-criminal and get you killed off?'

'Yes, something of that kind. A great many young girls are like that,
you know.'

'It's this bloody thing that does it,' she said, ripping off the scarlet
sash of the Junior Anti-Sex League and flinging it on to a bough. Then,
as though touching her waist had reminded her of something, she felt in
the pocket of her overalls and produced a small slab of chocolate. She
broke it in half and gave one of the pieces to Winston. Even before he had
taken it he knew by the smell that it was very unusual chocolate. It was
dark and shiny, and was wrapped in silver paper. Chocolate normally was
dull-brown crumbly stuff that tasted, as nearly as one could describe it,
like the smoke of a rubbish fire. But at some time or another he had tasted
chocolate like the piece she had given him. The first whiff of its scent
had stirred up some memory which he could not pin down, but which was
powerful and troubling.

'Where did you get this stuff?' he said.

'Black market,' she said indifferently. 'Actually I am that sort of girl,
to look at. I'm good at games. I was a troop-leader in the Spies. I do
voluntary work three evenings a week for the Junior Anti-Sex League. Hours
and hours I've spent pasting their bloody rot all over London. I always
carry one end of a banner in the processions. I always look cheerful and
I never shirk anything. Always yell with the crowd, that's what I say.
It's the only way to be safe.'

The first fragment of chocolate had melted on Winston's tongue. The taste
was delightful. But there was still that memory moving round the edges of
his consciousness, something strongly felt but not reducible to definite
shape, like an object seen out of the corner of one's eye. He pushed it
away from him, aware only that it was the memory of some action which he
would have liked to undo but could not.

'You are very young,' he said. 'You are ten or fifteen years younger than
I am. What could you see to attract you in a man like me?'

'It was something in your face. I thought I'd take a chance. I'm good at
spotting people who don't belong. As soon as I saw you I knew you were
against THEM.'

THEM, it appeared, meant the Party, and above all the Inner Party, about
whom she talked with an open jeering hatred which made Winston feel uneasy,
although he knew that they were safe here if they could be safe anywhere.
A thing that astonished him about her was the coarseness of her language.
Party members were supposed not to swear, and Winston himself very seldom
did swear, aloud, at any rate. Julia, however, seemed unable to mention
the Party, and especially the Inner Party, without using the kind of words
that you saw chalked up in dripping alley-ways. He did not dislike it. It
was merely one symptom of her revolt against the Party and all its ways,
and somehow it seemed natural and healthy, like the sneeze of a horse that
smells bad hay. They had left the clearing and were wandering again
through the chequered shade, with their arms round each other's waists
whenever it was wide enough to walk two abreast. He noticed how much
softer her waist seemed to feel now that the sash was gone. They did not
speak above a whisper. Outside the clearing, Julia said, it was better to
go quietly. Presently they had reached the edge of the little wood. She
stopped him.

'Don't go out into the open. There might be someone watching. We're all
right if we keep behind the boughs.'

They were standing in the shade of hazel bushes. The sunlight, filtering
through innumerable leaves, was still hot on their faces. Winston looked
out into the field beyond, and underwent a curious, slow shock of
recognition. He knew it by sight. An old, close-bitten pasture, with a
footpath wandering across it and a molehill here and there. In the ragged
hedge on the opposite side the boughs of the elm trees swayed just
perceptibly in the breeze, and their leaves stirred faintly in dense
masses like women's hair. Surely somewhere nearby, but out of sight,
there must be a stream with green pools where dace were swimming?

'Isn't there a stream somewhere near here?' he whispered.

'That's right, there is a stream. It's at the edge of the next field,
actually. There are fish in it, great big ones. You can watch them lying
in the pools under the willow trees, waving their tails.'

'It's the Golden Country--almost,' he murmured.

'The Golden Country?'

'It's nothing, really. A landscape I've seen sometimes in a dream.'

'Look!' whispered Julia.

A thrush had alighted on a bough not five metres away, almost at the level
of their faces. Perhaps it had not seen them. It was in the sun, they in
the shade. It spread out its wings, fitted them carefully into place
again, ducked its head for a moment, as though making a sort of obeisance
to the sun, and then began to pour forth a torrent of song. In the
afternoon hush the volume of sound was startling. Winston and Julia clung
together, fascinated. The music went on and on, minute after minute, with
astonishing variations, never once repeating itself, almost as though the
bird were deliberately showing off its virtuosity. Sometimes it stopped
for a few seconds, spread out and resettled its wings, then swelled its
speckled breast and again burst into song. Winston watched it with a sort
of vague reverence. For whom, for what, was that bird singing? No mate,
no rival was watching it. What made it sit at the edge of the lonely wood
and pour its music into nothingness? He wondered whether after all there
was a microphone hidden somewhere near. He and Julia had spoken only in
low whispers, and it would not pick up what they had said, but it would
pick up the thrush. Perhaps at the other end of the instrument some small,
beetle-like man was listening intently--listening to that. But by degrees
the flood of music drove all speculations out of his mind. It was as
though it were a kind of liquid stuff that poured all over him and got
mixed up with the sunlight that filtered through the leaves. He stopped
thinking and merely felt. The girl's waist in the bend of his arm was soft
and warm. He pulled her round so that they were breast to breast; her body
seemed to melt into his. Wherever his hands moved it was all as yielding as
water. Their mouths clung together; it was quite different from the hard
kisses they had exchanged earlier. When they moved their faces apart again
both of them sighed deeply. The bird took fright and fled with a clatter
of wings.

Winston put his lips against her ear. 'NOW,' he whispered.

'Not here,' she whispered back. 'Come back to the hide-out. It's safer.'

Quickly, with an occasional crackle of twigs, they threaded their way back
to the clearing. When they were once inside the ring of saplings she turned
and faced him. They were both breathing fast, but the smile had reappeared
round the corners of her mouth. She stood looking at him for an instant,
then felt at the zipper of her overalls. And, yes! it was almost as in his
dream. Almost as swiftly as he had imagined it, she had torn her clothes
off, and when she flung them aside it was with that same magnificent
gesture by which a whole civilization seemed to be annihilated. Her body
gleamed white in the sun. But for a moment he did not look at her body;
his eyes were anchored by the freckled face with its faint, bold smile.
He knelt down before her and took her hands in his.

'Have you done this before?'

'Of course. Hundreds of times--well, scores of times, anyway.'

'With Party members?'

'Yes, always with Party members.'

'With members of the Inner Party?'

'Not with those swine, no. But there's plenty that WOULD if they got half
a chance. They're not so holy as they make out.'

His heart leapt. Scores of times she had done it: he wished it had been
hundreds--thousands. Anything that hinted at corruption always filled him
with a wild hope. Who knew, perhaps the Party was rotten under the surface,
its cult of strenuousness and self-denial simply a sham concealing
iniquity. If he could have infected the whole lot of them with leprosy or
syphilis, how gladly he would have done so! Anything to rot, to weaken, to
undermine! He pulled her down so that they were kneeling face to face.

'Listen. The more men you've had, the more I love you. Do you understand
that?'

'Yes, perfectly.'

'I hate purity, I hate goodness! I don't want any virtue to exist anywhere.
I want everyone to be corrupt to the bones.'

'Well then, I ought to suit you, dear. I'm corrupt to the bones.'

'You like doing this? I don't mean simply me: I mean the thing in itself?'

'I adore it.'

That was above all what he wanted to hear. Not merely the love of one
person but the animal instinct, the simple undifferentiated desire: that
was the force that would tear the Party to pieces. He pressed her down
upon the grass, among the fallen bluebells. This time there was no
difficulty. Presently the rising and falling of their breasts slowed to
normal speed, and in a sort of pleasant helplessness they fell apart. The
sun seemed to have grown hotter. They were both sleepy. He reached out for
the discarded overalls and pulled them partly over her. Almost immediately
they fell asleep and slept for about half an hour.

Winston woke first. He sat up and watched the freckled face, still
peacefully asleep, pillowed on the palm of her hand. Except for her mouth,
you could not call her beautiful. There was a line or two round the eyes,
if you looked closely. The short dark hair was extraordinarily thick and
soft. It occurred to him that he still did not know her surname or where
she lived.

The young, strong body, now helpless in sleep, awoke in him a pitying,
protecting feeling. But the mindless tenderness that he had felt under
the hazel tree, while the thrush was singing, had not quite come back.
He pulled the overalls aside and studied her smooth white flank. In the
old days, he thought, a man looked at a girl's body and saw that it was
desirable, and that was the end of the story. But you could not have pure
love or pure lust nowadays. No emotion was pure, because everything was
mixed up with fear and hatred. Their embrace had been a battle, the climax
a victory. It was a blow struck against the Party. It was a political act.




Chapter 3



'We can come here once again,' said Julia. 'It's generally safe to use any
hide-out twice. But not for another month or two, of course.'

As soon as she woke up her demeanour had changed. She became alert and
business-like, put her clothes on, knotted the scarlet sash about her
waist, and began arranging the details of the journey home. It seemed
natural to leave this to her. She obviously had a practical cunning which
Winston lacked, and she seemed also to have an exhaustive knowledge of the
countryside round London, stored away from innumerable community hikes.
The route she gave him was quite different from the one by which he had
come, and brought him out at a different railway station. 'Never go home
the same way as you went out,' she said, as though enunciating an important
general principle. She would leave first, and Winston was to wait half an
hour before following her.

She had named a place where they could meet after work, four evenings
hence. It was a street in one of the poorer quarters, where there was an
open market which was generally crowded and noisy. She would be hanging
about among the stalls, pretending to be in search of shoelaces or
sewing-thread. If she judged that the coast was clear she would blow
her nose when he approached; otherwise he was to walk past her without
recognition. But with luck, in the middle of the crowd, it would be
safe to talk for a quarter of an hour and arrange another meeting.

'And now I must go,' she said as soon as he had mastered his instructions.
'I'm due back at nineteen-thirty. I've got to put in two hours for the
Junior Anti-Sex League, handing out leaflets, or something. Isn't it
bloody? Give me a brush-down, would you? Have I got any twigs in my hair?
Are you sure? Then good-bye, my love, good-bye!'

She flung herself into his arms, kissed him almost violently, and a moment
later pushed her way through the saplings and disappeared into the wood
with very little noise. Even now he had not found out her surname or her
address. However, it made no difference, for it was inconceivable that
they could ever meet indoors or exchange any kind of written communication.

As it happened, they never went back to the clearing in the wood. During
the month of May there was only one further occasion on which they actually
succeeded in making love. That was in another hiding-place known to Julia,
the belfry of a ruinous church in an almost-deserted stretch of country
where an atomic bomb had fallen thirty years earlier. It was a good
hiding-place when once you got there, but the getting there was very
dangerous. For the rest they could meet only in the streets, in a different
place every evening and never for more than half an hour at a time. In the
street it was usually possible to talk, after a fashion. As they drifted
down the crowded pavements, not quite abreast and never looking at one
another, they carried on a curious, intermittent conversation which flicked
on and off like the beams of a lighthouse, suddenly nipped into silence
by the approach of a Party uniform or the proximity of a telescreen, then
taken up again minutes later in the middle of a sentence, then abruptly
cut short as they parted at the agreed spot, then continued almost without
introduction on the following day. Julia appeared to be quite used to this
kind of conversation, which she called 'talking by instalments'. She was
also surprisingly adept at speaking without moving her lips. Just once in
almost a month of nightly meetings they managed to exchange a kiss. They
were passing in silence down a side-street (Julia would never speak when
they were away from the main streets) when there was a deafening roar, the
earth heaved, and the air darkened, and Winston found himself lying on his
side, bruised and terrified. A rocket bomb must have dropped quite near at
hand. Suddenly he became aware of Julia's face a few centimetres from his
own, deathly white, as white as chalk. Even her lips were white. She was
dead! He clasped her against him and found that he was kissing a live
warm face. But there was some powdery stuff that got in the way of his
lips. Both of their faces were thickly coated with plaster.

There were evenings when they reached their rendezvous and then had to
walk past one another without a sign, because a patrol had just come round
the corner or a helicopter was hovering overhead. Even if it had been
less dangerous, it would still have been difficult to find time to meet.
Winston's working week was sixty hours, Julia's was even longer, and
their free days varied according to the pressure of work and did not
often coincide. Julia, in any case, seldom had an evening completely free.
She spent an astonishing amount of time in attending lectures and
demonstrations, distributing literature for the junior Anti-Sex League,
preparing banners for Hate Week, making collections for the savings
campaign, and such-like activities. It paid, she said, it was camouflage.
If you kept the small rules, you could break the big ones. She even induced
Winston to mortgage yet another of his evenings by enrolling himself for
the part-time munition work which was done voluntarily by zealous Party
members. So, one evening every week, Winston spent four hours of paralysing
boredom, screwing together small bits of metal which were probably parts
of bomb fuses, in a draughty, ill-lit workshop where the knocking of
hammers mingled drearily with the music of the telescreens.

When they met in the church tower the gaps in their fragmentary
conversation were filled up. It was a blazing afternoon. The air in the
little square chamber above the bells was hot and stagnant, and smelt
overpoweringly of pigeon dung. They sat talking for hours on the dusty,
twig-littered floor, one or other of them getting up from time to time to
cast a glance through the arrowslits and make sure that no one was coming.

Julia was twenty-six years old. She lived in a hostel with thirty other
girls ('Always in the stink of women! How I hate women!' she said
parenthetically), and she worked, as he had guessed, on the novel-writing
machines in the Fiction Department. She enjoyed her work, which consisted
chiefly in running and servicing a powerful but tricky electric motor.
She was 'not clever', but was fond of using her hands and felt at home
with machinery. She could describe the whole process of composing a novel,
from the general directive issued by the Planning Committee down to the
final touching-up by the Rewrite Squad. But she was not interested in the
finished product. She 'didn't much care for reading,' she said. Books were
just a commodity that had to be produced, like jam or bootlaces.

She had no memories of anything before the early sixties and the only
person she had ever known who talked frequently of the days before the
Revolution was a grandfather who had disappeared when she was eight. At
school she had been captain of the hockey team and had won the gymnastics
trophy two years running. She had been a troop-leader in the Spies and a
branch secretary in the Youth League before joining the Junior Anti-Sex
League. She had always borne an excellent character. She had even (an
infallible mark of good reputation) been picked out to work in Pornosec,
the sub-section of the Fiction Department which turned out cheap
pornography for distribution among the proles. It was nicknamed Muck House
by the people who worked in it, she remarked. There she had remained for
a year, helping to produce booklets in sealed packets with titles like
'Spanking Stories' or 'One Night in a Girls' School', to be bought
furtively by proletarian youths who were under the impression that they
were buying something illegal.

'What are these books like?' said Winston curiously.

'Oh, ghastly rubbish. They're boring, really. They only have six plots,
but they swap them round a bit. Of course I was only on the kaleidoscopes.
I was never in the Rewrite Squad. I'm not literary, dear--not even enough
for that.'

He learned with astonishment that all the workers in Pornosec, except the
heads of the departments, were girls. The theory was that men, whose sex
instincts were less controllable than those of women, were in greater
danger of being corrupted by the filth they handled.

'They don't even like having married women there,' she added. Girls are
always supposed to be so pure. Here's one who isn't, anyway.

She had had her first love-affair when she was sixteen, with a Party member
of sixty who later committed suicide to avoid arrest. 'And a good job too,'
said Julia, 'otherwise they'd have had my name out of him when he
confessed.' Since then there had been various others. Life as she saw it
was quite simple. You wanted a good time; 'they', meaning the Party,
wanted to stop you having it; you broke the rules as best you could. She
seemed to think it just as natural that 'they' should want to rob you of
your pleasures as that you should want to avoid being caught. She hated
the Party, and said so in the crudest words, but she made no general
criticism of it. Except where it touched upon her own life she had no
interest in Party doctrine. He noticed that she never used Newspeak words
except the ones that had passed into everyday use. She had never heard of
the Brotherhood, and refused to believe in its existence. Any kind of
organized revolt against the Party, which was bound to be a failure,
struck her as stupid. The clever thing was to break the rules and stay
alive all the same. He wondered vaguely how many others like her there
might be in the younger generation people who had grown up in the world of
the Revolution, knowing nothing else, accepting the Party as something
unalterable, like the sky, not rebelling against its authority but simply
evading it, as a rabbit dodges a dog.

They did not discuss the possibility of getting married. It was too remote
to be worth thinking about. No imaginable committee would ever sanction
such a marriage even if Katharine, Winston's wife, could somehow have been
got rid of. It was hopeless even as a daydream.

'What was she like, your wife?' said Julia.

'She was--do you know the Newspeak word GOODTHINKFUL? Meaning naturally
orthodox, incapable of thinking a bad thought?'

'No, I didn't know the word, but I know the kind of person, right enough.'

He began telling her the story of his married life, but curiously enough
she appeared to know the essential parts of it already. She described
to him, almost as though she had seen or felt it, the stiffening of
Katharine's body as soon as he touched her, the way in which she still
seemed to be pushing him from her with all her strength, even when her
arms were clasped tightly round him. With Julia he felt no difficulty in
talking about such things: Katharine, in any case, had long ceased to be
a painful memory and became merely a distasteful one.

'I could have stood it if it hadn't been for one thing,' he said. He told
her about the frigid little ceremony that Katharine had forced him to go
through on the same night every week. 'She hated it, but nothing would
make her stop doing it. She used to call it--but you'll never guess.'

'Our duty to the Party,' said Julia promptly.

'How did you know that?'

'I've been at school too, dear. Sex talks once a month for the
over-sixteens. And in the Youth Movement. They rub it into you for years.
I dare say it works in a lot of cases. But of course you can never tell;
people are such hypocrites.'

She began to enlarge upon the subject. With Julia, everything came back
to her own sexuality. As soon as this was touched upon in any way she was
capable of great acuteness. Unlike Winston, she had grasped the inner
meaning of the Party's sexual puritanism. It was not merely that the sex
instinct created a world of its own which was outside the Party's control
and which therefore had to be destroyed if possible. What was more
important was that sexual privation induced hysteria, which was desirable
because it could be transformed into war-fever and leader-worship. The way
she put it was:

'When you make love you're using up energy; and afterwards you feel happy
and don't give a damn for anything. They can't bear you to feel like that.
They want you to be bursting with energy all the time. All this marching
up and down and cheering and waving flags is simply sex gone sour. If
you're happy inside yourself, why should you get excited about Big Brother
and the Three-Year Plans and the Two Minutes Hate and all the rest of
their bloody rot?'

That was very true, he thought. There was a direct intimate connexion
between chastity and political orthodoxy. For how could the fear, the
hatred, and the lunatic credulity which the Party needed in its members be
kept at the right pitch, except by bottling down some powerful instinct
and using it as a driving force? The sex impulse was dangerous to the
Party, and the Party had turned it to account. They had played a similar
trick with the instinct of parenthood. The family could not actually be
abolished, and, indeed, people were encouraged to be fond of their
children, in almost the old-fashioned way. The children, on the other hand,
were systematically turned against their parents and taught to spy on them
and report their deviations. The family had become in effect an extension
of the Thought Police. It was a device by means of which everyone could be
surrounded night and day by informers who knew him intimately.

Abruptly his mind went back to Katharine. Katharine would unquestionably
have denounced him to the Thought Police if she had not happened to be too
stupid to detect the unorthodoxy of his opinions. But what really recalled
her to him at this moment was the stifling heat of the afternoon, which
had brought the sweat out on his forehead. He began telling Julia of
something that had happened, or rather had failed to happen, on another
sweltering summer afternoon, eleven years ago.

It was three or four months after they were married. They had lost their
way on a community hike somewhere in Kent. They had only lagged behind
the others for a couple of minutes, but they took a wrong turning, and
presently found themselves pulled up short by the edge of an old chalk
quarry. It was a sheer drop of ten or twenty metres, with boulders at the
bottom. There was nobody of whom they could ask the way. As soon as she
realized that they were lost Katharine became very uneasy. To be away
from the noisy mob of hikers even for a moment gave her a feeling of
wrong-doing. She wanted to hurry back by the way they had come and start
searching in the other direction. But at this moment Winston noticed some
tufts of loosestrife growing in the cracks of the cliff beneath them.
One tuft was of two colours, magenta and brick-red, apparently growing on
the same root. He had never seen anything of the kind before, and he called
to Katharine to come and look at it.

'Look, Katharine! Look at those flowers. That clump down near the bottom.
Do you see they're two different colours?'

She had already turned to go, but she did rather fretfully come back for
a moment. She even leaned out over the cliff face to see where he was
pointing. He was standing a little behind her, and he put his hand on
her waist to steady her. At this moment it suddenly occurred to him how
completely alone they were. There was not a human creature anywhere, not a
leaf stirring, not even a bird awake. In a place like this the danger that
there would be a hidden microphone was very small, and even if there was a
microphone it would only pick up sounds. It was the hottest sleepiest hour
of the afternoon. The sun blazed down upon them, the sweat tickled his
face. And the thought struck him...

'Why didn't you give her a good shove?' said Julia. 'I would have.'

'Yes, dear, you would have. I would, if I'd been the same person then as
I am now. Or perhaps I would--I'm not certain.'

'Are you sorry you didn't?'

'Yes. On the whole I'm sorry I didn't.'

They were sitting side by side on the dusty floor. He pulled her closer
against him. Her head rested on his shoulder, the pleasant smell of her
hair conquering the pigeon dung. She was very young, he thought, she
still expected something from life, she did not understand that to push
an inconvenient person over a cliff solves nothing.

'Actually it would have made no difference,' he said.

'Then why are you sorry you didn't do it?'

'Only because I prefer a positive to a negative. In this game that we're
playing, we can't win. Some kinds of failure are better than other kinds,
that's all.'

He felt her shoulders give a wriggle of dissent. She always contradicted
him when he said anything of this kind. She would not accept it as a law
of nature that the individual is always defeated. In a way she realized
that she herself was doomed, that sooner or later the Thought Police would
catch her and kill her, but with another part of her mind she believed
that it was somehow possible to construct a secret world in which you could
live as you chose. All you needed was luck and cunning and boldness. She
did not understand that there was no such thing as happiness, that the
only victory lay in the far future, long after you were dead, that from
the moment of declaring war on the Party it was better to think of yourself
as a corpse.

'We are the dead,' he said.

'We're not dead yet,' said Julia prosaically.

'Not physically. Six months, a year--five years, conceivably. I am afraid
of death. You are young, so presumably you're more afraid of it than I am.
Obviously we shall put it off as long as we can. But it makes very little
difference. So long as human beings stay human, death and life are the
same thing.'

'Oh, rubbish! Which would you sooner sleep with, me or a skeleton? Don't
you enjoy being alive? Don't you like feeling: This is me, this is my hand,
this is my leg, I'm real, I'm solid, I'm alive! Don't you like THIS?'

She twisted herself round and pressed her bosom against him. He could feel
her breasts, ripe yet firm, through her overalls. Her body seemed to be
pouring some of its youth and vigour into his.

'Yes, I like that,' he said.

'Then stop talking about dying. And now listen, dear, we've got to fix
up about the next time we meet. We may as well go back to the place in
the wood. We've given it a good long rest. But you must get there by a
different way this time. I've got it all planned out. You take the
train--but look, I'll draw it out for you.'

And in her practical way she scraped together a small square of dust,
and with a twig from a pigeon's nest began drawing a map on the floor.




Chapter 4



Winston looked round the shabby little room above Mr Charrington's shop.
Beside the window the enormous bed was made up, with ragged blankets and
a coverless bolster. The old-fashioned clock with the twelve-hour face was
ticking away on the mantelpiece. In the corner, on the gateleg table, the
glass paperweight which he had bought on his last visit gleamed softly out
of the half-darkness.

In the fender was a battered tin oilstove, a saucepan, and two cups,
provided by Mr Charrington. Winston lit the burner and set a pan of water
to boil. He had brought an envelope full of Victory Coffee and some
saccharine tablets. The clock's hands said seventeen-twenty: it was
nineteen-twenty really. She was coming at nineteen-thirty.

Folly, folly, his heart kept saying: conscious, gratuitous, suicidal folly.
Of all the crimes that a Party member could commit, this one was the least
possible to conceal. Actually the idea had first floated into his head in
the form of a vision, of the glass paperweight mirrored by the surface
of the gateleg table. As he had foreseen, Mr Charrington had made no
difficulty about letting the room. He was obviously glad of the few dollars
that it would bring him. Nor did he seem shocked or become offensively
knowing when it was made clear that Winston wanted the room for the purpose
of a love-affair. Instead he looked into the middle distance and spoke in
generalities, with so delicate an air as to give the impression that he
had become partly invisible. Privacy, he said, was a very valuable thing.
Everyone wanted a place where they could be alone occasionally. And when
they had such a place, it was only common courtesy in anyone else who knew
of it to keep his knowledge to himself. He even, seeming almost to fade
out of existence as he did so, added that there were two entries to the
house, one of them through the back yard, which gave on an alley.

Under the window somebody was singing. Winston peeped out, secure in the"}